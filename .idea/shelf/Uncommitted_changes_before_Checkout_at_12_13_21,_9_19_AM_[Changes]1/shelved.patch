Index: .idea/libraries/Maven__antlr_antlr_2_7_7.xml
===================================================================
diff --git a/.idea/libraries/Maven__antlr_antlr_2_7_7.xml b/.idea/libraries/Maven__antlr_antlr_2_7_7.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__antlr_antlr_2_7_7.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: antlr:antlr:2.7.7">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/antlr/antlr/2.7.7/antlr-2.7.7.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/antlr/antlr/2.7.7/antlr-2.7.7-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/antlr/antlr/2.7.7/antlr-2.7.7-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml b/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: ch.qos.logback:logback-core:1.2.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml b/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: ch.qos.logback:logback-classic:1.2.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/resources/templates/layout.html
===================================================================
diff --git a/src/main/resources/templates/layout.html b/src/main/resources/templates/layout.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/layout.html	
@@ -0,0 +1,19 @@
+<!-- This page is illustrative and contains ideas about HTML layouts -->
+<!DOCTYPE HTML>
+<html xmlns:layout="http://www.w3.org/1999/xhtml" xmlns:th="http://www.w3.org/1999/xhtml" lang="en">
+
+<head>
+    <div th:replace="fragments/head :: headfile" th:remove="tag">Standard head for all pages</div>
+    <div layout:fragment="head" th:remove="tag">Head details are added by ThymeLeaf layout consumer</div>
+    <div layout:fragment="metadata"></div>
+    <link th:href="@{/styles/styles.css}" rel="stylesheet" />
+    <!-- layout contains title to avoid warnings -->
+    <title>...</title>
+</head>
+
+<body>
+    <div th:replace="fragments/nav :: header" th:remove="tag">Standard header</div>
+    <div layout:fragment="body" th:remove="tag">Body details are added by ThymeLeaft layout consumer</div>
+    <div th:replace="fragments/footer :: footer" th:remove="tag">Standard footer</div>
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/templates/index.html
===================================================================
diff --git a/src/main/resources/templates/index.html b/src/main/resources/templates/index.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/index.html	
@@ -0,0 +1,38 @@
+<!-- This page is illustrative and contains ideas about HTML formatting -->
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+    <!-- Page specific head additions -->
+    <title>Spring Intro</title>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:remove="tag">
+    <!-- Page specific body additions -->
+    <div id="spring_intro" class="articles" style="margin: 30px;">
+        <h1><strong>Java and Spring</strong></h1>
+        <h3><strong>What is Spring?</strong></h3>
+        <ol>
+            <li>Spring Framework is the most popular application development framework of Java. </li>
+            <li>Spring Boot helps to create a stand-alone application with less configuration.</li>
+            <li>Spring MVC is a model view controller-based web framework under the Spring framework.</li>
+            <li>ThymeLeaf is a server-side Java template engine, support HTML5 JVM web development, and provides full integration with Spring Framework.</li>
+        </ol>
+        <h3><strong>What should Java Developers learn?</strong></h3>
+        <ol>
+            <li>Development DevOps. Java programmers should have a passion for managing the environment and learning automation (Maven, Gradle, DevOps, Deployment).</li>
+            <li>Git/GitHub.  Learning to master managing change, forks or branches, pull requests.</li>
+            <li>REST services using Spring.  Mastering creating and consuming RESTful APIs</li>
+            <li>Microservices are nothing but an extension of RESTful Web services with the main objective being to break up your code into small, distributed, and independent services.</li>
+            <li>Java 9-15. Java 8 is AP standard.  Things like Jigsaw, Reactive Streams, Process API, HTTP2 client, JShell, React JS are all more recent</li>
+        </ol>
+    </div>
+    <!-- End of body content specific to page -->
+</div>
+
+</html>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_11_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jsr310_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.11.4/jackson-datatype-jsr310-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.11.4/jackson-datatype-jsr310-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.11.4/jackson-datatype-jsr310-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_11_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_datatype_jackson_datatype_jdk8_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.11.4/jackson-datatype-jdk8-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.11.4/jackson-datatype-jdk8-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.11.4/jackson-datatype-jdk8-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_googlecode_json_simple_json_simple_1_1_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_googlecode_json_simple_json_simple_1_1_1.xml b/.idea/libraries/Maven__com_googlecode_json_simple_json_simple_1_1_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_googlecode_json_simple_json_simple_1_1_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.googlecode.json-simple:json-simple:1.1.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/googlecode/json-simple/json-simple/1.1.1/json-simple-1.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_11_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_module_jackson_module_parameter_names_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/module/jackson-module-parameter-names/2.11.4/jackson-module-parameter-names-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/module/jackson-module-parameter-names/2.11.4/jackson-module-parameter-names-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/module/jackson-module-parameter-names/2.11.4/jackson-module-parameter-names-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_11_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_annotations_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.11.4/jackson-annotations-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.11.4/jackson-annotations-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-annotations/2.11.4/jackson-annotations-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/resources/application.properties
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/application.properties	
@@ -0,0 +1,13 @@
+
+server.error.whitelabel.enabled=false
+spring.jpa.database-platform=com.nighthawk.csa.data.SQL.SQLDialect
+spring.jpa.hibernate.ddl-auto=update
+
+#spring.datasource.url = jdbc:sqlite://localhost:3306/techjobs_auth
+#spring.datasource.driver-class-name = org.sqlite.JDBC
+
+spring.datasource.username = techjobs_auth
+spring.datasource.password = auth
+
+logging.level.root=WARN
+
Index: .idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml b/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml:classmate:1.5.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/classmate/1.5.1/classmate-1.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/classmate/1.5.1/classmate-1.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_11_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_11_1.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_11_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_databind_2_11_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.11.1/jackson-databind-2.11.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.11.1/jackson-databind-2.11.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-databind/2.11.1/jackson-databind-2.11.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_11_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_11_4.xml b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_11_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_fasterxml_jackson_core_jackson_core_2_11_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.11.4/jackson-core-2.11.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.11.4/jackson-core-2.11.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/fasterxml/jackson/core/jackson-core/2.11.4/jackson-core-2.11.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: pom.xml
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	
+++ b/pom.xml	
@@ -0,0 +1,152 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.4.4</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>com.code</groupId>
+    <artifactId>coders</artifactId>
+    <version>0.0.1-SNAPSHOT</version>
+    <name>coders</name>
+    <description>CSA project for Spring Boot</description>
+    <properties>
+        <java.version>11</java.version>
+        <!-- Thymeleaf 3 -->
+        <org.thymeleaf-version>3.0.12.RELEASE</org.thymeleaf-version>
+        <org.thymeleaf.extras.springsecurity4-version>3.0.2.RELEASE</org.thymeleaf.extras.springsecurity4-version>
+        <nz.net.ultraq.thymeleaflayout-version>2.3.0</nz.net.ultraq.thymeleaflayout-version>
+        <thymeleaf-extras-java8time-version>3.0.1.RELEASE</thymeleaf-extras-java8time-version>
+    </properties>
+    <dependencies>
+        <!-- Spring -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-validation</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-thymeleaf</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-devtools</artifactId>
+            <scope>runtime</scope>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <!-- View -->
+        <dependency>
+            <groupId>org.thymeleaf</groupId>
+            <artifactId>thymeleaf</artifactId>
+            <version>${org.thymeleaf-version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.thymeleaf</groupId>
+            <artifactId>thymeleaf-spring5</artifactId>
+            <!-- TODO Remove once available in platform BOM -->
+            <version>${org.thymeleaf-version}</version>
+            <!-- Avoid org.hibernate.jpa.boot.archive.spi.ArchiveException: Could not build ClassFile in Java 8 -->
+            <exclusions>
+                <exclusion>
+                    <artifactId>javassist</artifactId>
+                    <groupId>org.javassist</groupId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+            <groupId>org.thymeleaf.extras</groupId>
+            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
+            <!-- TODO Remove version once available in platform BOM -->
+            <version>${org.thymeleaf.extras.springsecurity4-version}</version>
+        </dependency>
+        <dependency>
+            <groupId>nz.net.ultraq.thymeleaf</groupId>
+            <artifactId>thymeleaf-layout-dialect</artifactId>
+            <version>${nz.net.ultraq.thymeleaflayout-version}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.thymeleaf.extras</groupId>
+            <artifactId>thymeleaf-extras-java8time</artifactId>
+            <version>${thymeleaf-extras-java8time-version}</version>
+        </dependency>
+        <dependency>
+            <groupId>xml-apis</groupId>
+            <artifactId>xml-apis</artifactId>
+            <version>1.4.01</version>
+        </dependency>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-mongodb</artifactId>
+        </dependency>
+        <!--    DO NOT TOUCH THIS EVER    -->
+        <dependency>
+            <groupId>com.fasterxml.jackson.core</groupId>
+            <artifactId>jackson-databind</artifactId>
+            <version>2.11.1</version>
+        </dependency>
+        <!--    DO NOT TOUCH THIS EVER    -->
+        <dependency>
+            <groupId>org.xerial</groupId>
+            <artifactId>sqlite-jdbc</artifactId>
+            <version>3.36.0.2</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/com.zsoltfabok/sqlite-dialect -->
+        <dependency>
+            <groupId>com.zsoltfabok</groupId>
+            <artifactId>sqlite-dialect</artifactId>
+            <version>1.0</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-jpa</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>com.h2database</groupId>
+            <artifactId>h2</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.googlecode.json-simple</groupId>
+            <artifactId>json-simple</artifactId>
+            <version>1.1.1</version>
+        </dependency>
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <version>8.0.25</version>
+            <scope>compile</scope>
+        </dependency>
+    </dependencies>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+        </plugins>
+    </build>
+
+</project>
Index: .idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml b/.idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.zaxxer:HikariCP:3.4.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/3.4.5/HikariCP-3.4.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/3.4.5/HikariCP-3.4.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zaxxer/HikariCP/3.4.5/HikariCP-3.4.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml b/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_vaadin_external_google_android_json_0_0_20131108_vaadin1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: docs/contributing.md
===================================================================
diff --git a/docs/contributing.md b/docs/contributing.md
new file mode 100644
--- /dev/null	
+++ b/docs/contributing.md	
@@ -0,0 +1,20 @@
+#### Contributing Guidelines:
+> - Fork the repository (for basecode)
+> - If working collaboratively on ONE individual task, make sure to converse with them and add comments to the code to help the flow of understanding
+> - Before committing and pushing to main branch, asses the changes with group members before finalizing anything (excludes individual tasks)
+> - Create small, specific commits so that we can track our progress and also be able to identify when and where in the code there's an error, if there is any
+> - Create a new branch for your commit and do a pull request 
+> - Look over code for errors before committing, keep commits concise
+> - If code requires a file, add it to the repository
+> - If a merge error occurs make sure to go back and restore the original code before doing anything
+> - Using pull requests will help make sure no merge conflicts occur
+> - When everyone agrees on the changes, merge the branch to the main branch
+
+#### Community Expectations:
+> - Pay attention in class (no phones, or PAPER, or other work or games; if violated, Lord Mort will dock points from the seed)
+> - Help others if help is asked for
+> - Work together as a group; slow down if someone is still learning, work harder if everyone is on track and learning
+> - Give others critical feedback but make sure not to insult them (your job is to HELP them not undermine their efforts and kill motivation)
+> - Turn in work on time; do not procrastinate, use time provided in class to advantage
+> - Make sure you and the people around you are meeting the learning targets (i.e. TPT, CollegeBoard, etc.)
+> - Have fun with CS! 
Index: .idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml b/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_activation_jakarta_activation_api_1_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.activation:jakarta.activation-api:1.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_zsoltfabok_sqlite_dialect_1_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_zsoltfabok_sqlite_dialect_1_0.xml b/.idea/libraries/Maven__com_zsoltfabok_sqlite_dialect_1_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_zsoltfabok_sqlite_dialect_1_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.zsoltfabok:sqlite-dialect:1.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zsoltfabok/sqlite-dialect/1.0/sqlite-dialect-1.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zsoltfabok/sqlite-dialect/1.0/sqlite-dialect-1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/zsoltfabok/sqlite-dialect/1.0/sqlite-dialect-1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_jayway_jsonpath_json_path_2_4_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_4_0.xml b/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_4_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_jayway_jsonpath_json_path_2_4_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.jayway.jsonpath:json-path:2.4.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_h2database_h2_1_4_200.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_h2database_h2_1_4_200.xml b/.idea/libraries/Maven__com_h2database_h2_1_4_200.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_h2database_h2_1_4_200.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.h2database:h2:1.4.200">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/h2database/h2/1.4.200/h2-1.4.200.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/h2database/h2/1.4.200/h2-1.4.200-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/h2database/h2/1.4.200/h2-1.4.200-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_sun_istack_istack_commons_runtime_3_0_11.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_sun_istack_istack_commons_runtime_3_0_11.xml b/.idea/libraries/Maven__com_sun_istack_istack_commons_runtime_3_0_11.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_sun_istack_istack_commons_runtime_3_0_11.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.sun.istack:istack-commons-runtime:3.0.11">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/istack/istack-commons-runtime/3.0.11/istack-commons-runtime-3.0.11.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/istack/istack-commons-runtime/3.0.11/istack-commons-runtime-3.0.11-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/istack/istack-commons-runtime/3.0.11/istack-commons-runtime-3.0.11-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_sun_activation_jakarta_activation_1_2_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_sun_activation_jakarta_activation_1_2_2.xml b/.idea/libraries/Maven__com_sun_activation_jakarta_activation_1_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_sun_activation_jakarta_activation_1_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.sun.activation:jakarta.activation:1.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_activation_javax_activation_api_1_2_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__javax_activation_javax_activation_api_1_2_0.xml b/.idea/libraries/Maven__javax_activation_javax_activation_api_1_2_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__javax_activation_javax_activation_api_1_2_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.activation:javax.activation-api:1.2.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml b/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_xml_bind_jaxb_api_2_3_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__javax_xml_bind_jaxb_api_2_3_1.xml b/.idea/libraries/Maven__javax_xml_bind_jaxb_api_2_3_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__javax_xml_bind_jaxb_api_2_3_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.xml.bind:jaxb-api:2.3.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__javax_persistence_javax_persistence_api_2_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__javax_persistence_javax_persistence_api_2_2.xml b/.idea/libraries/Maven__javax_persistence_javax_persistence_api_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__javax_persistence_javax_persistence_api_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: javax.persistence:javax.persistence-api:2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__jakarta_persistence_jakarta_persistence_api_2_2_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_persistence_jakarta_persistence_api_2_2_3.xml b/.idea/libraries/Maven__jakarta_persistence_jakarta_persistence_api_2_2_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_persistence_jakarta_persistence_api_2_2_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.persistence:jakarta.persistence-api:2.2.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml b/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__jakarta_validation_jakarta_validation_api_2_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_validation_jakarta_validation_api_2_0_2.xml b/.idea/libraries/Maven__jakarta_validation_jakarta_validation_api_2_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_validation_jakarta_validation_api_2_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.validation:jakarta.validation-api:2.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__jakarta_transaction_jakarta_transaction_api_1_3_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__jakarta_transaction_jakarta_transaction_api_1_3_3.xml b/.idea/libraries/Maven__jakarta_transaction_jakarta_transaction_api_1_3_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__jakarta_transaction_jakarta_transaction_api_1_3_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: jakarta.transaction:jakarta.transaction-api:1.3.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_minidev_json_smart_2_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__net_minidev_json_smart_2_3.xml b/.idea/libraries/Maven__net_minidev_json_smart_2_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_minidev_json_smart_2_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.minidev:json-smart:2.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/json-smart/2.3/json-smart-2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/json-smart/2.3/json-smart-2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/json-smart/2.3/json-smart-2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_minidev_accessors_smart_1_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__net_minidev_accessors_smart_1_2.xml b/.idea/libraries/Maven__net_minidev_accessors_smart_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_minidev_accessors_smart_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.minidev:accessors-smart:1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/accessors-smart/1.2/accessors-smart-1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/minidev/accessors-smart/1.2/accessors-smart-1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__nz_net_ultraq_thymeleaf_thymeleaf_layout_dialect_2_3_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__nz_net_ultraq_thymeleaf_thymeleaf_layout_dialect_2_3_0.xml b/.idea/libraries/Maven__nz_net_ultraq_thymeleaf_thymeleaf_layout_dialect_2_3_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__nz_net_ultraq_thymeleaf_thymeleaf_layout_dialect_2_3_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.3.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/2.3.0/thymeleaf-layout-dialect-2.3.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/2.3.0/thymeleaf-layout-dialect-2.3.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/2.3.0/thymeleaf-layout-dialect-2.3.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__nz_net_ultraq_thymeleaf_thymeleaf_expression_processor_1_1_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__nz_net_ultraq_thymeleaf_thymeleaf_expression_processor_1_1_3.xml b/.idea/libraries/Maven__nz_net_ultraq_thymeleaf_thymeleaf_expression_processor_1_1_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__nz_net_ultraq_thymeleaf_thymeleaf_expression_processor_1_1_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: nz.net.ultraq.thymeleaf:thymeleaf-expression-processor:1.1.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/nz/net/ultraq/thymeleaf/thymeleaf-expression-processor/1.1.3/thymeleaf-expression-processor-1.1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/nz/net/ultraq/thymeleaf/thymeleaf-expression-processor/1.1.3/thymeleaf-expression-processor-1.1.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/nz/net/ultraq/thymeleaf/thymeleaf-expression-processor/1.1.3/thymeleaf-expression-processor-1.1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__mysql_mysql_connector_java_8_0_25.xml
===================================================================
diff --git a/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_25.xml b/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_25.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__mysql_mysql_connector_java_8_0_25.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: mysql:mysql-connector-java:8.0.25">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/8.0.25/mysql-connector-java-8.0.25.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/8.0.25/mysql-connector-java-8.0.25-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/mysql/mysql-connector-java/8.0.25/mysql-connector-java-8.0.25-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__junit_junit_4_13_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__junit_junit_4_13_2.xml b/.idea/libraries/Maven__junit_junit_4_13_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__junit_junit_4_13_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: junit:junit:4.13.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.13.2/junit-4.13.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># AP-CSA-Tri2\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	
+++ b/README.md	
@@ -1,1 +1,21 @@
-# AP-CSA-Tri2
+# Code Code Coders!!
+
+CSA Journal [Link](https://docs.google.com/document/d/19iVPSA6oKpUzUTcvJZSr133WR1m2qjpYma6liTT9ulo/edit?usp=sharing)
+
+|        Name        | Github Username   |ID                 |Tasks |Scrumboard |Commits |Profile |
+|:------------------:|-------------------|-------------------|------|-----------|--------|--------|
+| Chris Rubin        | Chris-Ru          |72892271|[Tasks](https://github.com/Chris-Ru/p1-codecodecoders/issues/assigned/Chris-Ru)|[Scrumboard](https://github.com/Chris-Ru/p1-codecodecoders/projects/1?card_filter_query=assignee%3AChris-Ru)|[commits](https://github.com/Chris-Ru/p1-codecodecoders/commits?author=Chris-Ru)|[profile](https://github.com/Chris-Ru)|
+| Ak Prathipati      | akprathipati     |54961927|[Tasks](https://github.com/Chris-Ru/p1-codecodecoders/issues/assigned/akprathipati)|[Scrumboard](https://github.com/Chris-Ru/p1-codecodecoders/projects/1?card_filter_query=assignee%3Aakprathipati)|[commits](https://github.com/Chris-Ru/p1-codecodecoders/commits?author=akprathipati)|[profile](https://github.com/akprathipati)|
+| Eshaan Parlikar    | KrispyKremeSavage |32022538|[Tasks](https://github.com/Chris-Ru/p1-codecodecoders/issues/assigned/KrispyKremeSavage)|[Scrumboard](https://github.com/Chris-Ru/p1-codecodecoders/projects/1?card_filter_query=assignee%3AKrispyKremeSavage)|[commits](https://github.com/Chris-Ru/p1-codecodecoders/commits?author=KrispyKremeSavage)|[profile](https://github.com/KrispyKremeSavage)|
+| Dane Vestal        | D1935827V         |54718367|[Tasks](https://github.com/Chris-Ru/p1-codecodecoders/issues/assigned/D1935827V)|[Scrumboard](https://github.com/Chris-Ru/p1-codecodecoders/projects/1?card_filter_query=assignee%3AD1935827V)|[commits](https://github.com/Chris-Ru/p1-codecodecoders/commits?author=D1935827V )|[profile](https://github.com/D1935827V)|
+| Yeonjoon Hong      | yeonjoonhong      |82470068|[Tasks](https://github.com/Chris-Ru/p1-codecodecoders/issues/assigned/yeonjoonhong)|[Scrumboard](https://github.com/Chris-Ru/p1-codecodecoders/projects/1?card_filter_query=author%3Ayeonjoonhong)|[commits](https://github.com/Chris-Ru/p1-codecodecoders/commits?author=yeonjoonhong)|[profile](https://github.com/yeonjoonhong)|
+
+
+Theme: Sports Recruiting Website
+ -Each athlete will input pictures stats and other info to create a profile that coaches can view and recruit athletes
+The major theme of our project is the focus on sports. The major sports are going to be present in our website and the latest news will be present. Additonally, we were able have a BMI calculator integrated into our website and sample exercised will be created as well. Finally, we will have a place where people can rate sports and players. Then we will store that in a database and we will have a leaderboard.
+
+[Sports Wireframe](https://lucid.app/lucidchart/c1356cd5-3ba3-409e-a752-02df1e954741/edit?beaconFlowId=C213948F298B1C9C&page=0_0&invitationId=inv_4de638c3-1fb9-45c5-a368-bd24c931c0ee#)
+
+[Brain Write](https://docs.google.com/document/d/1iCI8POsuxAbY2hdaYOi8FsVtskmhAqHQ7QhiaQR-WkA/edit?usp=sharing)
+
Index: .idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_10_22.xml
===================================================================
diff --git a/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_10_22.xml b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_10_22.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_agent_1_10_22.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.bytebuddy:byte-buddy-agent:1.10.22">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy-agent/1.10.22/byte-buddy-agent-1.10.22.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy-agent/1.10.22/byte-buddy-agent-1.10.22-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy-agent/1.10.22/byte-buddy-agent-1.10.22-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__net_bytebuddy_byte_buddy_1_10_22.xml
===================================================================
diff --git a/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_10_22.xml b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_10_22.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__net_bytebuddy_byte_buddy_1_10_22.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: net.bytebuddy:byte-buddy:1.10.22">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_0.xml b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apiguardian:apiguardian-api:1.1.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_44.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_44.xml b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_44.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_websocket_9_0_44.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.44">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.44/tomcat-embed-websocket-9.0.44.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.44/tomcat-embed-websocket-9.0.44-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.44/tomcat-embed-websocket-9.0.44-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_assertj_assertj_core_3_18_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_assertj_assertj_core_3_18_1.xml b/.idea/libraries/Maven__org_assertj_assertj_core_3_18_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_assertj_assertj_core_3_18_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.assertj:assertj-core:3.18.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/assertj/assertj-core/3.18.1/assertj-core-3.18.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/assertj/assertj-core/3.18.1/assertj-core-3.18.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/assertj/assertj-core/3.18.1/assertj-core-3.18.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml b/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.aspectj:aspectjweaver:1.9.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.logging.log4j:log4j-api:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__ognl_ognl_3_1_26.xml
===================================================================
diff --git a/.idea/libraries/Maven__ognl_ognl_3_1_26.xml b/.idea/libraries/Maven__ognl_ognl_3_1_26.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__ognl_ognl_3_1_26.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: ognl:ognl:3.1.26">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/ognl/ognl/3.1.26/ognl-3.1.26.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/ognl/ognl/3.1.26/ognl-3.1.26-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/ognl/ognl/3.1.26/ognl-3.1.26-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_44.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_44.xml b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_44.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_tomcat_embed_tomcat_embed_core_9_0_44.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.44">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-core/9.0.44/tomcat-embed-core-9.0.44.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-core/9.0.44/tomcat-embed-core-9.0.44-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/tomcat/embed/tomcat-embed-core/9.0.44/tomcat-embed-core-9.0.44-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-to-slf4j/2.13.3/log4j-to-slf4j-2.13.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-to-slf4j/2.13.3/log4j-to-slf4j-2.13.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/logging/log4j/log4j-to-slf4j/2.13.3/log4j-to-slf4j-2.13.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_glassfish_jaxb_txw2_2_3_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_glassfish_jaxb_txw2_2_3_3.xml b/.idea/libraries/Maven__org_glassfish_jaxb_txw2_2_3_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_glassfish_jaxb_txw2_2_3_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.glassfish.jaxb:txw2:2.3.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/txw2/2.3.3/txw2-2.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/txw2/2.3.3/txw2-2.3.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/txw2/2.3.3/txw2-2.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_glassfish_jaxb_jaxb_runtime_2_3_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_glassfish_jaxb_jaxb_runtime_2_3_3.xml b/.idea/libraries/Maven__org_glassfish_jaxb_jaxb_runtime_2_3_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_glassfish_jaxb_jaxb_runtime_2_3_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.glassfish.jaxb:jaxb-runtime:2.3.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/jaxb-runtime/2.3.3/jaxb-runtime-2.3.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/jaxb-runtime/2.3.3/jaxb-runtime-2.3.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jaxb/jaxb-runtime/2.3.3/jaxb-runtime-2.3.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml b/.idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hamcrest_hamcrest_core_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hamcrest:hamcrest-core:2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml b/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hamcrest_hamcrest_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hamcrest:hamcrest:2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest/2.2/hamcrest-2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest/2.2/hamcrest-2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_codehaus_groovy_groovy_2_5_14.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_codehaus_groovy_groovy_2_5_14.xml b/.idea/libraries/Maven__org_codehaus_groovy_groovy_2_5_14.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_codehaus_groovy_groovy_2_5_14.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.codehaus.groovy:groovy:2.5.14">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/codehaus/groovy/groovy/2.5.14/groovy-2.5.14.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/codehaus/groovy/groovy/2.5.14/groovy-2.5.14-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/codehaus/groovy/groovy/2.5.14/groovy-2.5.14-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_attoparser_attoparser_2_0_5_RELEASE.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_attoparser_attoparser_2_0_5_RELEASE.xml b/.idea/libraries/Maven__org_attoparser_attoparser_2_0_5_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_attoparser_attoparser_2_0_5_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.attoparser:attoparser:2.0.5.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml b/.idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.glassfish:jakarta.el:3.0.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_dom4j_dom4j_2_1_3.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_dom4j_dom4j_2_1_3.xml b/.idea/libraries/Maven__org_dom4j_dom4j_2_1_3.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_dom4j_dom4j_2_1_3.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.dom4j:dom4j:2.1.3">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/dom4j/dom4j/2.1.3/dom4j-2.1.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/dom4j/dom4j/2.1.3/dom4j-2.1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml b/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jboss_jandex_2_2_3_Final.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_jboss_jandex_2_2_3_Final.xml b/.idea/libraries/Maven__org_jboss_jandex_2_2_3_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_jboss_jandex_2_2_3_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jboss:jandex:2.2.3.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_7_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_7_1.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_7_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_5_7_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter:5.7.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.7.1/junit-jupiter-5.7.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.7.1/junit-jupiter-5.7.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.7.1/junit-jupiter-5.7.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jboss_spec_javax_transaction_jboss_transaction_api_1_2_spec_1_1_1_Final.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_jboss_spec_javax_transaction_jboss_transaction_api_1_2_spec_1_1_1_Final.xml b/.idea/libraries/Maven__org_jboss_spec_javax_transaction_jboss_transaction_api_1_2_spec_1_1_1_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_jboss_spec_javax_transaction_jboss_transaction_api_1_2_spec_1_1_1_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.1.1.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hibernate_hibernate_core_5_4_29_Final.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_hibernate_hibernate_core_5_4_29_Final.xml b/.idea/libraries/Maven__org_hibernate_hibernate_core_5_4_29_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hibernate_hibernate_core_5_4_29_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate:hibernate-core:5.4.29.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-core/5.4.29.Final/hibernate-core-5.4.29.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-core/5.4.29.Final/hibernate-core-5.4.29.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/hibernate-core/5.4.29.Final/hibernate-core-5.4.29.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml b/.idea/libraries/Maven__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_javassist_javassist_3_20_0_GA.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_javassist_javassist_3_20_0_GA.xml b/.idea/libraries/Maven__org_javassist_javassist_3_20_0_GA.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_javassist_javassist_3_20_0_GA.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.javassist:javassist:3.20.0-GA">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_1_7_Final.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_1_7_Final.xml b/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_1_7_Final.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_hibernate_validator_hibernate_validator_6_1_7_Final.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/validator/hibernate-validator/6.1.7.Final/hibernate-validator-6.1.7.Final.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/validator/hibernate-validator/6.1.7.Final/hibernate-validator-6.1.7.Final-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/hibernate/validator/hibernate-validator/6.1.7.Final/hibernate-validator-6.1.7.Final-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mockito_mockito_core_3_6_28.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_mockito_mockito_core_3_6_28.xml b/.idea/libraries/Maven__org_mockito_mockito_core_3_6_28.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mockito_mockito_core_3_6_28.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mockito:mockito-core:3.6.28">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-core/3.6.28/mockito-core-3.6.28.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-core/3.6.28/mockito-core-3.6.28-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-core/3.6.28/mockito-core-3.6.28-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_7_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_7_1.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_7_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_7_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-engine:1.7.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.7.1/junit-platform-engine-1.7.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.7.1/junit-platform-engine-1.7.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.7.1/junit-platform-engine-1.7.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mongodb_bson_4_1_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_mongodb_bson_4_1_2.xml b/.idea/libraries/Maven__org_mongodb_bson_4_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mongodb_bson_4_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mongodb:bson:4.1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/bson/4.1.2/bson-4.1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/bson/4.1.2/bson-4.1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/bson/4.1.2/bson-4.1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mockito_mockito_junit_jupiter_3_6_28.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_3_6_28.xml b/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_3_6_28.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mockito_mockito_junit_jupiter_3_6_28.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mockito:mockito-junit-jupiter:3.6.28">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-junit-jupiter/3.6.28/mockito-junit-jupiter-3.6.28.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-junit-jupiter/3.6.28/mockito-junit-jupiter-3.6.28-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mockito/mockito-junit-jupiter/3.6.28/mockito-junit-jupiter-3.6.28-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_7_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_7_1.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_7_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_7_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.7.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.7.1/junit-jupiter-engine-5.7.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.7.1/junit-jupiter-engine-5.7.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.7.1/junit-jupiter-engine-5.7.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_7_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_7_1.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_7_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_7_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.7.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.7.1/junit-jupiter-api-5.7.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.7.1/junit-jupiter-api-5.7.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.7.1/junit-jupiter-api-5.7.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_7_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_7_1.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_7_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_7_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-commons:1.7.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.7.1/junit-platform-commons-1.7.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.7.1/junit-platform-commons-1.7.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.7.1/junit-platform-commons-1.7.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_7_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_7_1.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_7_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_params_5_7_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-params:5.7.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.7.1/junit-jupiter-params-5.7.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.7.1/junit-jupiter-params-5.7.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.7.1/junit-jupiter-params-5.7.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_projectlombok_lombok_1_18_18.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_projectlombok_lombok_1_18_18.xml b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_18.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_projectlombok_lombok_1_18_18.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.projectlombok:lombok:1.18.18">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.18/lombok-1.18.18.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.18/lombok-1.18.18-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/projectlombok/lombok/1.18.18/lombok-1.18.18-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_ow2_asm_asm_5_0_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_ow2_asm_asm_5_0_4.xml b/.idea/libraries/Maven__org_ow2_asm_asm_5_0_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_ow2_asm_asm_5_0_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.ow2.asm:asm:5.0.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/ow2/asm/asm/5.0.4/asm-5.0.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/ow2/asm/asm/5.0.4/asm-5.0.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml b/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:jul-to-slf4j:1.7.30">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml b/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_skyscreamer_jsonassert_1_5_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.skyscreamer:jsonassert:1.5.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mongodb_mongodb_driver_sync_4_1_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_mongodb_mongodb_driver_sync_4_1_2.xml b/.idea/libraries/Maven__org_mongodb_mongodb_driver_sync_4_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mongodb_mongodb_driver_sync_4_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mongodb:mongodb-driver-sync:4.1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-sync/4.1.2/mongodb-driver-sync-4.1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-sync/4.1.2/mongodb-driver-sync-4.1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-sync/4.1.2/mongodb-driver-sync-4.1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_mongodb_mongodb_driver_core_4_1_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_mongodb_mongodb_driver_core_4_1_2.xml b/.idea/libraries/Maven__org_mongodb_mongodb_driver_core_4_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_mongodb_mongodb_driver_core_4_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.mongodb:mongodb-driver-core:4.1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-core/4.1.2/mongodb-driver-core-4.1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-core/4.1.2/mongodb-driver-core-4.1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/mongodb/mongodb-driver-core/4.1.2/mongodb-driver-core-4.1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.opentest4j:opentest4j:1.2.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_objenesis_objenesis_3_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_objenesis_objenesis_3_1.xml b/.idea/libraries/Maven__org_objenesis_objenesis_3_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_objenesis_objenesis_3_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.objenesis:objenesis:3.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/objenesis/objenesis/3.1/objenesis-3.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/objenesis/objenesis/3.1/objenesis-3.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/objenesis/objenesis/3.1/objenesis-3.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_aop_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-aop:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-aop/2.4.4/spring-boot-starter-aop-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-aop/2.4.4/spring-boot-starter-aop-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-aop/2.4.4/spring-boot-starter-aop-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.4.4/spring-boot-starter-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.4.4/spring-boot-starter-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter/2.4.4/spring-boot-starter-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_mongodb_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_mongodb_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_mongodb_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_mongodb_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-data-mongodb:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-mongodb/2.4.4/spring-boot-starter-data-mongodb-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-mongodb/2.4.4/spring-boot-starter-data-mongodb-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-mongodb/2.4.4/spring-boot-starter-data-mongodb-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_data_jpa_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-data-jpa:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-jpa/2.4.4/spring-boot-starter-data-jpa-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-jpa/2.4.4/spring-boot-starter-data-jpa-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-data-jpa/2.4.4/spring-boot-starter-data-jpa-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.4.4/spring-boot-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.4.4/spring-boot-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot/2.4.4/spring-boot-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml b/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-api:1.7.30">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_devtools_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-devtools:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-devtools/2.4.4/spring-boot-devtools-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-devtools/2.4.4/spring-boot-devtools-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-devtools/2.4.4/spring-boot-devtools-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_autoconfigure_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.4.4/spring-boot-autoconfigure-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.4.4/spring-boot-autoconfigure-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-autoconfigure/2.4.4/spring-boot-autoconfigure-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_tomcat_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-tomcat/2.4.4/spring-boot-starter-tomcat-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-tomcat/2.4.4/spring-boot-starter-tomcat-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-tomcat/2.4.4/spring-boot-starter-tomcat-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_thymeleaf_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_thymeleaf_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_thymeleaf_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_thymeleaf_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-thymeleaf:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-thymeleaf/2.4.4/spring-boot-starter-thymeleaf-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-thymeleaf/2.4.4/spring-boot-starter-thymeleaf-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-thymeleaf/2.4.4/spring-boot-starter-thymeleaf-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_web_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-web:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-web/2.4.4/spring-boot-starter-web-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-web/2.4.4/spring-boot-starter-web-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-web/2.4.4/spring-boot-starter-web-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_validation_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-validation:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-validation/2.4.4/spring-boot-starter-validation-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-validation/2.4.4/spring-boot-starter-validation-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-validation/2.4.4/spring-boot-starter-validation-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_json_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-json:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-json/2.4.4/spring-boot-starter-json-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-json/2.4.4/spring-boot-starter-json-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-json/2.4.4/spring-boot-starter-json-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_jdbc_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.4.4/spring-boot-starter-jdbc-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.4.4/spring-boot-starter-jdbc-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-jdbc/2.4.4/spring-boot-starter-jdbc-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_test_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-test:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-test/2.4.4/spring-boot-starter-test-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-test/2.4.4/spring-boot-starter-test-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-test/2.4.4/spring-boot-starter-test-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_starter_logging_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-starter-logging:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-logging/2.4.4/spring-boot-starter-logging-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-logging/2.4.4/spring-boot-starter-logging-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-starter-logging/2.4.4/spring-boot-starter-logging-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_aop_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_aop_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_aop_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_aop_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-aop:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.3.5/spring-aop-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.3.5/spring-aop-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aop/5.3.5/spring-aop-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_mongodb_3_1_6.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_mongodb_3_1_6.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_mongodb_3_1_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_mongodb_3_1_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-mongodb:3.1.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-mongodb/3.1.6/spring-data-mongodb-3.1.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-mongodb/3.1.6/spring-data-mongodb-3.1.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-mongodb/3.1.6/spring-data-mongodb-3.1.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_beans_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_beans_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_beans_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_beans_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-beans:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.3.5/spring-beans-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.3.5/spring-beans-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-beans/5.3.5/spring-beans-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_aspects_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_aspects_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_aspects_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_aspects_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-aspects:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aspects/5.3.5/spring-aspects-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aspects/5.3.5/spring-aspects-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-aspects/5.3.5/spring-aspects-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_autoconfigure_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test-autoconfigure/2.4.4/spring-boot-test-autoconfigure-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test-autoconfigure/2.4.4/spring-boot-test-autoconfigure-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test-autoconfigure/2.4.4/spring-boot-test-autoconfigure-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_4_4.xml b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_boot_spring_boot_test_2_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.boot:spring-boot-test:2.4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test/2.4.4/spring-boot-test-2.4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test/2.4.4/spring-boot-test-2.4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/boot/spring-boot-test/2.4.4/spring-boot-test-2.4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_4_6.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_4_6.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_4_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_jpa_2_4_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-jpa:2.4.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-jpa/2.4.6/spring-data-jpa-2.4.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-jpa/2.4.6/spring-data-jpa-2.4.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-jpa/2.4.6/spring-data-jpa-2.4.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_data_spring_data_commons_2_4_6.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_4_6.xml b/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_4_6.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_data_spring_data_commons_2_4_6.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework.data:spring-data-commons:2.4.6">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.4.6/spring-data-commons-2.4.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.4.6/spring-data-commons-2.4.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.4.6/spring-data-commons-2.4.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_orm_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_orm_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_orm_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_orm_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-orm:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-orm/5.3.5/spring-orm-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-orm/5.3.5/spring-orm-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-orm/5.3.5/spring-orm-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_jdbc_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_jdbc_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_jdbc_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_jdbc_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-jdbc:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.3.5/spring-jdbc-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.3.5/spring-jdbc-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jdbc/5.3.5/spring-jdbc-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_tx_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_tx_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_tx_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_tx_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-tx:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.3.5/spring-tx-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.3.5/spring-tx-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-tx/5.3.5/spring-tx-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_test_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_test_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_test_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_test_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-test:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-test/5.3.5/spring-test-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-test/5.3.5/spring-test-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-test/5.3.5/spring-test-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_core_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_core_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_core_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_core_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-core:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.3.5/spring-core-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.3.5/spring-core-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-core/5.3.5/spring-core-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_context_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_context_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_context_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_context_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-context:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.3.5/spring-context-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.3.5/spring-context-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-context/5.3.5/spring-context-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_jcl_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_jcl_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_jcl_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_jcl_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-jcl:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.3.5/spring-jcl-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.3.5/spring-jcl-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-jcl/5.3.5/spring-jcl-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_expression_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_expression_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_expression_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_expression_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-expression:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.3.5/spring-expression-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.3.5/spring-expression-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-expression/5.3.5/spring-expression-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_thymeleaf_thymeleaf_spring5_3_0_12_RELEASE.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_thymeleaf_thymeleaf_spring5_3_0_12_RELEASE.xml b/.idea/libraries/Maven__org_thymeleaf_thymeleaf_spring5_3_0_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_thymeleaf_thymeleaf_spring5_3_0_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.thymeleaf:thymeleaf-spring5:3.0.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_thymeleaf_thymeleaf_3_0_12_RELEASE.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_thymeleaf_thymeleaf_3_0_12_RELEASE.xml b/.idea/libraries/Maven__org_thymeleaf_thymeleaf_3_0_12_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_thymeleaf_thymeleaf_3_0_12_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.thymeleaf:thymeleaf:3.0.12.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_xerial_sqlite_jdbc_3_36_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_xerial_sqlite_jdbc_3_36_0_2.xml b/.idea/libraries/Maven__org_xerial_sqlite_jdbc_3_36_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_xerial_sqlite_jdbc_3_36_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.xerial:sqlite-jdbc:3.36.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xerial/sqlite-jdbc/3.36.0.2/sqlite-jdbc-3.36.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xerial/sqlite-jdbc/3.36.0.2/sqlite-jdbc-3.36.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xerial/sqlite-jdbc/3.36.0.2/sqlite-jdbc-3.36.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_unbescape_unbescape_1_1_6_RELEASE.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_unbescape_unbescape_1_1_6_RELEASE.xml b/.idea/libraries/Maven__org_unbescape_unbescape_1_1_6_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_unbescape_unbescape_1_1_6_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.unbescape:unbescape:1.1.6.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_webmvc_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_webmvc_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_webmvc_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_webmvc_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-webmvc:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/5.3.5/spring-webmvc-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/5.3.5/spring-webmvc-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-webmvc/5.3.5/spring-webmvc-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_springframework_spring_web_5_3_5.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_springframework_spring_web_5_3_5.xml b/.idea/libraries/Maven__org_springframework_spring_web_5_3_5.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_springframework_spring_web_5_3_5.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.springframework:spring-web:5.3.5">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/5.3.5/spring-web-5.3.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/5.3.5/spring-web-5.3.5-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/springframework/spring-web/5.3.5/spring-web-5.3.5-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_springsecurity4_3_0_2_RELEASE.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_springsecurity4_3_0_2_RELEASE.xml b/.idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_springsecurity4_3_0_2_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_springsecurity4_3_0_2_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.2.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/extras/thymeleaf-extras-springsecurity4/3.0.2.RELEASE/thymeleaf-extras-springsecurity4-3.0.2.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/extras/thymeleaf-extras-springsecurity4/3.0.2.RELEASE/thymeleaf-extras-springsecurity4-3.0.2.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/extras/thymeleaf-extras-springsecurity4/3.0.2.RELEASE/thymeleaf-extras-springsecurity4-3.0.2.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_java8time_3_0_1_RELEASE.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_java8time_3_0_1_RELEASE.xml b/.idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_java8time_3_0_1_RELEASE.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_thymeleaf_extras_thymeleaf_extras_java8time_3_0_1_RELEASE.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.1.RELEASE">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.1.RELEASE/thymeleaf-extras-java8time-3.0.1.RELEASE.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.1.RELEASE/thymeleaf-extras-java8time-3.0.1.RELEASE-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.1.RELEASE/thymeleaf-extras-java8time-3.0.1.RELEASE-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_yaml_snakeyaml_1_27.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_yaml_snakeyaml_1_27.xml b/.idea/libraries/Maven__org_yaml_snakeyaml_1_27.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_yaml_snakeyaml_1_27.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.yaml:snakeyaml:1.27">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.27/snakeyaml-1.27.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.27/snakeyaml-1.27-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/yaml/snakeyaml/1.27/snakeyaml-1.27-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_xmlunit_xmlunit_core_2_7_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_7_0.xml b/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_7_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_xmlunit_xmlunit_core_2_7_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.xmlunit:xmlunit-core:2.7.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xmlunit/xmlunit-core/2.7.0/xmlunit-core-2.7.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xmlunit/xmlunit-core/2.7.0/xmlunit-core-2.7.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/xmlunit/xmlunit-core/2.7.0/xmlunit-core-2.7.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/jarRepositories.xml
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/jarRepositories.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/Maven__xml_apis_xml_apis_1_4_01.xml
===================================================================
diff --git a/.idea/libraries/Maven__xml_apis_xml_apis_1_4_01.xml b/.idea/libraries/Maven__xml_apis_xml_apis_1_4_01.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__xml_apis_xml_apis_1_4_01.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: xml-apis:xml-apis:1.4.01">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/encodings.xml
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/encodings.xml	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/misc.xml	
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_16" default="true" project-jdk-name="openjdk-16" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/compiler.xml	
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="AP-CSA-Tri2" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="AP-CSA-Tri2" target="11" />
+    </bytecodeTargetLevel>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="AP-CSA-Tri2" options="-parameters" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Animal.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Animal.java b/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Animal.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Animal.java	
@@ -0,0 +1,76 @@
+package com.nighthawk.csa.data.DataOps.genericDataModel;
+import com.nighthawk.csa.consoleUI.ConsoleMethods;
+
+/*
+ * Animal class extends Generics and defines abstract methods
+ */
+public class Animal extends Generics {
+	public enum KeyType {title, name, age, color} //Used with radio button selection
+	public static KeyType key = KeyType.title;  //Static variable: a key that applies to all Objects
+	private final String name;
+	private final int age;
+	private final String color;
+
+
+	/* constructor
+	 * 
+	 */
+	public Animal(String name, int age, String color)
+	{
+		super.setType("Animal");
+		this.name = name; 
+		this.age = age; 
+		this.color = color; 
+	}
+	
+	/* Generics requires toString override
+	 * toString provides conditional output based off of key
+	 */
+	@Override
+	public String toString()
+	{
+		String output="";
+		switch(key) {
+		case name:
+			output += this.name;
+			break;
+		case age:
+			output += "00" + this.age;
+			output = output.substring(output.length()-2);
+			break;
+		case color:
+			output += this.color;
+			break;
+		case title:
+		default:
+			output += super.getType() + ": " + this.name  + ", " + this.color + ", " + this.age;
+		}
+		return output;
+		
+	}
+	
+	/* Initialize Animal data
+	 * 
+	 */
+	public static Generics[] animalData() {
+		return new Generics[]{
+				new Animal("Lion", 8, "Gold"),
+				new Animal("Pig", 3, "Pink"),
+				new Animal("Robin", 7, "Red"),
+				new Animal("Cat", 10, "Black"),
+				new Animal("Kitty", 1, "Calico"),
+				new Animal("Dog", 14, "Brown")
+		};
+	}
+	
+	/* main to test Animal class
+	 * 
+	 */
+	public static void main(String[] args)
+	{
+		Generics[] animData = animalData();	//shows abstract class usage
+		for(Generics a : animData)
+			ConsoleMethods.println("" + a);	//shows polymorphic behavior
+	}
+
+}
Index: src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Cupcakes.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Cupcakes.java b/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Cupcakes.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Cupcakes.java	
@@ -0,0 +1,64 @@
+package com.nighthawk.csa.data.DataOps.genericDataModel;
+import com.nighthawk.csa.consoleUI.ConsoleMethods;
+
+public class Cupcakes extends Generics {
+	public enum KeyType {title, flavor, frosting, sprinkles}
+	public static KeyType key = KeyType.title;
+	private final String frosting;
+	private final int sprinkles;
+	private final String flavor;
+	
+	Cupcakes(String frosting, int sprinkles, String flavor)
+	{
+		this.setType("Cupcakes");
+		this.frosting = frosting;
+		this.sprinkles = sprinkles;
+		this.flavor = flavor;
+	}
+	
+	/* 
+	 * toString provides output based off of this.key setting
+	 */
+	@Override
+	public String toString() {		
+		String output="";
+		switch(key) {
+		case flavor:
+			output += this.flavor;
+			break;
+		case frosting:
+			output += this.frosting;
+			break;
+		case sprinkles:
+			output += "00" + this.sprinkles;
+			output = output.substring(output.length()-2);
+			break;
+		case title:
+		default:
+			output = super.getType() + ": " + this.flavor + ", " + this.frosting + ", " + this.sprinkles;
+		}
+		return output;
+	}
+	
+	public static Generics[] cupCakeData() {
+		return new Generics[]{
+				new Cupcakes("Red", 4, "Red Velvet"),
+			    new Cupcakes("Orange", 5, "Orange"),
+			    new Cupcakes("Yellow", 6, "Lemon"),
+			    new Cupcakes("Green", 7, "Apple"),
+			    new Cupcakes("Blue", 8, "Blueberry"),
+			    new Cupcakes("Purple", 9, "Blackberry"),
+			    new Cupcakes("Pink", 10, "Strawberry"),
+			    new Cupcakes("Tan", 11, "Vanilla"),
+			    new Cupcakes("Brown", 12, "Chocolate"),
+		};
+	}
+	
+	public static void main(String[] args)
+	{
+		Generics[] cupCake = cupCakeData();
+		for(Generics c:  cupCake)
+			ConsoleMethods.println(c);
+	}
+	
+}
Index: src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Alphabet.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Alphabet.java b/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Alphabet.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Alphabet.java	
@@ -0,0 +1,64 @@
+package com.nighthawk.csa.data.DataOps.genericDataModel;
+import com.nighthawk.csa.consoleUI.ConsoleMethods;
+
+public class Alphabet extends Generics {
+	public enum KeyType {title, letter}
+	public static KeyType key = KeyType.title;
+	private static final int size = 26;
+	private final char letter;
+	
+	/*
+	 * single letter object
+	 */
+	public Alphabet(char l)
+	{
+		this.setType("Alphabet");
+		this.letter = l;
+	}	
+	
+	/* 
+	 * toString provides output based off of key setting
+	 */
+	@Override
+	public String toString()
+	{
+		
+		String output="";
+		switch(key) {
+		case letter:
+			output += this.letter;
+			break;
+		case title:
+		default:
+			output += super.getType() + ": " + this.letter;
+		}
+		return output;
+	}
+	
+	/*
+	 * upper case alphabet array
+	 */
+	public static Generics[] alphabetData() 
+	{	
+		Generics[] alphabet = new Alphabet[Alphabet.size];
+		for (int i = 0; i < Alphabet.size; i++)
+		{
+			alphabet[i] = new Alphabet( (char)('A' + i) );
+		} 	
+		return alphabet;
+	}
+	
+	/* 
+	 * main to test Animal class
+	 */
+	public static void main(String[] args)
+	{
+		Generics[] alphaData = alphabetData();
+		for(Generics a : alphaData)
+			ConsoleMethods.println("" + a);
+	}
+	
+}
+		
+	
+	
\ No newline at end of file
Index: .idea/AP-CSA-Tri2.iml
===================================================================
diff --git a/.idea/AP-CSA-Tri2.iml b/.idea/AP-CSA-Tri2.iml
new file mode 100644
--- /dev/null	
+++ b/.idea/AP-CSA-Tri2.iml	
@@ -0,0 +1,155 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="web" name="Web">
+      <configuration>
+        <webroots />
+        <sourceRoots>
+          <root url="file://$MODULE_DIR$/src/main/java" />
+          <root url="file://$MODULE_DIR$/src/main/resources" />
+        </sourceRoots>
+      </configuration>
+    </facet>
+    <facet type="jpa" name="JPA">
+      <configuration>
+        <setting name="validation-enabled" value="true" />
+        <setting name="provider-name" value="Hibernate" />
+        <datasource-mapping />
+        <naming-strategy-map />
+      </configuration>
+    </facet>
+    <facet type="Spring" name="Spring">
+      <configuration />
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_11">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-validation:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-logging:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-classic:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: ch.qos.logback:logback-core:1.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.logging.log4j:log4j-api:2.13.3" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:jul-to-slf4j:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.annotation:jakarta.annotation-api:1.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.yaml:snakeyaml:1.27" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish:jakarta.el:3.0.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.validator:hibernate-validator:6.1.7.Final" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.validation:jakarta.validation-api:2.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.logging:jboss-logging:3.4.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-thymeleaf:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-json:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-tomcat:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.44" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.44" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-web:5.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-beans:5.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-webmvc:5.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aop:5.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-context:5.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-expression:5.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: org.springframework.boot:spring-boot-devtools:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-autoconfigure:2.4.4" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework.boot:spring-boot-starter-test:2.4.4" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework.boot:spring-boot-test:2.4.4" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.4.4" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: com.jayway.jsonpath:json-path:2.4.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: net.minidev:json-smart:2.3" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: net.minidev:accessors-smart:1.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.ow2.asm:asm:5.0.4" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.activation:jakarta.activation-api:1.2.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.assertj:assertj-core:3.18.1" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest:2.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter:5.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-params:5.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.7.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.mockito:mockito-core:3.6.28" level="project" />
+    <orderEntry type="library" name="Maven: net.bytebuddy:byte-buddy:1.10.22" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: net.bytebuddy:byte-buddy-agent:1.10.22" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.objenesis:objenesis:3.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.mockito:mockito-junit-jupiter:3.6.28" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.skyscreamer:jsonassert:1.5.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-core:5.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jcl:5.3.5" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.springframework:spring-test:5.3.5" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.xmlunit:xmlunit-core:2.7.0" level="project" />
+    <orderEntry type="library" name="Maven: org.thymeleaf:thymeleaf:3.0.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: ognl:ognl:3.1.26" level="project" />
+    <orderEntry type="library" name="Maven: org.javassist:javassist:3.20.0-GA" level="project" />
+    <orderEntry type="library" name="Maven: org.attoparser:attoparser:2.0.5.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.unbescape:unbescape:1.1.6.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.slf4j:slf4j-api:1.7.30" level="project" />
+    <orderEntry type="library" name="Maven: org.thymeleaf:thymeleaf-spring5:3.0.12.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.2.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.3.0" level="project" />
+    <orderEntry type="library" name="Maven: nz.net.ultraq.thymeleaf:thymeleaf-expression-processor:1.1.3" level="project" />
+    <orderEntry type="library" name="Maven: org.codehaus.groovy:groovy:2.5.14" level="project" />
+    <orderEntry type="library" name="Maven: org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.1.RELEASE" level="project" />
+    <orderEntry type="library" name="Maven: xml-apis:xml-apis:1.4.01" level="project" />
+    <orderEntry type="library" name="Maven: org.projectlombok:lombok:1.18.18" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-mongodb:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.mongodb:mongodb-driver-sync:4.1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mongodb:bson:4.1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.mongodb:mongodb-driver-core:4.1.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-mongodb:3.1.6" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-tx:5.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-commons:2.4.6" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-databind:2.11.1" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: com.fasterxml.jackson.core:jackson-core:2.11.4" level="project" />
+    <orderEntry type="library" name="Maven: org.xerial:sqlite-jdbc:3.36.0.2" level="project" />
+    <orderEntry type="library" name="Maven: com.zsoltfabok:sqlite-dialect:1.0" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate:hibernate-core:5.4.29.Final" level="project" />
+    <orderEntry type="library" name="Maven: javax.persistence:javax.persistence-api:2.2" level="project" />
+    <orderEntry type="library" name="Maven: antlr:antlr:2.7.7" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.1.1.Final" level="project" />
+    <orderEntry type="library" name="Maven: org.jboss:jandex:2.2.3.Final" level="project" />
+    <orderEntry type="library" name="Maven: javax.activation:javax.activation-api:1.2.0" level="project" />
+    <orderEntry type="library" name="Maven: org.dom4j:dom4j:2.1.3" level="project" />
+    <orderEntry type="library" name="Maven: org.hibernate.common:hibernate-commons-annotations:5.1.2.Final" level="project" />
+    <orderEntry type="library" name="Maven: javax.xml.bind:jaxb-api:2.3.1" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish.jaxb:jaxb-runtime:2.3.3" level="project" />
+    <orderEntry type="library" name="Maven: org.glassfish.jaxb:txw2:2.3.3" level="project" />
+    <orderEntry type="library" name="Maven: com.sun.istack:istack-commons-runtime:3.0.11" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.sun.activation:jakarta.activation:1.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-data-jpa:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-aop:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: org.aspectj:aspectjweaver:1.9.6" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-jdbc:2.4.4" level="project" />
+    <orderEntry type="library" name="Maven: com.zaxxer:HikariCP:3.4.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-jdbc:5.3.5" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.transaction:jakarta.transaction-api:1.3.3" level="project" />
+    <orderEntry type="library" name="Maven: jakarta.persistence:jakarta.persistence-api:2.2.3" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework.data:spring-data-jpa:2.4.6" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-orm:5.3.5" level="project" />
+    <orderEntry type="library" name="Maven: org.springframework:spring-aspects:5.3.5" level="project" />
+    <orderEntry type="library" scope="RUNTIME" name="Maven: com.h2database:h2:1.4.200" level="project" />
+    <orderEntry type="library" name="Maven: com.googlecode.json-simple:json-simple:1.1.1" level="project" />
+    <orderEntry type="library" name="Maven: junit:junit:4.13.2" level="project" />
+    <orderEntry type="library" name="Maven: org.hamcrest:hamcrest-core:2.2" level="project" />
+    <orderEntry type="library" name="Maven: mysql:mysql-connector-java:8.0.25" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibStream.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibStream.java b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibStream.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibStream.java	
@@ -0,0 +1,34 @@
+package com.nighthawk.csa.algorithm.FibonacciModel;
+
+import java.util.stream.Stream;
+
+public class FibStream extends _Fibonacci {
+    public FibStream() {
+        super();
+    }
+    public FibStream(int nth) {
+        super(nth);
+    }
+
+    /*
+    Abstract Polymorphic "init()" method using Stream and Lambda expressions
+    */
+    @Override
+    protected void init() {
+        super.name = "Stream";
+        // Stream iterates using lambda "->" syntax unil ".limit" is reached
+        // Streams and Lambda have been added to more recent versions of Java, this will NOT be on AP Test
+        // Streams are prevalent in Big Data, in this example it seems to perform the worst
+        Stream.iterate(new long[]{0, 1}, f -> new long[]{f[1], f[0] + f[1]})
+            .limit(super.size)
+            .forEach(f -> super.setData(f[0]) );
+    }
+
+    /*
+    Class method "main" with purpose of testing FibStream
+     */
+    public static void main(String[] args) {
+        _Fibonacci fibonacci = new FibStream();
+        fibonacci.print();
+    }
+}
Index: src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/_Fibonacci.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/_Fibonacci.java b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/_Fibonacci.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/_Fibonacci.java	
@@ -0,0 +1,108 @@
+package com.nighthawk.csa.algorithm.FibonacciModel;
+
+import com.nighthawk.csa.consoleUI.ConsoleMethods;
+
+import java.time.Duration;
+import java.time.Instant;
+import java.util.ArrayList;
+import java.util.HashMap;
+
+import lombok.Getter;
+
+/*
+ _Fibonacci class contains generalized logic to capture and analyze a Fibonacci sequence.
+ _Fibonacci is an "abstract" class, meaning it can't be initialized directly
+ The "_" in name is used to push this "Parent" Class to top of package file listing.
+ */
+@Getter  // this will enable standard Getters on attributes in Class in form "getName" where "name" is attribute
+public abstract class _Fibonacci {
+    int size;
+    String name;
+    int hashID;
+    Duration timeElapsed;
+    ArrayList<Long> list;
+    HashMap<Integer, Object> hash;
+
+    /*
+     Zero parameter constructor uses Telescoping technique to allow setting of the required value nth
+     @param: none
+     */
+    public _Fibonacci() {
+        this( 20);
+    }
+
+    /*
+     Construct the nth fibonacci number
+     @param: nth number, the value is constrained to 92 because of overflow in a long
+     */
+    public _Fibonacci(int nth) {
+        this.size = nth;
+        this.list = new ArrayList<>();
+        this.hashID = 0;
+        this.hash = new HashMap<>();
+        //initialize fibonacci and time algorithm
+        Instant start = Instant.now();  // time capture -- start
+        this.init();
+        Instant end = Instant.now();    // time capture -- end
+        this.timeElapsed = Duration.between(start, end);
+    }
+
+    /*
+     Method is abstract as init() requires extender to define their own Fibonacci algorithm
+     Method is protected as it is only authorized to someone who extends the class
+     */
+    protected abstract void init();
+
+    /*
+     Number is added to Fibonacci sequence, current state of "list" is added to hash for hashID "num"
+     */
+    public void setData(long num) {
+        list.add(num);
+        hash.put(this.hashID++, list.clone());
+    }
+
+    /*
+     Custom Getter for timeElapsed in init process, timeElapsed.getNano() is part of Duration class
+     */
+    public int getTimeElapsed() {
+        return timeElapsed.getNano();
+    }
+
+    /*
+     Custom Getter to return last element in Fibonacci sequence
+     */
+    public long getNth() {
+        return list.get(size - 1);
+    }
+
+    /*
+     Custom Getter to return last Fibonacci sequence in HashMap
+     */
+    public Object getNthSeq(int i) {
+        return hash.get(i);
+    }
+
+    /*
+     Console/Terminal supported print method
+     */
+    public void print() {
+        ConsoleMethods.println("Init method = " + this.name);
+        ConsoleMethods.println("Init time = " + this.getTimeElapsed());
+        ConsoleMethods.println("Fibonacci Number " + this.size + " = " + this.getNth());
+        ConsoleMethods.println("Fibonacci List = " + this.getList());
+        ConsoleMethods.println("Fibonacci Hashmap = " + this.getHash());
+        for (int i=0 ; i<this.size; i++ ) {
+            ConsoleMethods.println("Fibonacci Sequence " + (i+1) + " = " + this.getNthSeq(i));
+        }
+    }
+
+    /*
+    Tester class method.  This calls "main" class of each of the extended classes in the package
+     */
+    public static void main(String[] args) {
+        FibFor.main(null);
+        FibRecurse.main(null);
+        FibStream.main(null);
+        FibWhile.main(null);
+    }
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/LinkedLists/StackDriver.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/LinkedLists/StackDriver.java b/src/main/java/com/nighthawk/csa/data/LinkedLists/StackDriver.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/LinkedLists/StackDriver.java	
@@ -0,0 +1,85 @@
+package com.nighthawk.csa.data.LinkedLists;
+
+
+import com.nighthawk.csa.consoleUI.ConsoleMethods;
+import com.nighthawk.csa.data.DataOps.genericDataModel.Alphabet;
+import com.nighthawk.csa.data.DataOps.genericDataModel.Animal;
+import com.nighthawk.csa.data.DataOps.genericDataModel.Cupcakes;
+
+/**
+ * Stack Driver takes a list of Objects and puts them onto the Stack
+ * @author johnmortensen
+ *
+ */
+public class StackDriver {
+
+    private Stack stack;
+    private String dataType="";
+    private int count;
+
+    public StackDriver()
+    {
+        count = 0;
+        stack = new Stack();
+    }
+
+    public void setDataType(String dataType) {
+        this.dataType = dataType;
+    }
+
+    public void pushStack(Object[] objects)
+    {
+        ConsoleMethods.println("Add " + dataType);
+        for (Object o : objects)
+        {
+            stack.push(o);
+            ConsoleMethods.println("Push: " + stack.getObject() + " " + stack);
+            this.count++;
+        }
+        ConsoleMethods.println();
+
+    }
+
+    public void showStack()
+    {
+        ConsoleMethods.println("Size: " + count);
+        ConsoleMethods.println("Top Element: " + stack.getObject());
+        ConsoleMethods.println("Full Stack: " + stack);
+        ConsoleMethods.println();
+    }
+
+    public void popStack()
+    {
+        ConsoleMethods.println("Delete " + dataType);
+        for (int x = 0; x<count; x++)
+        {
+            ConsoleMethods.println("Pop: " + stack.pop() + " " + stack);
+        }
+    }
+
+    /*
+     * Illustrate different Objects that can be placed on same Stack
+     */
+    public static void main(String[] args)
+    {
+        StackDriver trial = new StackDriver();
+
+        // setup for Animals
+        trial.setDataType("Animals");
+        trial.pushStack(Animal.animalData());
+
+        // setup for Cupcakes
+        trial.setDataType("Cupcakes");
+        trial.pushStack(Cupcakes.cupCakeData());
+
+        // setup for Alphabet
+        trial.setDataType("Alphabet");
+        trial.pushStack(Alphabet.alphabetData());
+
+        // mixed stack
+        trial.setDataType("Alphabet then Cupcakes then Animals");
+        trial.showStack();
+        trial.popStack();
+    }
+
+}
Index: src/main/java/com/nighthawk/csa/data/LinkedLists/Stack.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/LinkedLists/Stack.java b/src/main/java/com/nighthawk/csa/data/LinkedLists/Stack.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/LinkedLists/Stack.java	
@@ -0,0 +1,91 @@
+package com.nighthawk.csa.data.LinkedLists;
+
+import java.util.*;
+
+/**
+ *  Implementation of Stack, using LinkedList (previous only).
+ *  December 24, 2019
+ * @author     John Mortensen
+ *
+ */
+public class Stack
+{
+    private LinkedList lifo;  // last in first out Object of stack
+
+    /**
+     *  Constructor for the SinglyLinkedList object
+     *  Generates an empty list.
+     */
+    public Stack()
+    {
+        lifo = null;
+    }
+
+    /**
+     *  Returns the current (LIFO) objects value.
+     *
+     * @return  the current objects value in Stack.
+     */
+    public Object getObject()
+    {
+        if (lifo == null)
+        {
+            throw new NoSuchElementException();
+        }
+        else
+            return lifo.getObject();
+    }
+
+    /**
+     *  Inserts a new object at the top of this Stack,
+     *
+     * @param  value  is the data to be inserted at the top of the Stack.
+     */
+    public void push(Object value)
+    {
+        // note the order that things happen:
+        // the new object becomes current and gets a value
+        // current lifo is parameter, it is assigned as previous node in lifo
+        lifo = new LinkedList(value, lifo);
+    }
+
+    /**
+     *  Removes the top element in the Stack.  Garbage collection should destroy this element when needed.
+     *
+     */
+    public Object pop()
+    {
+        Object value = null;
+
+        if (lifo != null) {
+            value = lifo.getObject();
+            lifo = lifo.getPrevious();
+        }
+
+        return value;
+    }
+
+    /**
+     *  Returns a string representation of this Stack,
+     *  polymorphic nature of toString overrides of standard System.out.print behavior
+     *
+     * @return    string representation of this list
+     */
+    public String toString()
+    {
+        StringBuilder stackToString = new StringBuilder("[");
+
+        LinkedList node = lifo;  				// start from the back
+        while (node != null)
+        {
+            stackToString.append(node.getObject()); 	// append the data to output string
+            node = node.getPrevious();    		// go to previous node
+            if (node != null)
+                stackToString.append(", ");
+        }										// loop 'till you reach the beginning
+        stackToString.append("]");
+        return stackToString.toString();
+    }
+
+
+}
Index: src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibFor.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibFor.java b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibFor.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibFor.java	
@@ -0,0 +1,29 @@
+package com.nighthawk.csa.algorithm.FibonacciModel;
+
+public class FibFor extends _Fibonacci {
+    // zero and one argument constructors, both defer to super
+    public FibFor() { super(); }
+    public FibFor(int nth) {
+        super(nth);
+    }
+
+    /*
+    Abstract Polymorphic "init()" method using For
+     */
+    @Override
+    protected void init() {
+        super.name = "For";
+        long limit = super.size;
+        // for loops are likely the most common iteration structure, all the looping facts are in one line
+        for (long[] f = new long[]{0, 1}; limit-- > 0; f = new long[]{f[1], f[0] + f[1]})
+            super.setData(f[0]);
+    }
+
+    /*
+    Class method "main" with purpose of testing FibFor
+     */
+    public static void main(String[] args) {
+        _Fibonacci fibonacci = new FibFor(); // "FibFor" is used as initializer for the "_Fibonacci fibonacci"  object
+        fibonacci.print();
+    }
+}
Index: src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Generics.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Generics.java b/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Generics.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/DataOps/genericDataModel/Generics.java	
@@ -0,0 +1,17 @@
+package com.nighthawk.csa.data.DataOps.genericDataModel;
+
+import lombok.Getter;
+import lombok.Setter;
+
+/* This is wrapper class...
+ Objective would be to push more functionality into this Class to drive HTML definition
+ */
+@Getter
+@Setter
+public abstract class Generics {
+	public final String masterType = "Generic";
+	private String type;
+
+	// force toString
+	public abstract String toString();
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibRecurse.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibRecurse.java b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibRecurse.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibRecurse.java	
@@ -0,0 +1,41 @@
+package com.nighthawk.csa.algorithm.FibonacciModel;
+
+public class FibRecurse extends _Fibonacci {
+    public FibRecurse() {
+        super();
+    }
+    public FibRecurse(int nth) {
+        super(nth);
+    }
+
+    /*
+    Abstract Polymorphic "init()" method using Recursion
+    */
+    @Override
+    protected void init() {
+        //setup for recursion
+        super.name = "Recursion";
+        long limit = super.size;
+        long[] f = new long[]{0, 1};
+        initRecurse(limit,f);       // recursion is redirected
+    }
+
+    /*
+    Recursive methods contains an escape, in this  "base condition" with a limit
+    VERY IMPORTANT... recursion requires pre-decrement, post-decrement will not occur until unstacking
+     */
+    private void initRecurse(long limit, long[] f) {
+        if (limit == 0) return;                                 //exit condition
+        super.setData(f[0]);
+        // observe this syntax and function, many think of recursion as another way to do iteration
+        initRecurse(--limit, new long[]{f[1], f[0] + f[1]});
+    }
+
+    /*
+    Class method "main" with purpose of testing FibRecurse
+     */
+    public static void main(String[] args) {
+        _Fibonacci fibonacci = new FibRecurse();  // "FibRecurse" is used as initializer for the "_Fibonacci fibonacci"  object
+        fibonacci.print();
+    }
+}
Index: src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibWhile.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibWhile.java b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibWhile.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/algorithm/FibonacciModel/FibWhile.java	
@@ -0,0 +1,33 @@
+package com.nighthawk.csa.algorithm.FibonacciModel;
+
+public class FibWhile extends _Fibonacci {
+    public FibWhile() {
+        super();
+    }
+    public FibWhile(int nth) {
+        super(nth);
+    }
+
+    /*
+    Abstract Polymorphic "init()" method using While
+    */
+    @Override
+    protected void init() {
+        super.name = "While";
+        // longer and more error prone "while" syntax is often best performer in this small scale test
+        long limit = super.size;
+        long[] f = new long[]{0, 1};
+        while (limit-- > 0) {
+            super.setData(f[0]);
+            f = new long[]{f[1], f[0] + f[1]};
+        }
+    }
+
+    /*
+    Class method "main" with purpose of testing FibWhile
+     */
+    public static void main(String[] args) {
+        _Fibonacci fibonacci = new FibWhile();
+        fibonacci.print();
+    }
+}
Index: src/main/java/com/nighthawk/csa/data/SQL/PersonSqlRepository.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/SQL/PersonSqlRepository.java b/src/main/java/com/nighthawk/csa/data/SQL/PersonSqlRepository.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/SQL/PersonSqlRepository.java	
@@ -0,0 +1,48 @@
+package com.nighthawk.csa.data.SQL;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+
+    /*
+    This class has an instance of Java Persistence API (JPA)
+    -- @Autowired annotation. Allows Spring to resolve and inject collaborating beans into our bean.
+    -- Spring Data JPA will generate a proxy instance
+    -- Below are some CRUD methods that we can use with our database
+    */
+    @Service
+    @Transactional
+    public class PersonSqlRepository {
+
+        @Autowired
+        private PersonJpaRepository jpa;
+
+        public  List<Person>listAll() {
+            return jpa.findAll();
+        }
+
+        // custom query to find anything containing term in name or email ignoring case
+        public  List<Person>listLike(String term) {
+            return jpa.findByNameContainingIgnoreCaseOrEmailContainingIgnoreCaseOrSportContainingIgnoreCase(term, term, term);
+        }
+
+        // custom query to find anything containing term in name or email ignoring case
+        public  List<Person>listLikeNative(String term) {
+            String like_term = String.format("%%%s%%",term);  // Like required % rappers
+            return jpa.findByLikeTermNative(like_term);
+        }
+
+        public void save(Person person) {
+            jpa.save(person);
+        }
+
+        public Person get(long id) {
+            return jpa.findById(id).get();
+        }
+
+        public void delete(long id) {
+            jpa.deleteById(id);
+        }
+    }
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/SQL/SQLDialect.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/SQL/SQLDialect.java b/src/main/java/com/nighthawk/csa/data/SQL/SQLDialect.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/SQL/SQLDialect.java	
@@ -0,0 +1,140 @@
+package com.nighthawk.csa.data.SQL;
+
+import org.hibernate.dialect.Dialect;
+import org.hibernate.dialect.function.SQLFunctionTemplate;
+import org.hibernate.dialect.function.StandardSQLFunction;
+import org.hibernate.dialect.function.VarArgsSQLFunction;
+import org.hibernate.type.StringType;
+
+import java.sql.Types;
+
+/*
+This Dialect is brought into project to support SQLite
+ */
+public class SQLDialect extends Dialect {
+    public SQLDialect() {
+        registerColumnType(Types.BIT, "integer");
+        registerColumnType(Types.TINYINT, "tinyint");
+        registerColumnType(Types.SMALLINT, "smallint");
+        registerColumnType(Types.INTEGER, "integer");
+        registerColumnType(Types.BIGINT, "bigint");
+        registerColumnType(Types.FLOAT, "float");
+        registerColumnType(Types.REAL, "real");
+        registerColumnType(Types.DOUBLE, "double");
+        registerColumnType(Types.NUMERIC, "numeric");
+        registerColumnType(Types.DECIMAL, "decimal");
+        registerColumnType(Types.CHAR, "char");
+        registerColumnType(Types.VARCHAR, "varchar");
+        registerColumnType(Types.LONGVARCHAR, "longvarchar");
+        registerColumnType(Types.DATE, "date");
+        registerColumnType(Types.TIME, "time");
+        registerColumnType(Types.TIMESTAMP, "timestamp");
+        registerColumnType(Types.BINARY, "blob");
+        registerColumnType(Types.VARBINARY, "blob");
+        registerColumnType(Types.LONGVARBINARY, "blob");
+        // registerColumnType(Types.NULL, "null");
+        registerColumnType(Types.BLOB, "blob");
+        registerColumnType(Types.CLOB, "clob");
+        registerColumnType(Types.BOOLEAN, "integer");
+
+        registerFunction("concat", new VarArgsSQLFunction(StringType.INSTANCE, "", "||", ""));
+        registerFunction("mod", new SQLFunctionTemplate(StringType.INSTANCE, "?1 % ?2"));
+        registerFunction("substr", new StandardSQLFunction("substr", StringType.INSTANCE));
+        registerFunction("substring", new StandardSQLFunction("substr", StringType.INSTANCE));
+    }
+
+    public boolean supportsIdentityColumns() {
+        return true;
+    }
+
+    public boolean hasDataTypeInIdentityColumn() {
+        return false; // As specify in NHibernate dialect
+    }
+
+    public String getIdentityColumnString() {
+        // return "integer primary key autoincrement";
+        return "integer";
+    }
+
+    public String getIdentitySelectString() {
+        return "select last_insert_rowid()";
+    }
+
+    public boolean supportsLimit() {
+        return true;
+    }
+
+    protected String getLimitString(String query, boolean hasOffset) {
+        return new StringBuffer(query.length() + 20).append(query).append(hasOffset ? " limit ? offset ?" : " limit ?")
+                .toString();
+    }
+
+    public boolean supportsTemporaryTables() {
+        return true;
+    }
+
+    public String getCreateTemporaryTableString() {
+        return "create temporary table if not exists";
+    }
+
+    public boolean dropTemporaryTableAfterUse() {
+        return false;
+    }
+
+    public boolean supportsCurrentTimestampSelection() {
+        return true;
+    }
+
+    public boolean isCurrentTimestampSelectStringCallable() {
+        return false;
+    }
+
+    public String getCurrentTimestampSelectString() {
+        return "select current_timestamp";
+    }
+
+    public boolean supportsUnionAll() {
+        return true;
+    }
+
+    public boolean hasAlterTable() {
+        return false; // As specify in NHibernate dialect
+    }
+
+    public boolean dropConstraints() {
+        return false;
+    }
+
+    public String getAddColumnString() {
+        return "add column";
+    }
+
+    public String getForUpdateString() {
+        return "";
+    }
+
+    public boolean supportsOuterJoinForUpdate() {
+        return false;
+    }
+
+    public String getDropForeignKeyString() {
+        throw new UnsupportedOperationException("No drop foreign key syntax supported by SQLiteDialect");
+    }
+
+    public String getAddForeignKeyConstraintString(String constraintName, String[] foreignKey, String referencedTable,
+                                                   String[] primaryKey, boolean referencesPrimaryKey) {
+        throw new UnsupportedOperationException("No add foreign key syntax supported by SQLiteDialect");
+    }
+
+    public String getAddPrimaryKeyConstraintString(String constraintName) {
+        throw new UnsupportedOperationException("No add primary key syntax supported by SQLiteDialect");
+    }
+
+    public boolean supportsIfExistsBeforeTableName() {
+        return true;
+    }
+
+    public boolean supportsCascadeDelete() {
+        return false;
+    }
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/SQL/SportInfo.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/SQL/SportInfo.java b/src/main/java/com/nighthawk/csa/data/SQL/SportInfo.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/SQL/SportInfo.java	
@@ -0,0 +1,38 @@
+package com.nighthawk.csa.data.SQL;
+
+import com.mysql.cj.jdbc.MysqlDataSource;
+import java.sql.Connection;
+import java.sql.SQLException;
+import java.util.logging.Level;
+import java.util.logging.Logger;
+
+public class SportInfo {
+
+    private static String servername = "userhost";
+    private static String username = "userinfo";
+    private static String dbname  = "users_db";
+    private static Integer portnumber  = 3306;
+    private static String password = "codecodecode";
+
+    public static Connection getConnection()
+    {
+        Connection sport = null;
+
+        MysqlDataSource datasource = new MysqlDataSource();
+
+        datasource.setServerName(servername);
+        datasource.setUser(username);
+        datasource.setPassword(password);
+        datasource.setDatabaseName(dbname);
+        datasource.setPortNumber(portnumber);
+
+        try {
+            sport = datasource.getConnection();
+        } catch (SQLException ex) {
+            Logger.getLogger(" Get Connection -> " + SportInfo.class.getName()).log(Level.SEVERE, null, ex);
+        }
+
+        return sport;
+    }
+
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/SQL/Person.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/SQL/Person.java b/src/main/java/com/nighthawk/csa/data/SQL/Person.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/SQL/Person.java	
@@ -0,0 +1,72 @@
+package com.nighthawk.csa.data.SQL;
+
+import lombok.*;
+import org.springframework.format.annotation.DateTimeFormat;
+
+import javax.persistence.*;
+import javax.validation.constraints.*;
+import java.time.LocalDate;
+import java.time.Period;
+import java.time.ZoneId;
+import java.util.Date;
+
+/*
+Person is a POJO, Plain Old Java Object.
+First set of annotations add functionality to POJO
+--- @Setter @Getter @ToString @NoArgsConstructor @RequiredArgsConstructor
+The last annotation connect to database
+--- @Entity
+ */
+@Setter
+@Getter
+@ToString
+@NoArgsConstructor
+@RequiredArgsConstructor
+@Entity
+public class Person {
+    @Id
+    @GeneratedValue(strategy = GenerationType.AUTO)
+    private Long id;
+
+    @NotEmpty
+    @Size(min=5)
+    @Email
+    private String email;
+
+    /*
+    @NonNull: Places this in @RequiredArgsConstructor
+    @Size(min=2, max=30): Allows names between 2 and 30 characters long.
+     */
+    @NonNull
+    @Size(min = 2, max = 30, message = "Name (2 to 30 chars)")
+    private String name;
+
+    @NonNull
+    @Size(min = 2, max = 30, message = "Sport (2 to 30 chars)")
+    private String sport;
+
+    @NonNull
+    @Size(min = 2, max = 500, message = "Image Link")
+    private String image;
+
+    @DateTimeFormat(pattern = "yyyy-MM-dd")
+    private Date dob;
+
+    /* Initializer used when setting data from an API */
+    public Person(String email, String name, String sport, String image, Date dob) {
+        this.email = email;
+        this.name = name;
+        this.sport = sport;
+        this.image = image;
+        this.dob = dob;
+    }
+
+    /* A custom getter to return age from dob calculation */
+    public int getAge() {
+        if (this.dob != null) {
+            LocalDate birthDay = this.dob.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
+            return Period.between(birthDay, LocalDate.now()).getYears(); }
+        return -1;
+    }
+
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/LinkedLists/LinkedList.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/LinkedLists/LinkedList.java b/src/main/java/com/nighthawk/csa/data/LinkedLists/LinkedList.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/LinkedLists/LinkedList.java	
@@ -0,0 +1,98 @@
+package com.nighthawk.csa.data.LinkedLists;
+/**
+ *  Implementation of a Linked List with an Object reference as data;  forward and backward links point to adjacent Nodes.
+ *
+ */
+
+public class LinkedList
+{
+    private Object opaqueObject;
+    private LinkedList prevNode;
+    private LinkedList nextNode;
+
+    /**
+     *  Constructs a new element with object objValue,
+     *  followed by object address
+     *
+     * @param  opaqueObject  Address of Object
+     */
+    public LinkedList(Object opaqueObject, LinkedList node)
+    {
+        setObject(opaqueObject);
+        setPrevNode(node);
+        setNextNode(null);
+    }
+
+    /**
+     *  Clone an object,
+     *
+     * @param  node  object to clone
+     */
+    public LinkedList(LinkedList node)
+    {
+        opaqueObject = node.opaqueObject;
+        prevNode = node.prevNode;
+        nextNode = node.nextNode;
+    }
+
+    /**
+     *  Setter for opaqueObjecg in LinkedList object
+     *
+     * @param  opaqueObject  Address of Object
+     */
+    public void setObject(Object opaqueObject)
+    {
+        this.opaqueObject = opaqueObject;
+    }
+
+    /**
+     *  Setter for prevNode in LinkedList object
+     *
+     * @param node     A LinkedList object that is prevNode to current Object
+     */
+    public void setPrevNode(LinkedList node)
+    {
+        this.prevNode = node;
+    }
+
+    /**
+     *  Setter for nextNode in LinkedList object
+     *
+     * @param node     A LinkedList object that is nextNode to current Object
+     */
+    public void setNextNode(LinkedList node)
+    {
+        this.nextNode = node;
+    }
+
+    /**
+     *  Returns opaqueObject for this element
+     *
+     * @return    The opaqueObject associated with this element
+     */
+    public Object getObject()
+    {
+        return opaqueObject;
+    }
+
+    /**
+     *  Returns reference to previous object in list
+     *
+     * @return    The pointer is to the previous object in the list
+     */
+    public LinkedList getPrevious()
+    {
+        return prevNode;
+    }
+
+    /**
+     *  Returns reference to next object in list
+     *
+     * @return    The pointer is to the next object in the list
+     */
+    public LinkedList getNext()
+    {
+        return nextNode;
+    }
+
+}
Index: src/main/java/com/nighthawk/csa/data/LinkedLists/CircleQueue.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/LinkedLists/CircleQueue.java b/src/main/java/com/nighthawk/csa/data/LinkedLists/CircleQueue.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/LinkedLists/CircleQueue.java	
@@ -0,0 +1,210 @@
+package com.nighthawk.csa.data.LinkedLists;
+
+/**
+ *  Implementation of Queue, using LinkedList (previous and next).
+ *  December 24, 2019
+ * @author     John Mortensen
+ *
+ */
+public class CircleQueue
+{
+    private LinkedList headNode;			// 1st element in Queue
+    private LinkedList tailNode;			// Last element in Queue
+    private LinkedList currentNode;
+
+    /**
+     *  Constructor for the SinglyLinkedList object
+     *  Generates an empty list.
+     */
+    public CircleQueue()
+    {
+        headNode = null;
+        tailNode = null;
+        currentNode = null;
+    }
+
+    /**
+     *  Returns the head opaqueObject.
+     *
+     * @return  the head opaqueObject in Stack.
+     */
+    public Object getFirstObject()
+    {
+        currentNode = headNode;
+
+        if (headNode == null)
+            return null;
+        else
+            return headNode.getObject();
+    }
+
+    /**
+     *  Returns the tail opaqueObjects.
+     *
+     * @return  the current opaqueObject in Stack.
+     */
+    public Object getLastObject()
+    {
+        currentNode = tailNode;
+
+        if (tailNode == null)
+            return null;
+        else
+            return tailNode.getObject();
+    }
+
+    /**
+     *  Returns the current Object
+     *
+     * @return  the current Object in Stack.
+     */
+    public Object getObject()
+    {
+        if (currentNode == null)
+            return null;
+        else
+            return currentNode.getObject();
+    }
+
+    /**
+     *  Advances the current node.
+     *
+     */
+    public Object setNext()
+    {
+        currentNode = currentNode.getNext();
+
+        // never let currentNode be null, wrap to head
+        if (currentNode == null)
+            currentNode = headNode;
+
+        return currentNode.getObject();
+    }
+
+    /**
+     *  Reverses the current node.
+     *
+     */
+    public void setPrevious()
+    {
+        currentNode = currentNode.getPrevious();
+
+        // never let currentNode be null, wrap to head
+        if (currentNode == null)
+            currentNode = tailNode;
+    }
+
+
+    /**
+     *  Add a new object at the end of the Queue,
+     *
+     * @param  opaqueObject  is the data to be inserted in the Queue object.
+     */
+    public void add(Object opaqueObject)
+    {
+        // add new object to end of Queue
+        // set opaqueObject
+        // build previous link of tail (as current)
+        tailNode = new LinkedList(opaqueObject, currentNode);
+
+        // build next link of current (as tail)
+        if (currentNode != null)
+            currentNode.setNextNode(tailNode);
+
+        // after links are established current eq tail
+        currentNode = tailNode;
+
+        // head eq tail on 1st element only
+        if (headNode == null) {
+            headNode = tailNode;
+        }
+    }
+
+    /**
+     *  Delete an object from the front of the Queue,
+     *
+     */
+    public Object delete()
+    {
+        Object opaqueObject = null;
+
+        if (headNode != null) {
+            opaqueObject = headNode.getObject();
+            headNode = headNode.getNext();
+            if (headNode == null)
+                tailNode = headNode;
+            else
+                headNode.setPrevNode(null);
+        }
+
+        return opaqueObject;
+    }
+
+
+    /**
+     *  Returns a string representation of this Queue,
+     *  polymorphic nature of toString overrides of standard System.out.print behavior
+     *
+     * @return    string representation of this Queue
+     */
+    public String toString()
+    {
+        StringBuilder queueToString = new StringBuilder("[");
+
+        LinkedList node = headNode;  			// start from the head
+        while (node != null)
+        {
+            queueToString.append("(").append(node.getObject()).append(")"); 	// append the data to output string
+            node = node.getNext();				// go to next node
+            if (node != null)
+                queueToString.append(", ");
+        }										// loop 'till queue ends
+        queueToString.append("]");
+        return queueToString.toString();
+    }
+
+    /**
+     * Performs insertion sort based off of the contents of object
+     */
+    public void insertionSort() {
+
+        //two nodes needed for insertion sort indexes
+        LinkedList node1 = headNode;
+        LinkedList node2 = (node1 == null) ? null : node1.getNext();
+
+        //continue while nodes remain in bounds
+        while (node2 != null) {
+
+            //inner loop pointers for compares and shifts
+            LinkedList slot1 = node1;
+            LinkedList slot2 = node2;
+
+            //key to be inserted into sorted slot
+            LinkedList key = new LinkedList(node2);		//note: make key a different object, persistent/static in value (node2 moves)
+            String keyText = node2.getObject().toString();
+
+            //walks slots backwards until key position in found
+            while ( slot1.getObject().toString().compareTo(keyText) > 0 ) {
+                //shifts object greater than key value to the right in list
+                slot2.setObject(slot1.getObject());
+
+                //moves inner loop pointers
+                slot1 = slot1.getPrevious();
+                slot2 = slot2.getPrevious();
+
+                //stop at the front of list
+                if (slot1 == null)
+                    break;
+
+            }
+            //place key in insertion position
+            slot2.setObject(key.getObject());
+
+            //advance insertion sort indexes
+            node1 = node1.getNext();
+            node2 = node2.getNext();
+        }
+
+    }
+
+}
Index: src/main/java/com/nighthawk/csa/data/DataOps/DataOps.md
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/DataOps/DataOps.md b/src/main/java/com/nighthawk/csa/data/DataOps/DataOps.md
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/DataOps/DataOps.md	
@@ -0,0 +1,37 @@
+# Data Ops with Spring/Java
+
+### Overview
+This lab and future labs can/should be strung together.
+
+1. Pull code and Demo.
+2. Key elements (Data, Controller, Data Structure, Sort)
+   -- Activity, reverse order of sort --
+3. Object, toString, changing Key (static)
+   -- Add data to a Class --
+4. Look at Checkboxes and Radio Buttons.
+   -- Activity, add sound to animal sort key (can you get it to work?) --
+
+### Key Topics
+* @Controller (My code)
+* Static Variables
+* Enums
+### Other Topics
+* Inheritance
+* Abstract Class
+* Linked Lists
+
+### Mini-lab Ideas
+1. Build  section into your Scrum Team project or individual section for execution.
+2. Build abstract Class and have multiple derivative classes (extend) with Override on method(s).
+3. Have default data that loads and displays on Web page
+4. Interact with data on Web to Filter result using Check Box and Radio Controls
+5. Prepare or think ahead to Sort lab.
+
+### Mini-lab binary point criteria
+* Make your own Data/Class and initialize it.   See how far you can go  to get things to work.  Make adaptations as you see fit.
+* Use of toString()
+* Use of a Data Structure to hold Objects of your Class or Abstract class.
+* Web UI and visuals to interact with data
+* Check Boxes
+* Radio Buttons
+* Console testers of component parts of system.
Index: src/main/java/com/nighthawk/csa/consoleUI/ConsoleMethods.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/consoleUI/ConsoleMethods.java b/src/main/java/com/nighthawk/csa/consoleUI/ConsoleMethods.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/consoleUI/ConsoleMethods.java	
@@ -0,0 +1,106 @@
+package com.nighthawk.csa.consoleUI;
+
+public class ConsoleMethods {
+
+    //Method to make sure no data is available in the
+    //input stream
+    private static void inputFlush() {
+        try {
+            while (System.in.available() != 0) {
+            }
+        } catch (java.io.IOException e) {
+            System.out.println("Input error");
+        }
+    }
+
+    public static void printChar(char txt)
+    {
+        System.out.print(txt);
+    }
+
+    public static void clearScreen()
+    {
+        printChar('\u000C');
+    }
+
+    public static void print(String txt)
+    {
+        System.out.print(txt);
+    }
+
+    public static void println()
+    {
+        System.out.println("\n");
+    }
+
+    public static void println(String txt)
+    {
+        System.out.println(txt);
+    }
+
+    public static void println(Object obj)
+    {
+        System.out.println(obj);
+    }
+
+    public static void printPrompt(String prompt) {
+        print(prompt + " ");
+        System.out.flush();
+    }
+
+    public static String inputString(String prompt) {
+        //inputFlush();
+        printPrompt(prompt);
+        return inString();
+    }
+
+    private static String inString() {
+        int aChar;
+        StringBuilder s = new StringBuilder();
+        boolean finished = false;
+
+        while (!finished) {
+            try {
+                aChar = System.in.read();
+                if (aChar < 0 || (char) aChar == '\n')
+                    finished = true;
+                else if ((char) aChar != '\r')
+                    s.append((char) aChar); // Enter into string
+            }
+            catch (java.io.IOException e) {
+                System.out.println("Input error");
+                finished = true;
+            }
+        }
+        return s.toString();
+    }
+
+    public static int inputInt(String prompt) {
+        while (true) {
+            inputFlush();
+            printPrompt(prompt);
+            try {
+                return Integer.parseInt(inString().trim());
+            }
+
+            catch (NumberFormatException e) {
+                System.out.println("Invalid input. Not an integer");
+            }
+        }
+    }
+
+    public static char inputChar(String prompt) {
+        int aChar = 0;
+        inputFlush();
+        printPrompt(prompt);
+        try {
+            aChar = System.in.read();
+        }
+        catch (java.io.IOException e) {
+            println("Input error");
+        }
+        inputFlush();
+        return (char) aChar;
+    }
+
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/algorithm/FibonacciController.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/algorithm/FibonacciController.java b/src/main/java/com/nighthawk/csa/algorithm/FibonacciController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/algorithm/FibonacciController.java	
@@ -0,0 +1,47 @@
+package com.nighthawk.csa.algorithm;
+
+import com.nighthawk.csa.algorithm.FibonacciModel.*;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.ArrayList;
+import java.util.List;
+
+@Controller  // HTTP requests are handled as a controller, using the @Controller annotation
+public class FibonacciController {
+
+    public List<_Fibonacci> fibInit(int nth) {
+        //Fibonacci objects created with different initializers
+        List<_Fibonacci> fibList = new ArrayList<>();
+        fibList.add(new FibFor(nth));
+        fibList.add(new FibWhile(nth));
+        fibList.add(new FibRecurse(nth));
+        fibList.add(new FibStream(nth));
+
+        return fibList;
+    }
+
+    // GET request,, parameters are passed within the URI
+    @GetMapping("/fib")
+    public String fib(@RequestParam(name="fibseq", required=false,  defaultValue="2") String fibseq, Model model) {
+        //nth is fibonacci request
+        int nth = Integer.parseInt(fibseq);
+
+        //MODEL attributes are passed back html
+        model.addAttribute("fibList", fibInit(nth));
+
+        return "algorithm/fib"; //HTML render fibonacci results
+
+    }
+
+    // Console UI is run out of the same Controller
+    public static void main(String[] args) {
+        int nth = 20; //!!!make dynamic using consoleUI inputInt!!! 92 is max for long
+
+        List<_Fibonacci> fibList = new FibonacciController().fibInit(nth);
+        for (_Fibonacci fibonacci : fibList)
+            fibonacci.print();  //Console output fibonacci results
+    }
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/algorithm/FunMath.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/algorithm/FunMath.java b/src/main/java/com/nighthawk/csa/algorithm/FunMath.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/algorithm/FunMath.java	
@@ -0,0 +1,54 @@
+package com.nighthawk.csa.algorithm;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class FunMath {
+
+    /* Convert num into a list of digits of the specified base
+        num: an integer
+        base: binary, octal, decimal, hexadecimal
+        @return: a list containing the series of digits of specified base
+     */
+    static List<Integer> baseConvert(int num, int base) {
+        List<Integer> num_list = new ArrayList();         // what is List versus ArrayList?  Which one is Abstract?
+        do {
+            num_list.add(0, num % base);    // what does this do?  explain boxing and unboxing
+            num /= base;                                  // what does this do?
+        } while (num > 0);                                // why did I put this on the end
+
+        return num_list;
+    }
+
+    /* Recursion algorithm that does the summation of series of integers up to n
+        num: an integer
+        @return:
+     */
+    static int sumUp(int n) {
+        return n == 0 ? 0 : n + sumUp(n - 1);          // what is this called?  hint TO.
+    }
+
+    public static void main(String[] args) {
+        // Summation of a series starts a 1 and goes to 6
+        System.out.println(sumUp(6));
+
+        // Base 2
+        System.out.println(baseConvert(0,2));
+        System.out.println(baseConvert(255,2));
+        System.out.println(baseConvert(256,2));
+        // Base 8
+        System.out.println(baseConvert(0,28));
+        System.out.println(baseConvert(255,8));
+        System.out.println(baseConvert(256,8));
+        // Base 10
+        System.out.println(baseConvert(0,10));
+        System.out.println(baseConvert(255,10));
+        System.out.println(baseConvert(256,10));
+        // Base 16
+        System.out.println(baseConvert(0,16));
+        System.out.println(baseConvert(255,16));
+        System.out.println(baseConvert(256,16));
+
+    }
+}
+
Index: src/main/java/com/nighthawk/csa/data/API/APIController.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/API/APIController.java b/src/main/java/com/nighthawk/csa/data/API/APIController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/API/APIController.java	
@@ -0,0 +1,76 @@
+package com.nighthawk.csa.data.API;
+
+import org.json.simple.parser.ParseException;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.GetMapping;
+
+import org.springframework.ui.Model;
+import com.fasterxml.jackson.databind.ObjectMapper;
+
+import java.util.HashMap;
+
+import org.json.simple.JSONObject;
+import org.json.simple.parser.JSONParser;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.io.IOException;
+import java.net.URI;
+import java.net.http.HttpClient;
+import java.net.http.HttpRequest;
+import java.net.http.HttpResponse;
+
+
+@Controller
+public class APIController {
+
+    // GET request, no parameters
+    @GetMapping("/sportsnews")
+    public String News(Model model) throws IOException, InterruptedException, ParseException {
+        //api setup:
+        HttpRequest request = HttpRequest.newBuilder()
+                .uri(URI.create("https://livescore6.p.rapidapi.com/news/v2/list-by-sport?category=2021020913321150030&page=1"))
+                .header("x-rapidapi-host", "livescore6.p.rapidapi.com")
+                .header("x-rapidapi-key", "00ccce1983msh870532702332d54p113f94jsn9fd7d405018d")
+                .method("GET", HttpRequest.BodyPublishers.noBody())
+                .build();
+        HttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());
+//        System.out.println(response.body());
+
+        //alternative #2: convert response.body() to JSON object
+        Object obj = new JSONParser().parse(response.body());
+        JSONObject jo = (JSONObject) obj;
+
+//        System.out.println(jo.get("data"));
+        model.addAttribute("data", jo.get("data"));
+
+        return "data/list-by-sport";
+    }
+
+
+    @GetMapping("/soccerNews")
+    public String soccer(Model model) throws IOException, InterruptedException, ParseException {
+
+        HttpRequest request = HttpRequest.newBuilder()
+                .uri(URI.create("https://livescore6.p.rapidapi.com/matches/v2/list-live?Category=soccer%22"))
+                        .header("x-rapidapi-host", "livescore6.p.rapidapi.com")
+                        .header("x-rapidapi-key", "00ccce1983msh870532702332d54p113f94jsn9fd7d405018d")
+                        .method("GET", HttpRequest.BodyPublishers.noBody())
+                        .build();
+        HttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());
+        System.out.println(response.body());
+
+        //alternative #2: convert response.body() to JSON object
+        Object obj = new JSONParser().parse(response.body());
+        JSONObject jo = (JSONObject) obj;
+
+//        System.out.println(jo.get("data"));
+        model.addAttribute("data", jo.get("data"));
+
+        return "data/list-by-sport";
+    }
+
+
+
+
+
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/SQL/PersonJpaRepository.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/SQL/PersonJpaRepository.java b/src/main/java/com/nighthawk/csa/data/SQL/PersonJpaRepository.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/SQL/PersonJpaRepository.java	
@@ -0,0 +1,30 @@
+package com.nighthawk.csa.data.SQL;
+
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.Query;
+
+import java.util.List;
+
+/*
+Extends the JpaRepository interface from Spring Data JPA.
+-- Java Persistent API (JPA) - Hibernate: map, store, update and retrieve data
+-- JpaRepository defines standard CRUD methods
+-- Via JPA the developer can retrieve data from relational databases to Java objects and vice versa.
+ */
+public interface PersonJpaRepository extends JpaRepository<Person, Long> {
+    // JPA query, findBy does JPA magic with "Name", "Containing", "Or", "Email", "IgnoreCase"
+    List<Person> findByNameContainingIgnoreCaseOrEmailContainingIgnoreCaseOrSportContainingIgnoreCase(String name, String email, String sport);
+    /* Custom JPA query articles, there are articles that show custom SQL as well
+       https://springframework.guru/spring-data-jpa-query/
+       https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#jpa.query-methods
+     */
+
+    // Custom JPA query
+    @Query(
+            value = "SELECT * FROM Person p WHERE p.name LIKE ?1 or p.email LIKE ?1 or p.sport LIKE ?1",
+            nativeQuery = true)
+    List<Person> findByLikeTermNative(String term);
+    /*
+        https://www.baeldung.com/spring-data-jpa-query
+     */
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/CB/collegeboard.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/CB/collegeboard.java b/src/main/java/com/nighthawk/csa/data/CB/collegeboard.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/CB/collegeboard.java	
@@ -0,0 +1,81 @@
+package com.nighthawk.csa.data.CB;
+
+import org.json.simple.JSONArray;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+
+import org.json.simple.JSONObject;
+import org.json.simple.parser.JSONParser;
+
+import java.io.FileReader;
+
+@Controller
+public class collegeboard {
+
+    @GetMapping("/frq")
+    public String cb(Model model) {
+        JSONParser parser = new JSONParser();
+        try
+        {
+            Object object = parser
+                    .parse(new FileReader("src/main/java/com/nighthawk/csa/data/CB/FRQ.json"));
+
+            //convert Object to JSONObject
+            JSONObject jsonObject = (JSONObject)object;
+
+            //Reading the array
+            JSONArray week2 = (JSONArray)jsonObject.get("Week 2");
+//            JSONArray week3 = (JSONArray)jsonObject.get("Week 3");
+
+            //Printing all the values
+            // Week 2
+            for(Object frq2 : week2)
+            {
+                System.out.println("\t"+frq2.toString());
+            }
+
+            // Week3
+//            for(Object frq3 : week3)
+//            {
+//                System.out.println("\t"+frq3.toString());
+//            }
+
+            // Week4
+//            for(Object frq4 : week4)
+//            {
+//                System.out.println("\t"+frq4.toString());
+//            }
+
+
+            model.addAttribute("week2", week2);
+//            model.addAttribute("week3", week3);
+//            model.addAttribute("week4", week4);
+
+
+        } catch(Exception fe)
+        {
+            fe.printStackTrace();
+        }
+        return "data/collegeboard";
+
+    }
+}
+
+//        ArrayList<FRQ> frqs = new ArrayList<>();
+//
+//        JSONParser parser = new JSONParser();
+//        Object obj = parser.parse(new FileReader("src/main/java/com/nighthawk/csa/data/CB/FRQ.json"));
+//        JSONObject jsonObject = (JSONObject) obj;
+//
+//        for (Object o : jsonObject.keySet()) {
+//            String key = (String) o;
+//
+//            // Song song = new Song();
+//            JSONObject FRQobj = (JSONObject) jsonObject.get(key);
+//            frqs.add(new FRQ((String) FRQobj.get("name"), (String) FRQobj.get("gist"), (String) FRQobj.get("output")));
+//        }
+//
+//        System.out.println(frqs.get(0));
+//        model.addAttribute("FRQlist", frqs);
+//        model.addAttribute("frq",frq);
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/CB/FRQ.json
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/CB/FRQ.json b/src/main/java/com/nighthawk/csa/data/CB/FRQ.json
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/CB/FRQ.json	
@@ -0,0 +1,58 @@
+{
+  "Week 2": [
+    {
+      "name": "Ak",
+      "gist": "https://gist.github.com/akprathipati/316beb706c193c58bace98c6538350d8",
+      "correction": "I didnt fully understand the extent and on the last question I intially used a double varible insidead of a  System.out.println(Math.sqrt(aa + bb))"
+    },
+    {
+      "name": "Chris",
+      "gist": "https://gist.github.com/Chris-Ru/dac156151637be81476e1e3720adefff",
+      "correction": "overall this was kinda confusing but understandable to an extent. "
+    },
+    {
+      "name": "Dane",
+      "gist": "https://gist.github.com/D1935827V/597952ba7cf55c8eda2cd93f4059036a",
+      "correction": "Mostly review I could work on syntax a little bit more. Could work on correcting spelling and revisit learning targets."
+    },
+    {
+      "name": "Eshaan",
+      "gist": "https://gist.github.com/KrispyKremeSavage/76c8389051669324e1b58945f6022ccf",
+      "correction": "For the last question, I could simplify the process by typing System.out.println(Math.sqrt(aa + bb)); instead of establishing double variable types and overcomplicating the process like I did. I'll probably have to revisit Unit 2 concepts to solidify my understanding a little bit more."
+    },
+    {
+      "name": "Yeonjoon",
+      "gist": "https://gist.github.com/yeonjoonhong/0667b5913ec60fd4f671393bcbad8d18",
+      "correction": "concepts were basically review but I needed to revisit some small learning targets to make corrections"
+    }
+  ],
+
+  "Week 3": [
+    {
+      "name": "Ak",
+      "gist": "https://google.com",
+      "correction": "code code code!"
+    },
+    {
+      "name": "Chris",
+      "gist": "https://gist.github.com/Chris-Ru/dac156151637be81476e1e3720adefff",
+      "correction": "code code code!"
+    },
+    {
+      "name": "Dane",
+      "gist": "https://gist.github.com/D1935827V/597952ba7cf55c8eda2cd93f4059036a",
+      "correction": "code code code!"
+    },
+    {
+      "name": "Eshaan",
+      "gist": "https://google.com",
+      "correction": "code code code!"
+    },
+    {
+      "name": "Yeonjoon",
+      "gist": "https://google.com",
+      "correction": "code code code!"
+    }
+  ]
+}
+
Index: src/main/java/com/nighthawk/csa/data/PersonSqlMvcController.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/PersonSqlMvcController.java b/src/main/java/com/nighthawk/csa/data/PersonSqlMvcController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/PersonSqlMvcController.java	
@@ -0,0 +1,154 @@
+package com.nighthawk.csa.data;
+
+
+import com.nighthawk.csa.data.SQL.*;
+import org.json.simple.JSONObject;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.*;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
+
+import javax.validation.Valid;
+import java.text.SimpleDateFormat;
+import java.util.*;
+
+// Built using article: https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/mvc.html
+// or similar: https://asbnotebook.com/2020/04/11/spring-boot-thymeleaf-form-validation-example/
+@Controller
+public class PersonSqlMvcController implements WebMvcConfigurer {
+
+    // Autowired enables Control to connect HTML and POJO Object to Database easily for CRUD
+    @Autowired
+    private PersonSqlRepository repository;
+
+    @GetMapping("/data/person")
+    public String person(Model model) {
+        List<Person> list = repository.listAll();
+        model.addAttribute("list", list);
+        return "data/person";
+    }
+
+    @GetMapping("/data/personsearch_get")
+    public String person() {
+        return "data/personsearch_get";
+    }
+
+    /*
+    The personSearch API looks across database for partial match to term (k,v) passed by RequestEntity body
+     */
+    @RequestMapping(value = "/api/personsearch_get", method = RequestMethod.POST, produces = MediaType.APPLICATION_JSON_VALUE)
+    public ResponseEntity<Object> personSearch(RequestEntity<Object> request) {
+
+        // extract term from RequestEntity
+        JSONObject json = new JSONObject((Map) Objects.requireNonNull(request.getBody()));
+        String term = (String) json.get("term");
+
+        // custom JPA query to filter on term
+        List<Person> list = repository.listLikeNative(term);
+
+        // return resulting list and status, error checking should be added
+        return new ResponseEntity<>(list, HttpStatus.OK);
+    }
+    /*  The HTML template Forms and PersonForm attributes are bound
+        @return - template for person form
+        @param - Person Class
+    */
+    @GetMapping("/data/personcreate")
+    public String personAdd(Person person) {
+        return "data/personcreate";
+    }
+
+    /* Gathers the attributes filled out in the form, tests for and retrieves validation error
+    @param - Person object with @Valid
+    @param - BindingResult object
+     */
+    @PostMapping("/data/personcreate")
+    public String personSave(@Valid Person person, BindingResult bindingResult) {
+        // Validation of Decorated PersonForm attributes
+        if (bindingResult.hasErrors()) {
+            return "data/personcreate";
+        }
+        repository.save(person);
+        // Redirect to next step
+        return "redirect:/data/person";
+    }
+
+    @GetMapping("/data/personupdate/{id}")
+    public String personUpdate(@PathVariable("id") int id, Model model) {
+        model.addAttribute("person", repository.get(id));
+        return "data/personupdate";
+    }
+
+    @PostMapping("/data/personupdate")
+    public String personUpdateSave(@Valid Person person, BindingResult bindingResult) {
+        // Validation of Decorated PersonForm attributes
+        if (bindingResult.hasErrors()) {
+            return "data/personupdate";
+        }
+        repository.save(person);
+        // Redirect to next step
+        return "redirect:/data/person";
+    }
+
+    @GetMapping("/data/persondelete/{id}")
+    public String personDelete(@PathVariable("id") long id) {
+        repository.delete(id);
+        return "redirect:/data/person";
+    }
+
+    /*
+    #### RESTful API section ####
+    Resource: https://spring.io/guides/gs/rest-service/
+    */
+
+    /*
+    GET List of People
+     */
+    @RequestMapping(value = "/api/people/get")
+    public ResponseEntity<List<Person>> getPeople() {
+        return new ResponseEntity<>( repository.listAll(), HttpStatus.OK);
+    }
+
+    /*
+    GET individual Person using ID
+     */
+    @RequestMapping(value = "/api/person/get/{id}")
+    public ResponseEntity<Person> getPerson(@PathVariable long id) {
+        return new ResponseEntity<>( repository.get(id), HttpStatus.OK);
+    }
+
+    /*
+    DELETE individual Person using ID
+     */
+    @RequestMapping(value = "/api/person/delete/{id}", method = RequestMethod.DELETE)
+    public ResponseEntity<Object> deletePerson(@PathVariable long id) {
+        repository.delete(id);
+        return new ResponseEntity<>( ""+ id +" deleted", HttpStatus.OK);
+    }
+
+
+    /*
+    POST Aa record by Requesting Parameters from URI
+     */
+    @RequestMapping(value = "/api/person/post", method = RequestMethod.POST)
+    public ResponseEntity<Object> postPerson(@RequestParam("email") String email,
+                                             @RequestParam("name") String name,
+                                             @RequestParam("sport") String sport,
+                                             @RequestParam("image") String image,
+                                             @RequestParam("dob") String dobString) {
+        Date dob;
+        try {
+            dob = new SimpleDateFormat("MM-dd-yyyy").parse(dobString);
+        } catch (Exception e) {
+            return new ResponseEntity<>(dobString +" error; try MM-dd-yyyy", HttpStatus.BAD_REQUEST);
+        }
+        // A person object WITHOUT ID will create a new record
+        Person person = new Person(email, name, sport, image, dob);
+        repository.save(person);
+        return new ResponseEntity<>(email +" is created successfully", HttpStatus.CREATED);
+    }
+
+}
\ No newline at end of file
Index: src/main/java/com/nighthawk/csa/data/WebAPIController.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/WebAPIController.java b/src/main/java/com/nighthawk/csa/data/WebAPIController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/WebAPIController.java	
@@ -0,0 +1,56 @@
+package com.nighthawk.csa.data;
+
+import org.json.simple.parser.ParseException;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.GetMapping;
+
+import org.springframework.ui.Model;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import java.util.HashMap;
+
+import org.json.simple.JSONArray;
+import org.json.simple.JSONObject;
+import org.json.simple.parser.JSONParser;
+
+
+import java.io.IOException;
+import java.net.URI;
+import java.net.http.HttpClient;
+import java.net.http.HttpRequest;
+import java.net.http.HttpResponse;
+
+@Controller
+public class WebAPIController {
+
+    // GET request, no parameters
+    @GetMapping("/data/covid19")
+    public String covid19(Model model) throws IOException, InterruptedException, ParseException {
+        // https://rapidapi.com/spamakashrajtech/api/corona-virus-world-and-india-data/
+        //rapidapi setup:
+        HttpRequest request = HttpRequest.newBuilder()
+                .uri(URI.create("https://corona-virus-world-and-india-data.p.rapidapi.com/api"))
+                .header("x-rapidapi-key", "dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063")
+                .header("x-rapidapi-host", "corona-virus-world-and-india-data.p.rapidapi.com")
+                .method("GET", HttpRequest.BodyPublishers.noBody())
+                .build();
+        //rapidapi call
+        HttpResponse<String> response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString());
+
+        //alternative #1: convert response.body() to java hash map
+        var map = new ObjectMapper().readValue(response.body(), HashMap.class);
+
+        //alternative #2: convert response.body() to JSON object
+        Object obj = new JSONParser().parse(response.body());
+        JSONObject jo = (JSONObject) obj;
+
+        //pass stats to view
+        model.addAttribute("map", map);
+        model.addAttribute("jo", jo);
+        model.addAttribute("world_map", map.get("world_total")); //illustrative of map get
+        model.addAttribute("world_jo", jo.get("world_total"));  //illustrative of jo get
+
+
+        return "data/covid19";
+    }
+
+}
Index: src/main/java/com/nighthawk/csa/starters/ImageInfo.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/starters/ImageInfo.java b/src/main/java/com/nighthawk/csa/starters/ImageInfo.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/starters/ImageInfo.java	
@@ -0,0 +1,233 @@
+package com.nighthawk.csa.starters;
+
+import lombok.Getter;
+import org.apache.tomcat.util.codec.binary.Base64;
+
+import java.awt.image.DataBufferByte;
+import java.io.*;
+import java.net.URL;
+import java.awt.Color;
+import java.awt.image.BufferedImage;
+import javax.imageio.ImageIO;
+
+@Getter  // automatic getter, https://projectlombok.org/features/GetterSetter
+public class ImageInfo {
+    public int scale_factor;
+    public String file, url;
+    public int height, scaled_height;
+    public int width, scaled_width;
+    public int[][][] rgb_matrix;
+
+    // basic constructor
+    public ImageInfo(String file, String url, int scale_factor) {
+        this.file = file;
+        this.url = url;
+        this.scale_factor = scale_factor;
+    }
+
+    // sets for properties of the image, including pixels and colors
+    public Exception read_image() {
+        try{
+            BufferedImage img = ImageIO.read(new URL(this.url));
+            this.height = img.getHeight();
+            this.scaled_height = this.height / scale_factor;
+            this.width = img.getWidth();
+            this.scaled_width = this.width / scale_factor;
+            //System.out.println(Integer.toString(this.height) + " " + Integer.toString(this.width));
+            this.rgb_matrix = new int[this.height][this.width][3];
+
+            for (int y=0; y < this.height; y++){
+                for(int x=0; x < this.width; x++){
+                    int pixel = img.getRGB(x, y);
+                    Color color = new Color(pixel, true);
+
+                    this.rgb_matrix[y][x][0] = color.getRed();
+                    this.rgb_matrix[y][x][1] = color.getGreen();
+                    this.rgb_matrix[y][x][2] = color.getBlue();
+                }
+            }
+
+        } catch (Exception e) {
+            return e;
+        }
+
+        return null;
+    }
+
+
+    // grayscale method
+    // return: base64 in grayscale
+    public String grayscale() {
+        try {
+            BufferedImage img = ImageIO.read(new URL(url)); // Saving internet image to BufferedImage
+            byte[] pixels = image_to_pixels(img); // See method definition
+            int[] pixels_int = grayscale(pixels);
+            String base64 = pixels_to_base64(img.getWidth(), img.getHeight(), pixels_int);
+            return "data:image/jpg;base64,"+base64;
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return "";
+    }
+
+    /**
+        Converts the colored pixel array to 1D INT array of grayscale values
+        Grayscale is simple all rgb values set to the same value, (0,0,0) (100,100,100) (255, 255, 255)
+        Look through the byte values and take the average of the RGB values and set them all equal to that same average
+        Ignore the alpha, it controls transparency
+    */
+    public int[] grayscale(byte[] pixels){
+        int[] pixels_int = new int[pixels.length];
+        for(int i=0;i<pixels.length;i+=4) {
+            float val = 0;
+            for(int y=1;y<4;y++) {
+                val += (pixels[i+y] & 0xFF)/3.0; // The & 0xFF is a "bitwise and" https://www.geeksforgeeks.org/bitwise-operators-in-java/. Just divigin by 3 to get the average
+            }
+            pixels_int[i] = pixels[i]; // keep alpha the same
+            pixels_int[i+1] = (int)val;
+            pixels_int[i+2] = (int)val;
+            pixels_int[i+3] = (int)val;
+        }
+        return pixels_int;
+    }
+
+    /**
+        param img
+        returns byte[]
+
+        This method takes the buffered image and converts to a 1D array of byte values.
+        If the image is 100 by 300 pixels the length of array will be":
+        100 x 300 x 4 = 120,000 
+
+        We multiply the total number of pixels by 4 because of ARGB (alpga, red, green, blue)
+     */
+    public byte[] image_to_pixels(BufferedImage img) throws IOException {
+        return ((DataBufferByte) img.getRaster().getDataBuffer()).getData();
+    }
+
+    /**
+        base64 conversion, support PNG only
+        We will iterate through the 1D pixel array and set the rgb values to corresponding locations on image
+        Then Base64 encode
+     */
+    public String pixels_to_base64(int width, int height, int[] pixels) throws IOException {
+        BufferedImage img = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
+        for(int y=0;y<height;y++) {
+            for(int x=0; x<width; x++) {
+                int a,r,g,b;
+                int s = (y*width + x)*4;
+                a=pixels[s];
+                r=pixels[s+1];
+                g=pixels[s+2];
+                b=pixels[s+3];
+                img.setRGB(x,y, argb(a,r,g,b));
+            }
+        }
+
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        ImageIO.write(img, "png", bos);
+        byte[] data = bos.toByteArray();
+        return Base64.encodeBase64String(data);
+    }
+
+
+    /**
+        building ARGB data
+        An int is 4 bytes
+        Alpha in byte 4, red in byte 3, green in byte 2, blue in byte 1
+     */
+    public int argb(int a, int r, int g, int b) {
+        return ((a&0x0ff)<<24)|((r&0x0ff)<<16)|((g&0x0ff)<<8)|(b&0x0ff);
+    }
+
+
+
+
+    public int getScaled_height(int row) {
+        return row * this.scale_factor;
+    }
+
+    public int getScaled_width(int col) {
+        return col * this.scale_factor;
+    }
+
+    public String getRGB(int row, int col) {
+        int h = row * this.scale_factor;
+        int w = col * this.scale_factor;
+        return "(" + rgb_matrix[h][w][0] +
+                "," + rgb_matrix[h][w][1] +
+                "," + rgb_matrix[h][w][2] +
+                ")" ;
+    }
+
+    public String getHexCode(int row, int col) {
+        int h = row * this.scale_factor;
+        int w = col * this.scale_factor;
+        // String.format guarantees 0 padding vs Integer.toHexString
+        return "#" +
+                String.format("%02X",rgb_matrix[h][w][0]) +
+                String.format("%02X",rgb_matrix[h][w][1]) +
+                String.format("%02X",rgb_matrix[h][w][2]) ;
+    }
+
+    public String getBinary(int row, int col) {
+        int h = row * this.scale_factor;
+        int w = col * this.scale_factor;
+        // Java does not have binary as string formatter
+        return  String.format("%8s", Integer.toBinaryString(rgb_matrix[h][w][0])).replace(' ', '0') +
+                " " +
+                String.format("%8s", Integer.toBinaryString(rgb_matrix[h][w][1])).replace(' ', '0') +
+                " " +
+                String.format("%8s", Integer.toBinaryString(rgb_matrix[h][w][2])).replace(' ', '0') ;
+    }
+
+    public String[] convert_to_ascii(){
+        int[][] gs = this.to_grayscale();
+        int[][] scaled_gs = this.scale(gs);
+        //return  this.to_ascii_array(scaled_gs);
+        return new String[1];
+    }
+
+    public int[][] to_grayscale(){
+        // grey scale is calculated to average of pixel
+        int[][] gs = new int[height][width];
+        for (int h=0; h < height; h++){
+            for(int w=0; w < width; w++){
+                int r = this.rgb_matrix[h][w][0];
+                int g = this.rgb_matrix[h][w][1];
+                int b = this.rgb_matrix[h][w][2];
+                // averaging
+                int avg = (r+g+b) /3;
+                gs[h][w] = avg;
+            }
+        }
+        return gs;
+    }
+
+    public int[][] scale(int[][] gs){
+        // scale image down by scale_factor
+        int w_scaled = width /scale_factor;
+        int h_scaled = height /scale_factor;
+
+        int[][] scaled = new int[h_scaled][w_scaled];
+        for(int w=0; w<w_scaled; w++){
+            for(int h=0; h<h_scaled; h++){ //looping over blocks
+
+                int sum = 0;
+                for(int x=(w)*scale_factor; x<(w+1)*scale_factor; x++){ //looping over the induvidual coordinates in block
+                    for(int y=(h)*scale_factor; y<(h+1)*scale_factor; y++){
+                        //System.out.println("("+Integer.toString(x)+", "+Integer.toString(y)+")");
+                        sum = sum + gs[y][x];
+                    }
+                } //end loop 2
+
+                scaled[h][w] = sum /(scale_factor*scale_factor);
+
+            }
+        } //end loop 1
+        //System.out.println(Arrays.deepToString(scaled));
+        return scaled;
+    }
+
+
+}
Index: src/main/java/com/nighthawk/csa/data/DataOpsController.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/data/DataOpsController.java b/src/main/java/com/nighthawk/csa/data/DataOpsController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/data/DataOpsController.java	
@@ -0,0 +1,225 @@
+package com.nighthawk.csa.data;
+
+import com.nighthawk.csa.consoleUI.ConsoleMethods;
+import com.nighthawk.csa.data.DataOps.genericDataModel.Alphabet;
+import com.nighthawk.csa.data.DataOps.genericDataModel.Animal;
+import com.nighthawk.csa.data.DataOps.genericDataModel.Cupcakes;
+
+import com.nighthawk.csa.data.LinkedLists.CircleQueue;
+import lombok.Getter;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Circle Queue Driver takes a list of Objects and puts them into a Queue
+ * @author     John Mortensen
+ *
+ */
+@Getter
+@Controller  // HTTP requests are handled as a controller, using the @Controller annotation
+public class DataOpsController {
+    private CircleQueue queue;	// circle queue object
+    private int count; // number of objects in circle queue
+    //control variables for UI checkboxes and radios
+    private boolean animal;
+    private Animal.KeyType animalKey;
+    private boolean cake;
+    private Cupcakes.KeyType cakeKey;
+    private boolean alpha;
+    private Alphabet.KeyType alphaKey;
+
+    /*
+     * Circle queue constructor
+     */
+    public DataOpsController()
+    {
+        //circle queue inits
+        count = 0;
+        queue = new CircleQueue();
+    }
+
+    /*
+     * Add any array of objects to the queue
+     */
+    public void addCQueue(Object[] objects)
+    {
+        ConsoleMethods.println("Add " + objects.length);
+        for (Object o : objects)
+        {
+            queue.add(o);
+            ConsoleMethods.println("Add: " + queue.getObject() + " " + queue);
+            this.count++;
+        }
+        ConsoleMethods.println();
+    }
+
+    /*
+     * Delete/Clear all object in circle queue
+     */
+    public void deleteCQueue()
+    {
+        int length = this.count;
+        ConsoleMethods.println("Delete " + length);
+
+        for (int i = 0; i<length; i++)
+        {
+            ConsoleMethods.println("Delete: " + queue.delete() + " " + queue);
+            this.count--;
+        }
+    }
+
+    /*
+     * String buffer for each row is created to support Thymeleaf (Interable could be alternative)
+     */
+    public List<String> getCQList()
+    {
+        List<String> log = new ArrayList<>();
+        //travers each row, halting when first is re-encountered (circle queue halt)
+        Object first = queue.getFirstObject();
+        do {
+            log.add(queue.getObject().toString());
+        } while (queue.setNext() != first);
+        return log;
+    }
+
+    /*
+     GET request,, parameters are passed within the URI
+     */
+    @GetMapping("/data/dataops")
+    public String data(Model model) {
+
+        //initialize data
+        this.count = 0;
+        this.queue = new CircleQueue();
+        //application specific inits
+        //title defaults
+        this.animalKey = Animal.KeyType.title;
+        Animal.key = this.animalKey;
+        this.cakeKey = Cupcakes.KeyType.title;
+        Cupcakes.key = this.cakeKey;
+        this.alphaKey = Alphabet.KeyType.title;
+        Alphabet.key = this.alphaKey;
+        //control options
+        this.animal = true;
+        this.cake = true;
+        this.alpha = true;
+        //load data
+        this.addCQueue(Animal.animalData());
+        this.addCQueue(Cupcakes.cupCakeData());
+        this.addCQueue(Alphabet.alphabetData());
+        //data is not sorted, queue order (FIFO) is default
+        model.addAttribute("ctl", this);
+        return "data/dataops"; //HTML render default condition
+    }
+
+    /*
+     GET request,, parameters are passed within the URI
+     */
+    @PostMapping("/data/dataops")
+    public String dataFilter(
+            @RequestParam(value = "animal", required = false) String animal,
+            @RequestParam(value = "animalKey") Animal.KeyType animalKey,
+            @RequestParam(value = "cake", required = false) String cake,
+            @RequestParam(value = "cakeKey") Cupcakes.KeyType cakeKey,
+            @RequestParam(value = "alpha", required = false) String alpha,
+            @RequestParam(value = "alphaKey", required = false) Alphabet.KeyType alphaKey,
+            Model model)
+    {
+        //re-init data according to check boxes selected
+        count = 0;
+        queue = new CircleQueue();
+        //for each category rebuild data, set presentation and data defaults
+        if (animal != null) {
+            this.addCQueue(Animal.animalData());  //adding Animal data to queue
+            this.animal = true;             //persistent selection from check box selection
+            this.animalKey = animalKey;     //persistent enum update from radio button selection
+            Animal.key = this.animalKey;    //toString configure for sort order
+        } else {
+            this.animal = false;
+        }
+        if (cake != null) {
+            this.addCQueue(Cupcakes.cupCakeData());
+            this.cake = true;
+            this.cakeKey = cakeKey;
+            Cupcakes.key = this.cakeKey;
+        } else {
+            this.cake = false;
+        }
+        if (alpha != null) {
+            this.addCQueue(Alphabet.alphabetData());
+            this.alpha = true;
+            this.alphaKey = alphaKey;
+            Alphabet.key = this.alphaKey;
+        } else {
+            this.alpha = false;
+        }
+        //sort data according to selected options
+        this.queue.insertionSort();
+        //render with options
+        model.addAttribute("ctl", this);
+        return "data/dataops";
+    }
+
+    /*
+     * Show key objects/properties of circle queue
+     */
+    public void printCQueue()
+    {
+        //queue and object of queue all print via toString()
+        ConsoleMethods.println("Size: " + count);
+        ConsoleMethods.println("First Element: " + queue.getFirstObject());
+        ConsoleMethods.println("Last Element: " + queue.getLastObject());
+        ConsoleMethods.println("Full cqueue: " + queue);
+        for (String line : this.getCQList()) {
+            ConsoleMethods.println(line);
+        }
+        ConsoleMethods.println();
+    }
+
+    /*
+     * Illustrate different Objects that can be placed on same Queue
+     */
+    public static void main(String[] args)
+    {
+        //queue
+        DataOpsController trial = new DataOpsController();
+
+        //add different types of objects to the same opaque queue
+        trial.addCQueue(Animal.animalData());
+        trial.addCQueue(Cupcakes.cupCakeData());
+        trial.addCQueue(Alphabet.alphabetData());
+        //display queue objects in queue order
+        ConsoleMethods.println("Add order (all data)");
+        trial.printCQueue();
+
+        //sort queue objects by specific element within the object and display in sort order
+        Animal.key = Animal.KeyType.name;
+        Cupcakes.key = Cupcakes.KeyType.frosting;
+        Alphabet.key = Alphabet.KeyType.letter;
+        trial.queue.insertionSort();
+        ConsoleMethods.println("Sorted order (key only)");
+        trial.printCQueue();
+
+        //display queue objects, changing output but not sort
+        Animal.key = Animal.KeyType.title;
+        Cupcakes.key = Cupcakes.KeyType.title;
+        Alphabet.key = Alphabet.KeyType.title;
+        ConsoleMethods.println("Retain sorted order (all data)");
+        trial.printCQueue();
+        trial.queue.insertionSort();
+        //display queue objects, changing sort order
+        ConsoleMethods.println("Order by data type (all data)");
+        trial.printCQueue();
+
+        //delete queue objects
+        ConsoleMethods.println("Delete from front (all data)");
+        trial.deleteCQueue();
+    }
+
+}
Index: src/main/java/com/nighthawk/csa/MainController.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/MainController.java b/src/main/java/com/nighthawk/csa/MainController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/MainController.java	
@@ -0,0 +1,82 @@
+package com.nighthawk.csa;
+
+import com.nighthawk.csa.starters.ImageInfo;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.ArrayList;
+import java.util.List;
+
+@Controller  // HTTP requests are handled as a controller, using the @Controller annotation
+public class MainController {
+
+    @GetMapping("/aboutus")    // CONTROLLER handles GET request for /greeting, maps it to greeting() and does variable bindings
+    public String abtus() {
+        return "starters/aboutus";
+    }
+
+    @GetMapping("/greet")    // CONTROLLER handles GET request for /greeting, maps it to greeting() and does variable bindings
+    public String greeting(@RequestParam(name="name", required=false, defaultValue="World") String name, Model model) {
+        // @RequestParam handles required and default values, name and data are class variables, data looking like JSON
+        model.addAttribute("name", name);   // MODEL is passed to html
+        return "starters/greet";                     // returns HTML VIEW (greeting)
+    }
+
+    @GetMapping("/image")
+    public String image(Model model)  {
+        String web_server = "http://p1-coders.cf:5000/";
+        List<ImageInfo> lii = new ArrayList<>();
+
+        String file0 = "/images/picOfYeonjoon.png";
+        lii.add(new ImageInfo(file0, web_server+file0, 12));
+        lii.get(0).read_image();
+
+        String file1 = "/images/ChrisAbout.png";
+        lii.add(new ImageInfo(file1, web_server+file1, 2));
+        lii.get(1).read_image();
+
+        String file2 = "/images/EshaanAbout.jpg";
+        lii.add(new ImageInfo(file2, web_server+file2, 7));
+        lii.get(2).read_image();
+
+        model.addAttribute("lii", lii);
+        return "starters/image";
+    }
+
+    @GetMapping("/grayscale")
+    public String image_grayscale(@RequestParam(name="gray", required=false, defaultValue ="false") boolean gray, Model model) {
+        String web_server = "http://p1-coders:5000/";
+        List<ImageInfo> lii = new ArrayList<>();
+
+        String file0 = "/images/picOfYeonjoon.png";
+        lii.add(new ImageInfo(file0, web_server+file0, 12));
+        String str = lii.get(0).grayscale();
+
+        String file1 = "/images/ncs_logo.png";
+        lii.add(new ImageInfo(file1, web_server+file1, 12));
+        String str1 = lii.get(1).grayscale();
+
+
+        model.addAttribute("str", str);
+        model.addAttribute("str1", str1);
+        model.addAttribute("file", gray);
+        return "starters/image_grayscale";
+    }
+
+    @GetMapping("/binary")    // CONTROLLER handles GET request for /greeting, maps it to greeting() and does variable bindings
+    public String binary() {
+        return "starters/binary";
+    }
+
+    @GetMapping("/deploy")
+    public String deploy(){
+        return "deploy";
+    }
+
+    @GetMapping("/journal")
+    public String journal(){
+        return "journal";
+    }
+}
\ No newline at end of file
Index: src/test/java/com/nighthawk/csa/MainTests.java
===================================================================
diff --git a/src/test/java/com/nighthawk/csa/MainTests.java b/src/test/java/com/nighthawk/csa/MainTests.java
new file mode 100644
--- /dev/null	
+++ b/src/test/java/com/nighthawk/csa/MainTests.java	
@@ -0,0 +1,13 @@
+package com.nighthawk.csa;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class MainTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: src/main/java/com/nighthawk/csa/Main.java
===================================================================
diff --git a/src/main/java/com/nighthawk/csa/Main.java b/src/main/java/com/nighthawk/csa/Main.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/nighthawk/csa/Main.java	
@@ -0,0 +1,12 @@
+package com.nighthawk.csa;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class Main {
+    public static void main(String[] args) {
+        SpringApplication.run(Main.class, args);
+        System.out.println("Done!");
+    }
+}
Index: src/main/resources/templates/starters/greet.html
===================================================================
diff --git a/src/main/resources/templates/starters/greet.html b/src/main/resources/templates/starters/greet.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/starters/greet.html	
@@ -0,0 +1,30 @@
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+    <!-- Page specific head additions -->
+    <title>Greetings</title>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:remove="tag">
+    <!-- Page specific body additions -->
+    <div class="contact" style="height: 35vh;">
+        <div class="row justify-content-left" style="margin: 2%;">
+            <form th:action="@{/greet}" method="GET" id="greetForm">
+                <div>
+                    <label for="greetField">Type a greeting name?</label>
+                    <input name="name" id="greetField">
+                    <button>Greetings!</button>
+                    <p th:text="'Greetings, ' + ${name} + '!'"></p>
+                </div>
+            </form>
+        </div>
+    </div>
+</div>
+
+</html>
\ No newline at end of file
Index: src/main/resources/templates/fragments/head.html
===================================================================
diff --git a/src/main/resources/templates/fragments/head.html b/src/main/resources/templates/fragments/head.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/fragments/head.html	
@@ -0,0 +1,18 @@
+<!DOCTYPE HTML>
+<th:block xmlns:th="http://www.w3.org/1999/xhtml" th:fragment="headfile">
+    <!-- Required meta tags -->
+    <meta charset="utf-8">
+    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
+    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
+    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
+    <script th:src="@{https://code.jquery.com/jquery-3.3.1.slim.min.js}" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
+    <script th:src="@{https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js}" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
+    <script th:src="@{https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js}" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
+    <!-- Bootstrap CSS -->
+    <link rel="stylesheet" th:href="@{https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css}" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
+    <link rel="stylesheet" th:href="@{https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css}">
+    <!-- Project CSS -->
+    <link th:href="@{/css/palette.css}" rel="stylesheet">
+    <link th:href="@{/css/colors.css}" rel="stylesheet">
+    <link th:href="@{/css/styles.css}" rel="stylesheet">
+</th:block>
Index: src/main/resources/templates/starters/binary.html
===================================================================
diff --git a/src/main/resources/templates/starters/binary.html b/src/main/resources/templates/starters/binary.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/starters/binary.html	
@@ -0,0 +1,164 @@
+<!DOCTYPE html>
+
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- Hack 1: variable bits and variables for IMAGE_ON/IMAGE_OFF should come from backend Model -->
+<!-- Hack 2: have input to allow user to customize bits, 8 or 24 are key for remainder -->
+<!-- Hack 3: add a character display to text when 8 bits, determine if printable or not printable -->
+<!-- Hack 4: add a color code and display color when 24 bits, think about display on this one -->
+<!-- Hack 5: do your own thing -->
+<!-- Hack 6: fix all warnings -->
+
+<!-- <head> -->
+<div layout:fragment="head" th:with="bits=8" th:remove="tag">
+  <!-- Page specific head additions -->
+  <title>Binary page</title>
+  <script>
+    const BITS = [[${bits}]];
+    const MAX = 2 ** BITS - 1;
+    const MSG_ON = "Turn on";
+    const IMAGE_ON = "/images/bulb_on.gif";
+    const MSG_OFF = "Turn off";
+    const IMAGE_OFF = "/images/bulb_off.png"
+
+    // return string with current value of each bit
+    function getBits() {
+      let bits = "";
+      for(let i = 0; i < BITS; i++) {
+        bits = bits + document.getElementById('digit' + i).value;
+      }
+      return bits;
+    }
+    // setter for DOM values
+    function setConversions(binary) {
+      document.getElementById('binary').innerHTML = binary;
+      // Octal conversion
+      document.getElementById('octal').innerHTML = parseInt(binary, 2).toString(8);
+      // Hexadecimal conversion
+      document.getElementById('hexadecimal').innerHTML = parseInt(binary, 2).toString(16);
+      // Decimal conversion
+      document.getElementById('decimal').innerHTML = parseInt(binary, 2).toString();
+    }
+    //
+    function decimal_2_base(decimal, base) {
+      let conversion = "";
+      // loop to convert to base
+      do {
+        let digit = decimal % base;
+        conversion = "" + digit + conversion; // what does this do?
+        decimal = ~~(decimal / base);         // what does this do?
+      } while (decimal > 0);                  // why while at the end? what is ~~?
+      // loop to pad with zeros
+      if (base === 2) {                        // only pad for binary conversions
+        for (let i = 0; conversion.length < BITS; i++) {
+          conversion = "0" + conversion;
+        }
+      }
+      return conversion;
+    }
+
+    // toggle selected bit and recalculate
+    function toggleBit(i) {
+      //alert("Digit action: " + i );
+      const dig = document.getElementById('digit' + i);
+      const image = document.getElementById('bulb' + i);
+      const butt = document.getElementById('butt' + i);
+      // Change digit and visual
+      if (image.src.match(IMAGE_ON)) {
+        dig.value = 0;
+        image.src = IMAGE_OFF;
+        butt.innerHTML = MSG_ON;
+      } else {
+        dig.value = 1;
+        image.src = IMAGE_ON;
+        butt.innerHTML = MSG_OFF;
+      }
+      // Binary numbers
+      const binary = getBits();
+      setConversions(binary);
+    }
+    // add is positive integer, subtract is negative integer
+    function add(n) {
+      let binary = getBits();
+      // convert to decimal and do math
+      let decimal = parseInt(binary, 2);
+      if (n > 0) {  // PLUS
+        decimal = MAX === decimal ? 0 : decimal += n; // OVERFLOW or PLUS
+      } else  {     // MINUS
+        decimal = 0 === decimal ? MAX : decimal += n; // OVERFLOW or MINUS
+      }
+      // convert the result back to binary
+      binary = decimal_2_base(decimal, 2);
+      // update conversions
+      setConversions(binary);
+      // update bits
+      for (let i = 0; i < binary.length; i++) {
+        let digit = binary.substr(i, 1);
+        document.getElementById('digit' + i).value = digit;
+        if (digit === "1") {
+          document.getElementById('bulb' + i).src = IMAGE_ON;
+          document.getElementById('butt' + i).innerHTML = MSG_OFF;
+        } else {
+          document.getElementById('bulb' + i).src = IMAGE_OFF;
+          document.getElementById('butt' + i).innerHTML = MSG_ON;
+        }
+      }
+    }
+  </script>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:with="bits=8" th:remove="tag">
+  <!-- Page specific body additions -->
+  <h1 class="text-center">Binary Math with Conversions</h1>
+    <div class="container">
+      <div class="row justify-content-md-center">
+
+        <div class="col-8">
+          <table class="table">
+            <tr id="table">
+              <th>Plus</th>
+              <th>Binary</th>
+              <th>Octal</th>
+              <th>Hexadecimal</th>
+              <th>Decimal</th>
+              <th>Minus</th>
+            </tr>
+            <tr>
+              <td><button type="button" id="add1" onclick="add(1)">+1</button></td>
+              <td id="binary">00000000</td>
+              <td id="octal">0</td>
+              <td id="hexadecimal">0</td>
+              <td id="decimal">0</td>
+              <td><button type="button" id="sub1" onclick="add(-1)">-1</button></td>
+            </tr>
+          </table>
+        </div>
+
+        <div class="col-12">
+          <table class="table">
+
+            <tr>
+              <th:block th:each="i: ${#numbers.sequence(0, bits-1)}">
+                <td><img class="img-responsive py-3" th:id="'bulb' + ${i}" src="" th:src="@{'/images/bulb_off.png'}" alt="" width="40" height="Auto">
+                  <button type="button" th:id="'butt' + ${i}" th:onclick="'javascript:toggleBit(' + ${i} + ')'">Turn on</button>
+                </td>
+              </th:block>
+            </tr>
+
+            <tr>
+              <th:block th:each="i: ${#numbers.sequence(0, bits-1)}">
+                <td><input type='text' th:id="'digit' + ${i}" Value="0" size="1" readonly></td>
+              </th:block>
+            </tr>
+
+          </table>
+        </div>
+
+      </div>
+    </div>
+</div>
+<!-- </body> -->
+</html>
\ No newline at end of file
Index: src/main/resources/templates/starters/image_grayscale.html
===================================================================
diff --git a/src/main/resources/templates/starters/image_grayscale.html b/src/main/resources/templates/starters/image_grayscale.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/starters/image_grayscale.html	
@@ -0,0 +1,41 @@
+<!DOCTYPE html>
+<html xmlns:layout="http://www.w3.org/1999/xhtml" xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+<head><div layout:fragment="head" th:remove="tag">
+    <meta charset="UTF-8">
+    <title>Grayscale Converter</title>
+    <link th:href="@{/styles/styles.css}" rel="stylesheet" /></div></head>
+
+<body style="background: linear-gradient(135deg, rgba(41,161,54,1) 0%, rgba(131,140,125,1) 51%, rgba(38,38,38,1) 100%);">
+<div layout:fragment="body" th:remove="tag">
+    <!-- Start of body content specific to page -->
+    <br><br><center><h1>Turning Pictures into Grayscale</h1><br>
+    <form id="gcfForm" action="" method="GET">
+        <select name="gray" id="gray" class="form-control">
+            <option value="false">Color</option>
+            <option value="true">Gray</option>
+        </select>
+        <button>Go!</button>
+    </form>
+
+    <div class="gray-images">
+        <!-- color -->
+        <span th:if="${file == false}">
+             <img class="solo-img" th:src="@{images/picOfYeonjoon.png}" alt="color" width="300px" height="300px">
+        </span>
+        <span th:if="${file == false}">
+            <img class="solo-img" th:src="@{images/ncs_logo.png}" alt="color" width="300px" height="300px">
+        </span>
+        <!-- gray -->
+        <span th:if="${file == true}">
+            <img class="solo-img" th:src="${str}" alt="gray" width="300px" height="300px">
+        </span>
+        <span th:if="${file == true}">
+            <img class="solo-img" th:src="${str1}" alt="gray" width="300px" height="300px">
+        </span>
+    </div>
+
+    <!-- End of body content specific to page -->
+</center>
+</div></body>
+</html>
\ No newline at end of file
Index: src/main/resources/templates/fragments/footer.html
===================================================================
diff --git a/src/main/resources/templates/fragments/footer.html b/src/main/resources/templates/fragments/footer.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/fragments/footer.html	
@@ -0,0 +1,20 @@
+<!DOCTYPE html>
+<div th:fragment="footer">
+    <div class="contact" style="height: 35vh;">
+
+        <div class="row justify-content-center" style="margin-top: 2%;">
+            <h3 style="color: var(--black); margin-top: 3%; font-size: 2vw;">Contact Us</h3>
+        </div>
+
+        <div class="row justify-content-center">
+            <h4><a href="mailto: nighthawkcodingsociety@gmail">codecodecoders@gmail.com</a></h4>
+        </div>
+
+        <div class="row justify-content-center">
+            <a href=https://github.com/nighthawkcoders target="_blank"><i class="fa fa-github"></i></a>
+            <a href=https://www.youtube.com/channel/UClIKOsDS5dsfzFA3zveDT3Q?view_as=subscriber target="_blank"><i class="fa fa-youtube-play"></i></a>
+            <a href=https://www.instagram.com/dane.vestal/ target="_blank"><i class="fa fa-instagram"></i></a>
+        </div>
+
+    </div>
+</div>
Index: src/main/resources/templates/fragments/nav.html
===================================================================
diff --git a/src/main/resources/templates/fragments/nav.html b/src/main/resources/templates/fragments/nav.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/fragments/nav.html	
@@ -0,0 +1,116 @@
+<!DOCTYPE html>
+<html lang="en" xmlns:th="http://www.thymeleaf.org">
+<head>
+    <title>...</title>
+    <link th:href="@{/styles/styles.css}" rel="stylesheet" /></head>
+<!-- Begin navigation fragments -->
+<nav class="cnav navbar navbar-expand" th:fragment="header">
+    <a class="navbar-brand" href="/">
+        <img alt="" class="d-inline-block align-center"
+             src=""
+             th:src="@{/images/ncs_logo.png}"
+             height="50"
+             width="auto">
+        P1-CodeCodeCoders
+    </a>
+
+    <!-- Bootstrap menus -->
+    <div class="collapse navbar-collapse" id="navbarSupportedContent">
+        <ul class="navbar-nav mr-auto">
+            <!--root menu -->
+            <li class="nav-item active">
+                <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
+            </li>
+            <li class="nav-item dropdown">
+                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown2" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+                    Data
+                </a>
+                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
+                    <a class="dropdown-item" th:href="@{/data/person}">SQL Person</a>
+                    <a class="dropdown-item" th:href="@{/data/covid19}">RapidAPI Covid19</a>
+                    <a class="dropdown-item" th:href="@{/data/dataops}">Data Ops</a>
+                </div>
+            </li>
+            <li class="nav-item dropdown">
+                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown4" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+                    Course-materials
+                </a>
+                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
+                    <a class="dropdown-item" th:href="@{/deploy}">Deployment</a>
+                    <a class="dropdown-item" th:href="@{/frq}">FRQs</a>
+                </div>
+            </li>
+            <li class="nav-item dropdown">
+                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown5" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+                    APIs
+                </a>
+                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
+                    <a class="dropdown-item" th:href="@{/sportsnews}">Sports News</a>
+                </div>
+            </li>
+            <li class="nav-item dropdown">
+                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown6" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+                    Other
+                </a>
+                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
+                    <a class="dropdown-item" th:href="@{/aboutus}">About Us</a>
+                </div>
+            </li>
+        </ul>
+    </div>
+    <div class="btn-group">
+        <!-- Clock display -->
+        <div class="px-3 text-dark">
+            <span id="clock" style="color:white"></span>
+        </div>
+        <!-- Dark mode action -->
+        <div class="form-check form-switch">
+            <input type="checkbox" onclick="darkFunction()" class="form-check-input" id="darkSwitch">
+            <label class="custom-control-label" for="darkSwitch">Dark Mode</label>
+        </div>
+    </div>
+
+    <!-- Navigation bar JavaScript support -->
+    <script>
+        // Dark Mode Control
+        // darkSwitch global element is set for convenience
+        const darkSwitch=document.getElementById("darkSwitch");
+        // establishes the initial state of darkSwitch on page load
+        if(darkSwitch) {
+            // obtains the value of darkSwitch from localStorage
+            const darkSwitchSelected =
+                localStorage.getItem("darkSwitch") !== null &&
+                localStorage.getItem("darkSwitch") === "dark";
+            // sets the value of darkSwitch.checked to the global darkSwitch
+            darkSwitch.checked=darkSwitchSelected;
+            // if dark-mode, toggle the switch to dark-mode position
+            if (darkSwitchSelected)
+                document.body.classList.toggle("dark-mode");
+        }
+        // executes on each "dark mode" UI toggle
+        function darkFunction() {
+            // toggles between off (standard CSS) and dark-mode (.dark-mode CSS)
+            document.body.classList.toggle("dark-mode");
+            // localStorage is used to manage darkSwitch status
+            darkSwitch.checked
+                ? localStorage.setItem("darkSwitch","dark")
+                : localStorage.removeItem("darkSwitch");
+        }
+        // End Dark Mode Control
+
+
+        // Clock Control
+        // clockElement global element set for convenience
+        let clockElement = document.getElementById('clock');
+        // Clock update executes on each interval set by timer
+        function clock() {
+            let date = new Date();
+            clockElement.textContent = date.toLocaleString();
+        }
+        // Clock refresh timer, a reoccurring event
+        setInterval(clock, 1000);
+        // End Clock Control
+    </script>
+</nav>
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/templates/data/YeonjoonAPI.html
===================================================================
diff --git a/src/main/resources/templates/data/YeonjoonAPI.html b/src/main/resources/templates/data/YeonjoonAPI.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/data/YeonjoonAPI.html	
@@ -0,0 +1,72 @@
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml" lang="en">
+<head>
+    <div layout:fragment="head"></div>
+    <link th:href="@{/styles/styles.css}" rel="stylesheet" />
+</head>
+
+<!-- <head> -->
+<div layout:fragment="body" th:remove="tag">
+    <title>NewsAPI News newsapi</title>
+    <style>
+        table, td, th {
+            border: 1px solid white;
+        }
+        td, th {
+            text-align:right;
+        }
+        td:first-child, th:first-child {
+            text-align: left;
+        }
+    </style>
+</div>
+
+<body class="ns-bg">
+<div layout:fragment="body"></div>
+<h1 style="text-align: center; margin-top: 1%"><strong id=>NewsAPI News newsapi.org</strong></h1>
+<form style="text-align: center" action="/news" method="GET" id="refreshpage">
+    <button>Refresh!</button>
+</form>
+
+<center>
+    <div class="container-fluid">
+        <div class="ns-card">
+            <h1>Articles on Fake News</h1>
+            <table>
+                <tr>
+                    <th>Title</th>
+                    <th>Publish Time</th>
+                    <th>Body</th>
+                </tr>
+                <tr th:each="source: ${data}">
+                    <td th:text="${source.title}"></td>
+                    <td th:text="${source.created_at}"></td>
+                    <td th:text="${source.body}"></td>
+                </tr>
+            </table>
+        </div></div></center>
+
+<style>
+    a{
+        color:lightskyblue;
+    }
+
+    table{
+        width: 100%;
+        font-size: 20px;
+    }
+
+    th{
+        width: 400px;
+        text-align: left;
+    }
+
+    td{
+        width: 400px;
+        text-align: left;
+    }
+</style>
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/templates/data/covid19.html
===================================================================
diff --git a/src/main/resources/templates/data/covid19.html b/src/main/resources/templates/data/covid19.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/data/covid19.html	
@@ -0,0 +1,100 @@
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+    <!-- Page specific head additions -->
+    <title>Covid-19 RapidAPI</title>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:remove="tag">
+    <!-- Page specific body additions -->
+    <div class="container">
+
+        <div class="row justify-content-md-center" style="margin-top:7%;">
+            <h1><strong>COVID-19 rapidapi.com </strong></h1>
+            <form th:action="@{/data/covid19}" method="GET" id="covidForm">
+                <button>Refresh!</button>
+            </form>
+        </div>
+
+        <table class="table">
+            <tr>
+                <th>Time</th>
+                <th>All-time Cases</th>
+                <th>Recorded Deaths</th>
+                <th>Active Cases</th>
+            </tr>
+            <tr>
+                <!-- Usage of Java HashMap and Thymeleaf -->
+                <td th:text="${map.world_total.statistic_taken_at}"></td>
+                <td th:text="${map.world_total.total_cases}"></td>
+                <td th:text="${map.world_total.total_deaths}"></td>
+                <td th:text="${map.world_total.active_cases}"></td>
+            </tr>
+        </table>
+
+        <table class="table">
+            <tr>
+                <th>Country</th>
+                <th>All-time Cases</th>
+                <th>Recorded Deaths</th>
+                <th>Active Cases</th>
+            </tr>
+            <!-- Usage of JSON object and Thymeleaf -->
+            <tr th:each="country : ${jo.countries_stat}">
+                <!--/*@thymesVar id="country_name" type="java"*/-->
+                <td th:text="${country.country_name}"></td>
+                <!--/*@thymesVar id="cases" type="java"*/-->
+                <td th:text="${country.cases}"></td>
+                <!--/*@thymesVar id="deaths" type="java"*/-->
+                <td th:text="${country.deaths}"></td>
+                <!--/*@thymesVar id="active_cases" type="java"*/-->
+                <td th:text="${country.active_cases}"></td>
+            </tr>
+        </table>
+
+        <table class="table">
+            <tr>
+                <th>World Using map get</th>
+            </tr>
+            <tr>
+                <td th:text="${map.get('world_total')}"></td>
+            </tr>
+        </table>
+
+        <table class="table">
+            <tr>
+                <th>World Using map variable</th>
+            </tr>
+            <tr>
+                <td th:text="${world_map}"></td>
+            </tr>
+        </table>
+
+        <table class="table">
+            <tr>
+                <th>World Using JSON object get</th>
+            </tr>
+            <tr>
+                <td th:text="${jo.get('world_total')}"></td>
+            </tr>
+        </table>
+
+        <table class="table">
+            <tr>
+                <th>World Using JSON object get</th>
+            </tr>
+            <tr>
+                <td th:text="${world_jo}"></td>
+            </tr>
+        </table>
+
+    </div>
+</div>
+
+</html>
\ No newline at end of file
Index: src/main/resources/templates/data/list-by-sport.html
===================================================================
diff --git a/src/main/resources/templates/data/list-by-sport.html b/src/main/resources/templates/data/list-by-sport.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/data/list-by-sport.html	
@@ -0,0 +1,72 @@
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml" lang="en">
+<head>
+    <div layout:fragment="head"></div>
+    <link th:href="@{/styles/styles.css}" rel="stylesheet" />
+</head>
+
+<!-- <head> -->
+<div layout:fragment="body" th:remove="tag">
+    <title>NewsAPI News newsapi</title>
+    <style>
+        table, td, th {
+            border: 1px solid white;
+        }
+        td, th {
+            text-align:right;
+        }
+        td:first-child, th:first-child {
+            text-align: left;
+        }
+    </style>
+</div>
+
+<body class="ns-bg">
+<div layout:fragment="body"></div>
+<h1 style="text-align: center; margin-top: 1%"><strong id=>NewsAPI News newsapi.org</strong></h1>
+<form style="text-align: center" action="/sportsnews" method="GET" id="refreshpage">
+    <button>Refresh!</button>
+</form>
+
+<center>
+    <div class="container-fluid">
+        <div class="ns-card">
+            <h1>Articles on Fake News</h1>
+            <table>
+                <tr>
+                    <th>Title</th>
+                    <th>Publish Time</th>
+                    <th>Body</th>
+                </tr>
+                <tr th:each="source: ${data}">
+                    <td th:text="${source.title}"></td>
+                    <td th:text="${source.created_at}"></td>
+                    <td th:text="${source.body}"></td>
+                </tr>
+            </table>
+        </div></div></center>
+
+<style>
+    a{
+        color:lightskyblue;
+    }
+
+    table{
+        width: 100%;
+        font-size: 20px;
+    }
+
+    th{
+        width: 400px;
+        text-align: left;
+    }
+
+    td{
+        width: 400px;
+        text-align: left;
+    }
+</style>
+</body>
+</html>
\ No newline at end of file
Index: src/main/resources/templates/data/collegeboard.html
===================================================================
diff --git a/src/main/resources/templates/data/collegeboard.html b/src/main/resources/templates/data/collegeboard.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/data/collegeboard.html	
@@ -0,0 +1,114 @@
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+    <title>.....</title>
+    <link th:href="@{/styles/styles.css}" rel="stylesheet" />
+    <style>
+        table, td, th {
+            border: 1px solid white;
+        }
+        td, th {
+            text-align:right;
+        }
+        td:first-child, th:first-child {
+            text-align: left;
+        }
+    </style>
+</div>
+
+<div layout:fragment="body" th:remove="tag" class="ns-bg">
+<h1 style="text-align: center; margin-top: 1%"><strong id=>Collegeboard FRQ weekly</strong></h1>
+<form style="text-align: center" action="/frq" method="GET" id="refreshpage">
+    <button>Refresh!</button>
+</form>
+
+<!--<h3 style="text-align: center">Pick a person</h3>-->
+<!--<ul style="text-align: center">-->
+<!--    <a href="frq?name=week2" class="button button1">Week 2</a>-->
+<!--    <a href="frq?name=week3" class="button button2">Week 3</a>-->
+<!--    <a href="frq?name=week4" class="button button3">Week 4</a>-->
+<!--    <a href="frq?name=week5" class="button button4">Week 5</a>-->
+<!--    <a href="frq?name=week6" class="button button5">Week 6</a>-->
+<!--</ul>-->
+
+
+<center>
+    <div class="container-fluid">
+        <div class="ns-card">
+            <h1>Individual FRQs</h1>
+            <table>
+
+                <tr>
+                    <th>Name</th>
+                    <th>Gist Link</th>
+                    <th>Correction/Summary</th>
+                </tr>
+
+                <tr th:each="frq: ${week2}">
+                    <td th:text="${frq.name}"></td>
+                    <td><a th:href="${frq.gist}" th:text="${frq.gist}"></a></td>
+                    <td th:text="${frq.correction}"></td>
+                </tr>
+
+            </table>
+        </div>
+    </div>
+</center>
+
+<style>
+    table{
+        width: 100%;
+        font-size: 20px;
+    }
+
+    th{
+        width: 400px;
+        text-align: left;
+    }
+
+    td{
+        width: 400px;
+        text-align: left;
+    }
+
+    .button {
+        background: rgba(46, 49, 49, 1); /* Green */
+        border: none;
+        color: white;
+        padding: 20px;
+        text-align: center;
+        text-decoration: none;
+        display: inline-block;
+        font-size: 16px;
+        margin: 4px 2px;
+        cursor: pointer;
+    }
+
+    .button1{
+        border-radius: 12px;
+    }
+
+    .button2{
+        border-radius: 12px;
+    }
+
+    .button3{
+        border-radius: 12px;
+    }
+
+    .button4{
+        border-radius: 12px;
+    }
+
+    .button5{
+        border-radius: 12px;
+    }
+</style>
+
+</div>
+</html>
Index: src/main/resources/templates/starters/aboutus.html
===================================================================
diff --git a/src/main/resources/templates/starters/aboutus.html b/src/main/resources/templates/starters/aboutus.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/starters/aboutus.html	
@@ -0,0 +1,77 @@
+<!DOCTYPE html>
+<html xmlns:layout="http://www.w3.org/1999/xhtml" xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<div layout:fragment="head" th:remove="tag">
+    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
+    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
+    <link href="https://fonts.googleapis.com/css2?family=Russo+One&display=swap" rel="stylesheet">
+    <meta charset="utf-8">
+    <link th:href="@{/styles/styles.css}" rel="stylesheet" />
+    <script src="https://kit.fontawesome.com/ecb5994ee2.js" crossorigin="anonymous"></script>
+</div>
+
+<body class="about-bg"><div layout:fragment="body" th:remove="tag">
+<div class="about-bg">
+<h1 class="about-header">About Us</h1>
+    <p class="about-body">Collaborators On This Project</p>
+
+    <div class="row justify-content-center">
+        <div class="column">
+            <img th:src="@{/images/Sexy.jpeg}" width="50" height="50" class="face" alt="Dane">
+            <p class="face-name">Dane Vestal</p>
+            <p class="face-text">Technical Officer</p>
+            <dl>
+                <dd>I am learning to code in Mr. Mortensens Class</dd>
+            </dl>
+            <center><a href="https://github.com/D1935827V" style="text-decoration: none; color:black;"><i class="git fa fa-github fa-2x"></i></a></center>
+        </div>
+        <div class="column">
+            <img th:src="@{images/ChrisAbout.jpg}" width="50" height="50" class="face" alt="chris">
+            <p class="face-name">Chris Rubin</p>
+            <p class="face-text">Deployment Manager</p>
+            <dl>
+                <dd>Deploying on Raspberry Pi</dd>
+            </dl>
+            <center><a href="https://github.com/Chris-Ru" style="text-decoration: none; color:black;"><i class="git fa fa-github fa-2x"></i></a></center>
+        </div>
+        <div class="column">
+            <img th:src="@{images/picOfYeonjoon.png}" width="50" height="50" class="face" alt="Yeonjoon">
+            <p class="face-name">Yeonjoon Hong</p>
+            <p class="face-text">Github Admin</p>
+            <dl>
+                <dt>TBD</dt>
+                <dd>Desc. soon</dd>
+            </dl>
+            <center><a href="https://github.com/yeonjoonhong" style="text-decoration: none; color:black;"><i class="git fa fa-github fa-2x"></i></a></center>
+        </div>
+        <div class="column">
+           <img th:src="@{images/Ak.jpeg}" width="50" height="50" class="face" alt="AK">
+            <p class="face-name">Ak Prathipati</p>
+            <p class="face-text">Web Designer</p>
+            <dl>
+                <dt>TBD</dt>
+                <dd>Desc. soon</dd>
+            </dl>
+            <center><a href="https://github.com/akprathipati" style="text-decoration: none; color:black;"><i class="git fa fa-github fa-2x"></i></a></center>
+        </div>
+        <div class="column">
+            <img th:src="@{images/EshaanAbout.jpg}" width="50" height="50" class="face" alt="Eshaan">
+            <p class="face-name">Eshaan Parlikar</p>
+            <p class="face-text">Scrum Master</p>
+            <dl>
+                <dd>Desc. soon</dd>
+            </dl>
+            <center><a href="https://github.com/KrispyKremeSavage" style="text-decoration: none; color:black;"><i class="git fa fa-github fa-2x"></i></a></center>
+        </div>
+    </div>
+</div>
+</div>
+</body>
+</html>
+
+<style>
+    html,body{
+        background-color: lightblue;
+    }
+</style>
Index: src/main/resources/templates/starters/image.html
===================================================================
diff --git a/src/main/resources/templates/starters/image.html b/src/main/resources/templates/starters/image.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/starters/image.html	
@@ -0,0 +1,72 @@
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml" xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- layout::fragment="content" is heart of ThymeLeaf layout -->
+<head>
+    <div layout:fragment="head" th:remove="tag">
+        <title>Image Processing</title>
+    </div>
+</head>
+
+<body style="background: linear-gradient(135deg, rgba(41,161,54,1) 0%, rgba(131,140,125,1) 51%, rgba(38,38,38,1) 100%);">
+<div layout:fragment="body" th:remove="tag">
+    <div class="container">
+        <h1 class="text-center">RGB values within an Image</h1>
+        <p><a href="/grayscale">Grayscale</a></p>
+        <div class="row justify-content-md-center">
+            <table class="table">
+                <thead>
+                <tr>
+                    <th>Meta Data</th>
+                    <th>Image</th>
+                    <th>Samples of Data</th>
+                </tr>
+                </thead>
+                <tbody>
+                <tr th:each="ii: ${lii}">
+                    <td>
+                        <div th:text="${ii.getFile()}">File name</div>
+                        <div th:text="'(' + ${ii.getHeight()} + ',' + ${ii.getWidth()} + ')'">Height,Width</div>
+                    </td>
+                    <td>
+                        <img class="img-responsive py-3" th:src="@{${ii.getFile()}}" alt="" src="${ii.getFile()}" width=128 height="Auto">
+                    </td>
+                    <td>
+                        <div class="overflow-auto" style="height: 256px">
+                            <table class="table">
+                                <thead>
+                                <tr>
+                                    <th>Row</th>
+                                    <th>Column</th>
+                                    <th>RGB</th>
+                                    <th>Hex Code</th>
+                                    <th>Binary</th>
+                                </tr>
+                                </thead>
+                                <tbody>
+                                <span th:each="row: ${#numbers.sequence(0, ii.getScaled_height()-1)}">
+                  <tr th:each="col: ${#numbers.sequence(0, ii.getScaled_width()-1)}">
+                    <td th:text="${ii.getScaled_height(row)}">row</td>
+                    <td th:text="${ii.getScaled_width(col)}">column</td>
+                    <td th:text="${ii.getRGB(row,col)}">cell</td>
+                    <td th:text="${ii.getHexCode(row,col)}">cell</td>
+                    <td th:text="${ii.getBinary(row,col)}">cell</td>
+                  </tr>
+                </span>
+                                </tbody>
+                            </table>
+                        </div>
+                    </td>
+                </tr>
+                </tbody>
+            </table>
+
+        </div>
+
+    </div>
+</div>
+</body>
+
+</html>
\ No newline at end of file
Index: src/main/resources/templates/data/dataops.html
===================================================================
diff --git a/src/main/resources/templates/data/dataops.html b/src/main/resources/templates/data/dataops.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/data/dataops.html	
@@ -0,0 +1,131 @@
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+    <!-- Page specific head additions -->
+    <title>Data Filters</title>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:remove="tag">
+    <!-- Page specific body additions -->
+    <div class="container">
+
+        <div class="center-block" style="margin: 2% 3% 3%; font-family: gilroy,serif;">
+            <!-- Title -->
+            <div class="col-12" style="text-align: center;">
+                <h1><strong>Data Filtering and Sorting</strong></h1>
+            </div>
+            <!-- Form and Action -->
+            <div class="jumbotron text-center row">
+                <!-- Input -->
+                <div class="col-md-6">
+                    <h3>Select options to filter and sort</h3>
+                    <form id="fibForm" th:action="@{/data/dataops}" th:object="${ctl}" method="POST" >
+                        <div class="jumbotron text-left row">
+                            <!-- Animals -->
+                            <div class="col-md-4">
+                                <!-- Checkbox on/off works off of @Getter for boolean isAnimal() -->
+                                <input type="checkbox" id="animal" name="animal" value="1" th:checked="${ctl.isAnimal()}">
+                                <label for="animal">Animals</label>
+                                <div class="form-group">
+                                    <label>Sort by</label>
+                                    <!-- Sort by Radio buttons:
+                                    1. option(s) are generated directly from Animal.KeyType
+                                    2. animalKey is the result of radio button selection
+                                    3. each radio option is provided a unique id, review rendered code to see expansion
+                                    -->
+                                    <div th:each="option : ${T(com.nighthawk.csa.data.DataOps.genericDataModel.Animal.KeyType).values()}">
+                                        <div class="custom-control custom-radio custom-control-inline">
+                                            <input type="radio" th:field="*{animalKey}" th:value="${option}" class="custom-control-input">
+                                            <label class="custom-control-label" th:for="${#ids.prev('animalKey')}" th:text="${option}">option</label>
+                                        </div>
+                                    </div>
+                                </div>
+                            </div>
+                            <!-- Cupcakes -->
+                            <div class="col-md-4">
+                                <input type="checkbox" id="cake" name="cake" value="1" th:checked="${ctl.isCake()}">
+                                <label for="cake">Cup Cakes</label>
+                                <div class="form-group">
+                                    <label>Sort by</label>
+                                    <div th:each="option : ${T(com.nighthawk.csa.data.DataOps.genericDataModel.Cupcakes.KeyType).values()}">
+                                        <div class="custom-control custom-radio custom-control-inline">
+                                            <input type="radio" th:field="*{cakeKey}" th:value="${option}" class="custom-control-input">
+                                            <label class="custom-control-label" th:for="${#ids.prev('cakeKey')}" th:text="${option}">option</label>
+                                        </div>
+                                    </div>
+                                </div>
+                            </div>
+                            <!-- Alphabet -->
+                            <div class="col-md-4">
+                                <input type="checkbox" id="alpha" name="alpha" value="1" th:checked="${ctl.isAlpha()}">
+                                <label for="alpha">Alphabet</label>
+                                <div class="form-group">
+                                    <label>Sort by</label>
+                                    <div th:each="option : ${T(com.nighthawk.csa.data.DataOps.genericDataModel.Alphabet.KeyType).values()}">
+                                        <div class="custom-control custom-radio custom-control-inline">
+                                            <input type="radio" th:field="*{alphaKey}" th:value="${option}" class="custom-control-input">
+                                            <label class="custom-control-label" th:for="${#ids.prev('alphaKey')}" th:text="${option}">option</label>
+                                        </div>
+                                    </div>
+                                </div>
+                            </div>
+                        </div>
+                        <button>Go!</button>
+                    </form>
+                </div>
+                <!-- Output/Result -->
+                <div class="col-md-6">
+                    <h3>Filtered Summary</h3>
+                    <table class="mx-auto">
+                        <tr>
+                            <th scope="col">Size</th>
+                            <th scope="col">First Row</th>
+                            <th scope="col">Last Row</th>
+                        </tr>
+                        <tr>
+                            <!-- Circle Queue Highlight data (summary)  -->
+                            <td th:text="${ctl.getCount()}"></td>
+                            <td th:text="${ctl.getQueue().getFirstObject()}"></td>
+                            <td th:text="${ctl.getQueue().getLastObject()}"></td>
+                        </tr>
+                    </table>
+                    <br><h3>Data Details</h3>
+                    <table class="mx-auto">
+                        <tr>
+                            <th scope="col">Rows</th>
+                        </tr>
+                        <!-- Circle Detail data (rows) -->
+                        <tr th:each="line: ${ctl.getCQList()}">
+                            <td th:text="${line}" ></td>
+                        </tr>
+                    </table>
+                </div>
+            </div>
+            <!-- Source Code
+            <div class="col-12" style="text-align: left; ">
+                <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fnighthawkcoders%2Fnighthawk_csa%2Fblob%2Fmaster%2Fsrc%2Fmain%2Fjava%2Fcom%2Fnighthawk%2Fcsa%2Falgorithm%2FDataOpsController.java&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on"></script>
+                <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fnighthawkcoders%2Fnighthawk_csa%2Fblob%2Fmaster%2Fsrc%2Fmain%2Fresources%2Ftemplates%2Falgorithm%2Fdata.html&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on"></script>
+                <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fnighthawkcoders%2Fnighthawk_csa%2Fblob%2Fmaster%2Fsrc%2Fmain%2Fjava%2Fcom%2Fnighthawk%2Fcsa%2Falgorithm%2FgenericDataModel%2FAnimal.java&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on"></script>
+                <script src="https://emgithub.com/embed.js?target=https%3A%2F%2Fgithub.com%2Fnighthawkcoders%2Fnighthawk_csa%2Fblob%2Fmaster%2Fsrc%2Fmain%2Fjava%2Fcom%2Fnighthawk%2Fcsa%2Fmodel%2Flinkedlists%2FCircleQueue.java&style=github&showBorder=on&showLineNumbers=on&showFileMeta=on"></script>
+            </div>
+            -->
+        </div>
+        <!-- Table Style -->
+        <style>
+            table, td, th {
+                border: 1px solid var(--dblue);
+            }
+            td, th {
+                text-align:left;
+            }
+        </style>
+    </div>
+</div>
+
+</html>
\ No newline at end of file
Index: src/main/resources/templates/error/404.html
===================================================================
diff --git a/src/main/resources/templates/error/404.html b/src/main/resources/templates/error/404.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/error/404.html	
@@ -0,0 +1,29 @@
+<!-- This page is illustrative and contains ideas about HTML formatting -->
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+    <title>404 Error</title>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:remove="tag">
+    <div class="index">
+        <div class="center-block" style="margin: 2% 10% 10%; font-family: gilroy,serif;">
+            <div class="col-12" style="text-align: center;">
+                <h1><strong>Something Went Wrong</strong></h1>
+            </div>
+
+            <div class="jumbotron jumbotron-fluid" style="text-align: center; ">
+                <h2>Engineering is on the case!</h2>
+                <a href="/">Go Home</a>
+            </div>
+        </div>
+    </div>
+</div>
+
+</html>
\ No newline at end of file
Index: src/main/resources/static/styles/styles.css
===================================================================
diff --git a/src/main/resources/static/styles/styles.css b/src/main/resources/static/styles/styles.css
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/static/styles/styles.css	
@@ -0,0 +1,418 @@
+html, body {
+    overflow-x: hidden;
+    scroll-behavior: smooth;
+}
+
+body{
+    padding-top: 20px;
+}
+
+a {
+    color:white;
+}
+
+a:hover{
+    color:gray;
+}
+
+.about-bg {
+    background-image: url("../images/chickenrange.jpeg");
+    /* background: linear-gradient(127deg, rgba(11,166,30,1) 0%, rgba(48,235,109,1) 51%, rgba(0,255,194,1) 100%); */
+    background-attachment: fixed;
+}
+
+.ns-bg {
+    background-image: url("../images/ns_bg.jpg");
+    background-attachment: fixed;
+    background-size: cover;
+}
+
+.about-header {
+    text-align: center;
+    text-decoration: none;
+    font-family: 'verdana', sans-serif;
+    font-weight: 700;
+    color:white;
+    font-size:100px;
+    position: relative;
+    top:50px;
+    text-shadow: 2px 2px 5px #202020;
+}
+
+.about-body {
+    text-align: center;
+    text-decoration: none;
+    font-family: 'verdana', sans-serif;
+    font-weight: 300;
+    color:white;
+    font-size:25px;
+    position: relative;
+    top:75px;
+    text-shadow: 2px 2px 5px #202020;
+}
+
+.row {
+    top: 10px;
+    display: flex;
+    position: relative;
+    width: auto;
+}
+
+.column {
+    flex: 10%;
+    padding: 50px;
+    margin: 50px;
+    width: 20px;
+    color: black;
+    height: auto;
+    background-color: rgba(103, 255, 144, 0.2);
+    border-radius: 50px;
+    margin-top: 100px;
+    backdrop-filter: blur(7px);
+    -webkit-backdrop-filter: blur(7px);
+}
+
+.face {
+    border-radius: 50%;
+    box-shadow: 3px 3px 10px rgba(0,0,0,.5);
+    width: 100%;
+    height: auto;
+}
+
+@media screen and (max-width: 500px) {
+    .column {
+        width: 100%;
+    }
+}
+
+.face-name {
+    text-align: center;
+    text-decoration: none;
+    font-family: 'verdana', sans-serif;
+    font-weight: 700;
+    color:black;
+    font-size:20px;
+    margin-top: 20px;
+}
+
+.face-text {
+    text-align: center;
+    text-decoration: none;
+    font-family: 'verdana', sans-serif;
+    font-weight: 300;
+    color:black;
+    font-size:25px;
+}
+
+.cnav {
+    background-color: rgba(43, 43, 43, 0.8);
+    backdrop-filter: blur(7px);
+    -webkit-backdrop-filter: blur(7px);
+    text-decoration: none;
+    position: static;
+    width: 95%;
+    border-radius: 20px;
+    margin-left: 2.5%;
+    margin-right: 2.5%;
+    top: 10px;
+}
+
+.navtext {
+    color:white;
+    text-decoration: none;
+    display: inline;
+    text-align: center;
+}
+
+.navtext:hover {
+    color:gray;
+    transition: .15s;
+}
+
+/* HOME PAGE */
+
+.welcome{
+    position:relative;
+    text-align: center;
+    line-height: normal;
+    top: 25%;
+}
+
+.welcome-text {
+    font-size: 110px;
+    font-weight: bold;
+}
+
+.welcome-subtext {
+    font-size: 70px;
+}
+
+@media screen and (max-width: 1200px) {
+    .b2-left,.b2-right,.h3-scale {
+        font-size: 18px;
+    }
+}
+
+@media screen and (max-width: 590px) {
+    .welcome-text {
+        font-size: 60px;
+    }
+
+    .welcome-subtext {
+        font-size: 45px;
+    }
+
+    .b2-left,.b2-right,.h3-scale {
+        font-size: 15px;
+    }
+}
+
+@media screen and (max-width: 450px) {
+    .b2-left,.b2-right {
+        font-size: 11.5px;
+    }
+
+    .submit {
+        margin-right: 25px;
+    }
+}
+
+@media screen and (max-width: 600px) {
+    table, th, td {
+        font-size: 14px;
+    }
+
+
+}
+
+.b1-arrow {
+    margin: 8% 0;
+    color: white;
+    text-decoration: none;
+    margin-left: 46.29px;
+}
+
+.bounce {
+    -moz-animation: bounce 2s infinite;
+    -webkit-animation: bounce 2s infinite;
+    animation: bounce 2s infinite;
+}
+
+@keyframes bounce {
+    0%, 20%, 50%, 80%, 100% {
+        transform: translateY(0);
+    }
+    40% {
+        transform: translateY(-30px);
+    }
+    60% {
+        transform: translateY(-15px);
+    }
+}
+
+.block1 {
+    color:white;
+    text-shadow: 2px 2px 5px #202020;
+    /* background-color: #404040; */
+    background-image: url("../images/indexbg-blur.jpg");
+    background-repeat: no-repeat;
+    background-position: center;
+    background-attachment: fixed;
+    background-size: cover;
+    height: 100vh;
+    position: relative;
+    top: -70px;
+}
+
+.block2 {
+    height: 100vh;
+    position: relative;
+    top: -70px;
+    color:white;
+    background-image: url(../images/chickenbg.jpeg);
+    /* background: linear-gradient(141deg, rgba(92,145,98,1) 0%, rgba(34,105,56,1) 51%, rgba(16,68,51,1) 100%); */
+    background-repeat: no-repeat;
+    background-position: center;
+    background-attachment: fixed;
+    background-size: cover;
+}
+
+.b2-content {
+    padding-top: 100px;
+}
+
+.separator {
+    background-color: rgb(48, 48, 48);
+    width: 100%;
+    height: 10px;
+    position: relative;
+    top: -70px;
+}
+
+.b2-box {
+    position: relative;
+    /* background: rgba(0,0,0,.5); */
+    background: linear-gradient(to right, rgba(48, 48, 48, 0.8) 50%, rgba(31, 31, 31, 0.8) 50%);
+    height:62vh;
+    width:70%;
+    border-radius: 40px;
+    padding: 30px;
+    font-size: 25px;
+    backdrop-filter: blur(7px);
+    z-index: 1;
+}
+
+.b2-left {
+    float:left;
+    width: 45%;
+    text-align: left;
+}
+
+.b2-right {
+    float:right;
+    width: 45%;
+    text-align: left;
+}
+
+.b2-arrow {
+    margin-top: 60px;
+    color: white;
+    text-decoration: none;
+    margin-left: 46.29px;
+    text-align: center;
+    text-shadow: 2px 2px 5px #202020;
+}
+
+.block3 {
+    height: 100vh;
+    position: relative;
+    top: -70px;
+    color:white;
+    background-image: url(../images/grass_blur.jpg);
+    /* background-image: linear-gradient(141deg, rgba(92,145,98,1) 0%, rgba(34,105,56,1) 51%, rgba(16,68,51,1) 100%); */
+    background-repeat: no-repeat;
+    background-position: top;
+    background-attachment: fixed;
+    background-size: cover;
+}
+
+.b3-checker {
+    color: white;
+    width: 400px;
+    margin-left: auto;
+    margin-right: auto;
+    padding: 20px;
+}
+
+.input-label {
+    font-size: 40px;
+    text-shadow: 2px 2px 5px #202020;
+}
+
+.input-box {
+    width: 300px;
+    height: 50px;
+    border: white;
+    border-radius: 15px 0 0 15px;
+    padding: 10px;
+}
+
+.input-box:focus {
+    outline: none;
+    border: rgb(85, 85, 85);
+    border-width: 2px;
+    border-style: solid;
+    transition: .1s;
+}
+
+.submit {
+    width: 85px;
+    height: 50px;
+    border: white;
+    border-radius: 0 15px 15px 0;
+    padding: 10px;
+}
+
+.submit:hover {
+    background-color: rgb(180, 180, 180);
+    transition: .1s;
+}
+
+.submit:active {
+    background-color: rgb(150, 150, 150);
+    transform: scale(1.1);
+    box-shadow: 1px 1px 5px rgb(56, 56, 56);
+    border-radius: 2px 15px 15px 2px;
+}
+
+.gray-images {
+    display: flex;
+    justify-content: center;
+}
+
+.solo-img {
+    padding: 40px;
+    border-radius: 60px;
+}
+
+.gs-btn {
+    width: 85px;
+    height: 50px;
+    border: white;
+    border-radius: 15px;
+    padding: 10px;
+}
+
+.gs-btn:hover {
+    background-color: rgb(180, 180, 180);
+    transition: .1s;
+}
+
+.gs-btn:active {
+    background-color: rgb(150, 150, 150);
+    width: 85px;
+    transform: translateY(5px) scale(.9);
+    box-shadow: 1px 1px 5px rgb(56, 56, 56);
+}
+
+.b3-arrow {
+    color: white;
+    text-decoration: none;
+    text-shadow: 2px 2px 5px #202020;
+    margin-top: -12px;
+}
+
+.bounce2 {
+    -moz-animation: bounce2 2s infinite;
+    -webkit-animation: bounce2 2s infinite;
+    animation: bounce2 2s infinite;
+}
+
+@keyframes bounce2 {
+    0%, 20%, 50%, 80%, 100% {
+        transform: translateY(0);
+    }
+    40% {
+        transform: translateY(-20px);
+    }
+    60% {
+        transform: translateY(-5px);
+    }
+}
+
+.ns-card {
+    padding: 50px;
+    margin: 50px;
+    margin-top: 7%;
+    width: 70%;
+    color: white;
+    height: auto;
+    background-color: rgba(43, 43, 43, 0.8);
+    border-radius: 50px;
+    backdrop-filter: blur(7px);
+    -webkit-backdrop-filter: blur(7px);
+}
+
+table, th, td {
+    border:2px solid white;
+}
\ No newline at end of file
Index: src/main/resources/templates/data/personsearch_get.html
===================================================================
diff --git a/src/main/resources/templates/data/personsearch_get.html b/src/main/resources/templates/data/personsearch_get.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/data/personsearch_get.html	
@@ -0,0 +1,95 @@
+<!DOCTYPE html>
+<!-- Preparing search using asynchronous "fetch" (no page reload, no wait)
+inspiration from https://www.youtube.com/watch?v=QKcVjdLEX_s
+-->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<div layout:fragment="head" th:remove="tag">
+    <title>SQL Person Search</title>
+</div>
+
+<div layout:fragment="body" th:remove="tag">
+    <div class="container py-4 bg-primary">
+        <!-- heading -->
+        <header class="pb-3 mb-4 border-bottom">
+            <a href="#" class="d-flex align-items-center text-light text-decoration-none">
+                <span class="fs-4">Search Person Table</span>
+            </a>
+        </header>
+        <!-- search box -->
+        <div class="container">
+            <div class="row">
+                <div class="col">
+                    <div class="mb-3">
+                        <div class="form-group">
+                            <input type="text" class="form-control" id="term" placeholder="enter search term">
+                            <label></label> <!-- used for spacer -->
+                        </div>
+                        <button class="btn btn-primary bg-secondary" onclick="search_data();">Search</button>
+                    </div>
+                </div>
+            </div>
+        </div>
+    </div>
+    <!-- result of search -->
+    <div class="container">
+        <div class="row" id="result">
+        </div>
+    </div>
+
+    <script>
+        function search_data() {
+            // fetch standard requires data set to a name-value pair
+            const term = document.getElementById("term");
+            const body = {
+                term: term.value,
+                foo: "bar"
+            };
+
+            // fetch call with header options
+            fetch('/api/personsearch_get', {
+                method: "POST",
+                credentials: "include",
+                body: JSON.stringify(body),
+                cache: "no-cache",
+                headers: new Headers({
+                    "content-type": "application/json"
+                })
+            })
+                // async then replies with response header
+                .then(function (response) {
+                    // prepare HTML search result container for new output
+                    const resultContainer = document.getElementById("result");
+                    // clean up from previous search
+                    while (resultContainer.firstChild) {
+                        resultContainer.removeChild(resultContainer.firstChild);
+                    }
+                    // trap error response from Web API
+                    if (response.status !== 200) {
+                        const errorMsg = 'Database response error: ' + response.status;
+                        console.log(errorMsg);
+                        const div = document.createElement("div");
+                        div.innerHTML = errorMsg;
+                        resultContainer.appendChild(div);
+                        return;
+                    }
+                    // response contains valid result
+                    response.json().then(function(data) {
+                        // loop through JSON and build HTML output
+                        for (let i = 0; i < data.length; i++) {
+                            const div = document.createElement("div");
+                            div.innerHTML = data[i].name + ' ' + data[i].email + ' ' + data[i].sport;
+                            resultContainer.appendChild(div);
+                            const img = document.createElement('img');    // Create an <img> element.
+                            img.src = data[i].image;
+                            img.width = 50;
+                            img.height = 50;
+                            resultContainer.appendChild(img);
+                        }
+                    })
+                })
+        }
+    </script>
+</div>
\ No newline at end of file
Index: src/main/resources/templates/data/person.html
===================================================================
diff --git a/src/main/resources/templates/data/person.html b/src/main/resources/templates/data/person.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/data/person.html	
@@ -0,0 +1,59 @@
+<!-- This page is illustrative and contains ideas about HTML formatting -->
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+    <!-- Page specific head additions -->
+    <title>Person List</title>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:remove="tag">
+    <!-- Page specific body additions -->
+    <div class="container">
+
+        <div class="row justify-content-md-center" style="margin-top:7%;">
+            <h1>SQL Person List</h1>
+        </div>
+        <div class="row justify-content-md-center">
+            <a th:href="@{/data/personcreate/}">Create Person</a>
+        </div>
+
+        <table class="table table-bordered">
+            <thead>
+            <tr>
+                <th>ID</th>
+                <th>EMail</th>
+                <th>Person</th>
+                <th>Sport</th>
+                <th>Image</th>
+                <th>Age</th>
+                <th>Action</th>
+            </tr>
+            </thead>
+            <tbody>
+            <tr th:each="person : ${list}">
+                <td th:text="${person.id}">Person ID</td>
+                <td th:text="${person.email}">Birth Date</td>
+                <td th:text="${person.name}">Name</td>
+                <td th:text="${person.sport}">Sport</td>
+                <td><img th:src="@{${person.image}}" style="width:50px;height:50px;" class="face" alt="Dane"></td>
+                <td th:if="${person.getAge() != -1}" th:text="${person.getAge()}">Age</td>
+                <td th:unless="${person.getAge() != -1}" th:text="Unknown">Unknown Age</td>
+                <td>
+                    <a th:href="@{/data/personupdate/{id}(id = ${person.id})}">Update</a>
+                    <a th:href="@{/data/persondelete/{id}(id = ${person.id})}">Delete</a>
+                </td>
+            </tr>
+            </tbody>
+        </table>
+
+    </div>
+
+</div>
+
+</html>
Index: src/main/resources/templates/data/personupdate.html
===================================================================
diff --git a/src/main/resources/templates/data/personupdate.html b/src/main/resources/templates/data/personupdate.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/data/personupdate.html	
@@ -0,0 +1,79 @@
+<!-- This page is illustrative and contains ideas about HTML formatting -->
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+    <title>Person Update</title>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:remove="tag">
+    <!-- Page specific body additions -->
+    <div class="container">
+
+        <div class="row justify-content-md-center">
+            <h2>Welcome, Update The Persons Details</h2>
+        </div>
+
+        <div class="row justify-content-md-center">
+            <div class="col8">
+                <div class="jumbotron">
+                    <h3>Update Person</h3>
+                    <!-- ThymeLeaf allows person abject of the Class Person to be acted upon by the form
+                         This is known as a “bean-backed form” or "form-backing bean".
+                            th:object - the backend form object (bean object)
+                         There are two fields in the Person bean,
+                            th:field="*{name}"
+                            th:field="*{age}".
+                         Each field has supporting line for to show errors in validation
+                            th:errors - form input errors added when validation errors occur
+                         Reference for CRUD
+                            https://www.baeldung.com/spring-boot-crud-thymeleaf
+                         Get started with dialects in 5 minutes
+                            https://www.thymeleaf.org/doc/articles/standarddialect5minutes.html
+                         Reference Bootstrap Form
+                            https://getbootstrap.com/docs/4.0/components/forms/#readonly-plain-text
+                     -->
+                    <form class="form-inline" action="#" th:action="@{/data/personupdate}" th:object="${person}" method="POST">
+                        <div class="form-group mb-2 mr-sm-2">
+                            <label for="id">ID:</label>
+                            <input type="text" th:field="*{id}" id="id" readonly class="form-control-plaintext" >
+                        </div>
+                        <div class="form-group mb-2 mr-sm-2">
+                            <label for="email">Email:</label>
+                            <input type="email" th:field="*{email}" id="email" >
+                            <small th:if="${#fields.hasErrors('email')}" th:errors="*{email}">Email Error</small>
+                        </div>
+                        <div class="form-group mb-2 mr-sm-2">
+                            <label for="name">Name:</label>
+                            <input type="text" th:field="*{name}" id="name">
+                            <small th:if="${#fields.hasErrors('name')}" th:errors="*{name}">Name Error</small>
+                        </div>
+                        <div class="input-group mb-2 mr-sm-2">
+                            <label for="sport">Sport:</label>
+                            <input type="text" th:field="*{sport}" id="sport">
+                            <small th:if="${#fields.hasErrors('sport')}" th:errors="*{sport}">Sport Error</small>
+                        </div>
+                        <div class="input-group mb-2 mr-sm-2">
+                            <label for="image">Image:</label>
+                            <input type="text" th:field="*{image}" id="image">
+                            <small th:if="${#fields.hasErrors('image')}" th:errors="*{image}">Image Error</small>
+                        </div>
+                        <div class="form-group mb-2 mr-sm-2">
+                            <label for="dob">Birth Date:</label>
+                            <input type="date" th:field="*{dob}" id="dob">
+                            <small th:if="${#fields.hasErrors('dob')}" th:errors="*{dob}">Birth Date Error</small>
+                        </div>
+                        <button type="submit" class="btn btn-primary">Save</button>
+                    </form>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+
+</html>
Index: src/main/resources/templates/data/personcreate.html
===================================================================
diff --git a/src/main/resources/templates/data/personcreate.html b/src/main/resources/templates/data/personcreate.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/data/personcreate.html	
@@ -0,0 +1,77 @@
+<!-- This page is illustrative and contains ideas about HTML formatting -->
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+    <title>Person Form</title>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:remove="tag">
+    <!-- Page specific body additions -->
+    <div class="container">
+
+        <div class="row justify-content-md-center">
+            <h2>Welcome, Enter the new Persons details</h2>
+        </div>
+
+        <div class="row justify-content-md-center">
+            <div class="col8">
+                <div class="jumbotron">
+                    <h3>Create Person</h3>
+                    <!-- ThymeLeaf allows person abject of the Class Person to be acted upon by the form
+                         This is known as a “bean-backed form” or "form-backing bean".
+                            th:object - the backend form object (bean object)
+                         There are fields in the Person bean
+                            th:field="*{name}"
+                            th:field="*{age}"
+                            th:field="*{dob}"
+                         Each field has supporting line to show errors in validation
+                            th:errors - form input errors added when validation errors occur
+                         Reference for CRUD
+                            https://www.baeldung.com/spring-boot-crud-thymeleaf
+                         Get started with dialects in 5 minutes
+                            https://www.thymeleaf.org/doc/articles/standarddialect5minutes.html
+                         Reference Bootstrap Form
+                            https://getbootstrap.com/docs/4.0/components/forms/#readonly-plain-text
+                     -->
+                    <form class="form-inline" action="#" th:action="@{/data/personcreate}" th:object="${person}" method="POST">
+                        <div class="form-group mb-2 mr-sm-2">
+                            <label for="email">Email:</label>
+                            <input type="email" th:field="*{email}" id="email">
+                            <small th:if="${#fields.hasErrors('email')}" th:errors="*{email}">Email Error</small>
+                        </div>
+                        <div class="input-group mb-2 mr-sm-2">
+                            <label for="name">Name:</label>
+                            <input type="text" th:field="*{name}" id="name">
+                            <small th:if="${#fields.hasErrors('name')}" th:errors="*{name}">Name Error</small>
+                        </div>
+                        <div class="input-group mb-2 mr-sm-2">
+                            <label for="sport">Sport:</label>
+                            <input type="text" th:field="*{sport}" id="sport">
+                            <small th:if="${#fields.hasErrors('sport')}" th:errors="*{sport}">Sport Error</small>
+                        </div>
+                        <div class="input-group mb-2 mr-sm-2">
+                            <label for="image">Image:</label>
+                            <input type="text" th:field="*{image}" id="image">
+                            <small th:if="${#fields.hasErrors('image')}" th:errors="*{image}">Image Error</small>
+                        </div>
+                        <div class="input-group mb-2 mr-sm-2">
+                            <label for="dob">Birth Date:</label>
+                            <input type="date" th:field="*{dob}" id="dob">
+                            <small th:if="${#fields.hasErrors('dob')}" th:errors="*{dob}">Birth Date Error</small>
+                        </div>
+                        <button type="submit" class="btn btn-primary">Add</button>
+                    </form>
+                </div>
+            </div>
+        </div>
+
+    </div>
+</div>
+
+</html>
Index: src/main/resources/static/images/fibonacci_spiral.svg
===================================================================
diff --git a/src/main/resources/static/images/fibonacci_spiral.svg b/src/main/resources/static/images/fibonacci_spiral.svg
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/static/images/fibonacci_spiral.svg	
@@ -0,0 +1,158 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   version="1.0"
+   height="580"
+   width="915"
+   id="svg2">
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <defs
+     id="defs5" />
+  <path
+     transform="matrix(0,1,1,0,0,0)"
+     id="path2782"
+     style="opacity:1;fill:#ffffff;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:1.99999988;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <text
+     transform="scale(1.0001758,0.99982423)"
+     xml:space="preserve"
+     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:13.32342434px;line-height:1.25;font-family:'Times New Roman';-inkscape-font-specification:'Times New Roman, ';letter-spacing:0px;word-spacing:0px;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1"
+     x="196.37582"
+     y="-166.3719"
+     id="text990"><tspan
+       id="tspan988"
+       x="196.37582"
+       y="-166.3719"
+       style="stroke-width:1">constructed startin with 1x1mm square; last square is 144x144</tspan></text>
+  <path
+     d="M 18.898132,563.14957 A 543.94263,543.75146 0 0 1 562.84077,19.398132"
+     id="path1873"
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+     id="path1875"
+     d="M -899.02731,355.46605 A 336.18655,336.06839 0 0 1 -562.84075,19.397675"
+     transform="scale(-1,1)" />
+  <path
+     transform="matrix(0,-1,-1,0,0,0)"
+     d="m -563.14906,-691.27235 a 207.68251,207.75557 0 0 1 207.68251,-207.75556"
+     id="path2762"
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+     id="path2764"
+     d="M 562.84128,-434.76319 A 128.43051,128.38536 0 0 1 691.27179,-563.14854"
+     transform="scale(1,-1)" />
+  <path
+     d="m 562.84184,434.7637 a 79.324539,79.296654 0 0 1 79.32454,-79.29665"
+     id="path2766"
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+     id="path2768"
+     d="m -691.27137,404.55478 a 49.105476,49.088211 0 0 1 49.10548,-49.08821"
+     transform="scale(-1,1)" />
+  <path
+     transform="scale(-1)"
+     d="m -691.27178,-404.55426 a 30.218561,30.207939 0 0 1 30.21856,-30.20794"
+     id="path2770"
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+     id="path2772"
+     d="m 642.16632,-415.8829 a 18.886414,18.879776 0 0 1 18.88641,-18.87978"
+     transform="scale(1,-1)" />
+  <path
+     d="m 642.16683,415.88342 a 11.331649,11.327665 0 0 1 11.33164,-11.32766"
+     id="path2774"
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2784"
+     d="M 653.49848,415.88344 V 404.55528"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2786"
+     d="M 661.05275,415.88294 H 642.16583"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2788"
+     d="m 653.49798,412.10688 h 7.55477"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2790"
+     d="m 657.27586,412.10738 v 3.77606"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2794"
+     d="m 661.05325,404.55428 v 30.20844"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2796"
+     d="m 642.16586,404.55478 h 49.10598"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2798"
+     d="M 642.16636,434.76372 V 355.46656"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2800"
+     d="M 691.27181,434.76322 H 562.84079"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2802"
+     d="M 691.27234,355.46658 V 563.14961"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2804"
+     d="M 562.8408,355.27506 H 899.21875"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     id="rect2806"
+     d="M 562.84129,563.14958 V 19.397678"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+     d="M 18.89815,563.1496 V 18.89761"
+     id="path922" />
+  <path
+     id="path924"
+     d="M 899.02836,562.64954 V 18.897641"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+     d="M 18.89765,18.897107 H 899.5276"
+     id="path926" />
+  <path
+     id="path928"
+     d="M 18.89765,563.14909 H 899.52759"
+     style="fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     transform="scale(-1,1)"
+     d="m -661.05231,412.10681 a 7.5542655,7.5516105 0 0 1 7.55426,-7.55161"
+     id="path1028"
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+  <path
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1"
+     id="path1030"
+     d="m -661.05276,-412.10736 a 3.7768829,3.7755551 0 0 1 3.77688,-3.77556"
+     transform="scale(-1)" />
+  <path
+     transform="scale(1,-1)"
+     d="m 653.50534,-412.10101 a 3.7768831,3.7755556 0 0 1 3.77689,-3.77556"
+     id="path1034"
+     style="opacity:1;fill:none;fill-opacity:1;fill-rule:nonzero;stroke:#000000;stroke-width:2.66666667;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
+</svg>
Index: src/main/resources/static/css/colors2.css
===================================================================
diff --git a/src/main/resources/static/css/colors2.css b/src/main/resources/static/css/colors2.css
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/static/css/colors2.css	
@@ -0,0 +1,12 @@
+/* element colors */
+:root {
+    --light_text: var(--black);
+    --light_background: var(--lgreen);
+    --dark_text: var(--black);
+    --dark_background: var(--green);
+    --atag: var(--dblue);
+    --fa: var(--grey);
+    --youtube: var(--red);
+    --twitter: var(--blue);
+    --github: var(--black);
+}
\ No newline at end of file
Index: src/main/resources/static/css/colors.css
===================================================================
diff --git a/src/main/resources/static/css/colors.css b/src/main/resources/static/css/colors.css
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/static/css/colors.css	
@@ -0,0 +1,12 @@
+/* element colors */
+:root {
+    --light_text: var(--black);
+    --light_background: var(--gray);
+    --dark_text: var(--black);
+    --dark_background: var(--lblue);
+    --atag: var(--dblue);
+    --fa: var(--green);
+    --youtube: var(--red);
+    --twitter: var(--blue);
+    --github: var(--black);
+}
\ No newline at end of file
Index: src/main/resources/static/css/about.css
===================================================================
diff --git a/src/main/resources/static/css/about.css b/src/main/resources/static/css/about.css
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/static/css/about.css	
@@ -0,0 +1,47 @@
+html, body{
+    margin: 0;
+    height: 100%;
+    background-color: var(--light_background);
+    color: var(--light_text);
+}
+
+.dark-mode {
+    background-color: var(--dark_background);
+    color: var(--dark_text);
+}
+
+h1{
+    font-size: 5em;
+}
+
+a {
+    color: var(--atag);
+}
+
+.fa{
+    font-size: 3em;
+    letter-spacing: 1em;
+    transition: all .2s;
+    color: var(--fa);
+}
+
+.fa:hover{
+    transform: translateY(10px);
+}
+
+.fa-youtube-play:hover{
+    color: var(--youtube);
+}
+
+.fa-twitter:hover{
+    color: var(--twitter);
+}
+
+.fa-github:hover{
+    color: var(--github);
+}
+
+.navbar-custom .navbar-brand,
+.navbar-custom .navbar-text {
+    color: var(--light_text);
+}
\ No newline at end of file
Index: src/main/resources/templates/journal.html
===================================================================
diff --git a/src/main/resources/templates/journal.html b/src/main/resources/templates/journal.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/journal.html	
@@ -0,0 +1,17 @@
+<!DOCTYPE html>
+<html xmlns:layout="http://www.w3.org/1999/xhtml" xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<head><div layout:fragment="head" th:remove="tag">
+    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
+    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
+    <link href="https://fonts.googleapis.com/css2?family=Russo+One&display=swap" rel="stylesheet">
+    <meta charset="utf-8">
+    <title>Scrum Team Journal</title>
+    <link th:href="@{/styles/styles.css}" rel="stylesheet" />
+</div></head>
+
+<body><div layout:fragment="body" th:remove="tag">
+    <iframe src="https://docs.google.com/document/d/e/2PACX-1vRk701iEeu2FjPzJFYAxZMA7Sgt9_Oa_Hf4DAnkWQ7-XBr1A6fTjcrM1qwjQH9hF9qoVHW58dPsOTR0/pub?embedded=true" style="width: 1920px; height: 1080px; margin-top:-60px; border:none;"></iframe>
+</div></body>
+</html>
\ No newline at end of file
Index: src/main/resources/templates/deploy.html
===================================================================
diff --git a/src/main/resources/templates/deploy.html b/src/main/resources/templates/deploy.html
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/templates/deploy.html	
@@ -0,0 +1,203 @@
+<!DOCTYPE HTML>
+<!-- Signals to the Layout Dialect which layout should be used to decorate this View -->
+<html xmlns:layout="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.w3.org/1999/xhtml"
+      layout:decorate="~{layout}" lang="en">
+
+<!-- <head> -->
+<div layout:fragment="head" th:remove="tag">
+  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/4.0.0/github-markdown.min.css" integrity="sha512-Oy18vBnbSJkXTndr2n6lDMO5NN31UljR8e/ICzVPrGpSud4Gkckb8yUpqhKuUNoE+o9gAb4O/rAxxw1ojyUVzg==" crossorigin="anonymous" />
+  <title>Course Deployment Guide</title>
+</div>
+
+<!-- <body> -->
+<div layout:fragment="body" th:remove="tag">
+
+  <div class="center-block" style="margin: 2% 3% 3%; font-family: gilroy,serif;">
+
+    <div class="col-12" style="text-align: center;">
+      <a href="https://github.com/Chris-Ru/p1-codecodecoders" target="_blank" class="standard-link">
+        <p class="lead">View on Github <span class="fa fa-github"></span></p>
+      </a>
+    </div>
+
+    <div class="jumbotron justify-content-left row">
+      <div class="col-12">
+        <h1>Deployment Guide</h1>
+
+        <h2>Instruction on purchasing and setting up a Raspberry Pi (RPi)</h2>
+        <details>
+          <summary>Click for Raspberry Pi 4 purchase!</summary>
+
+          <h3>RPi recommended specs</h3>
+          <OL>
+            <li> Raspberry Pi 4 4GB Model B with 1.5GHz 64-bit quad-core CPU (4GB RAM)</li>
+            <li> 32GB Samsung EVO+ Micro SD Card (Class 10) Pre-loaded with NOOBS, USB MicroSD Card Reader</li>
+            <li> Raspberry Pi 4 Case</li>
+            <li> 3.5A USB-C Raspberry Pi 4 Power Supply (US Plug) with Noise Filter</li>
+            <li> USB-C PiSwitch (On/Off Power Switch for Raspberry Pi 4) </li>
+            <li> Micro HDMI to Full HDMI Cable - 6 foot (Supports up to 4K 60p) </li>
+          </OL>
+          Purchase Notes:  Keyboard, Mouse, Monitor are optional.  RPi advantages over AWS: 1. One time cost  2. All kinds of tinker projects in IOT realm can be performed using GPIO pins.  As for purchase options, CanaKit (my prefered) has options on Amazon that meet the bulleted list of requirements. There is a new option on raspberrypi.org that describes RPi as built into a keybaord (could be bulky in my use cases).
+          <br>
+          <a href="https://www.amazon.com/CanaKit-Raspberry-Starter-PRO-Kit/dp/B08QQ5KY1J/ref=sr_1_6?keywords=raspberry+pi+4&qid=1638205425&sr=8-6" style="color:blue">RPi 4 full kit</a>
+        </details>
+
+        <details>
+          <summary>Click for Raspberry Pi 4 OS and Software!</summary>
+
+          RPi OS deployment preparation: RPi with NOOBS installed on SSD is very simple.  At boot select Raspberry Pi OS and you are on your way.  Since this will be private IP host on your home network, ultimately Port Forwarding is required to make your machine visible to the Internet.
+          <br><br>
+          VNC Viewer can connect to the RPi for desktop display.  This is a full desktop remote display tool, SSH is a terminal only option.  RealVNC lets you share full desktop with cohorts.  If you reboot RPi, you need a monitor connected at reboot to maintain VNC screen share functionality.  Reboot will cause screen buffer not to be recognized unless HDMI is present.  There may be a dummy (mini) HDMI plug that could overcomee this issue.  Otherwise, after setup your RPi could be headless.
+        </details>
+
+
+        <h2>Setting up Java Web Application</h2>
+        <details>
+          <summary>Java setup, Maven build and Runtime Test!</summary>
+
+          <h3>Java is two pieces (JDK and JRE), both parts are needed in order to run and build</h3>
+
+          <p>$ sudo apt update</p>
+          <p>$ sudo apt upgrade</p>
+
+
+          <h3>Install Java Runtime Environment</h3>
+
+          <p>$ sudo apt install default-jre</p>
+          <p>$ java -version</p>
+
+
+          <h3>Install Java Development Kit</h3>
+
+          <p>$ sudo apt install default-jdk</p>
+          <p>$ javac -version</p>
+
+
+          <h3>Maven is required to build project</h3>
+
+          <p>$ sudo apt update</p>
+          <p>$ sudo apt upgrade</p>
+          <p>$ sudo apt install maven</p>
+          <p>$ mvn -version</p>
+
+          <p style="background-color: yellow; margin-right: 65%">If one of these aren't working or installing properly, check that your linux OS is up-to-date</p>
+        </details>
+
+        <details>
+          <summary>Clone, build and test Java Web Application</summary>
+
+          <h3>Clone and build repository</h3>
+
+          <p>$ cd</p>
+          <p>$ git clone https://github.com/Chris-Ru/p1-codecodecoders.git</p>
+          <p>$ cd p1-codecodecoders</p>
+          <p>$ sudo mvn package</p>
+
+
+          <h3>Run your java project, after test ctl-C to stop service</h3>
+
+          <p>$ cd</p>
+          <p>$ java -jar p1-codecodecoders/target/coders-0.0.1-SNAPSHOT.jar</p>
+
+
+          <h3>Test on localhost browser</h3>
+
+          <p>localhost:8080</p>
+
+        </details>
+
+
+        <h2>Prepare Java Web Application for Internet access</h2>
+        <details>
+          <summary>Establish a service to enable Java Web Application to always run on Server!</summary>
+          <p>To run and start application automatically it will require a the JAR file from previous step to run from a .service file.
+          In this service file we are providing details of the java runtime service:
+            start after “network.target” has been started
+            the ExecStart is the same as command you validated to executes JAR</p>
+            <br>
+          <p>Create a 'service' file as administrator:</p>
+          <UL>
+            <li>sudo nano <filename> </li>
+            <li>change nighthawk_csa reference or jar file name as applicable to your project</li>
+            <li>replace User=pi with User=ubuntu if applicable</li>
+          </UL>
+
+          <h3>File is located at /etc/systemd/system/nighthawk_csa.service.</h3>
+
+          <p>[Unit]</p>
+          <p>Description=Java</p>
+          <p>After=network.target</p>
+
+          <p>[Service]</p>
+          <p>User=ubuntu</p>
+          <p>Restart=always</p>
+          <p>ExecStart=java -jar /home/ubuntu/nighthawk_csa/target/csa-0.0.1-SNAPSHOT.jar</p>
+
+          <p>[Install]</p>
+          <p>WantedBy=multi-user.target</p>
+
+          <h3>Run and enable your service file</h3>
+
+          <p>$ sudo systemctl start nighthawk_csa</p>
+          <p>$ systemctl status nightawk_csa</p>
+
+
+          <h3>If succesfull, enable your service file to be persistant on machine</h3>
+
+          <p>$ sudo systemctl enable nighthawk_csa</p>
+
+        </details>
+
+        <details>
+          <summary>Enable Nginx to retrieve Java Web Application on external request (Reverse Proxy)!</summary>
+
+          <h3>File is located at /etc/nginx/sites-available/nighthawk_csa</h3>
+
+          <p>server {</p>
+          <p style="text-indent: 40px">listen 80;</p>
+          <p style="text-indent: 40px">server_name csa.nighthawkcoders.cf;</p>
+
+          <p style="text-indent: 40px">location / {</p>
+          <p style="text-indent: 40px">proxy_pass http://localhost:8080;</p>
+          <p>}</p>
+
+          <h3>Test the configuration to make sure there are no errors:</h3>
+
+          <p>$ sudo ln -s /etc/nginx/sites-available/nighthawk_csa /etc/nginx/sites-enabled</p>
+          <p>$ sudo nginx -t</p>
+
+          <h3>If there are no errors, restart NGINX so the changes take effect:</h3>
+
+          <p>$ sudo systemctl restart nginx</p>
+
+        </details>
+
+        <h2>Prepare Internet to route to Nginx server</h2>
+        <details>
+          <summary>Goto freenom.com and register your public IP Address to a Domain!</summary>
+
+          - Domain and Public IP Address match your nginx configuration files
+          <br>
+          + REPLACE freenom config with your-domain and your-public-ip, make one or more a records for each project
+
+          <h4>This illustration shows configuration of A records within the domain</h4>
+          <img th:src="@{images/freenom.png}" style="width: 1205px;height: 500px;">
+        </details>
+
+        <details>
+          <summary>Port Forward your public IP address access to your Nginx/RPi server!</summary>
+
+          - Your Public IP Address needs to connect to your host on Private IP network through Port Forwarding
+          <br>
+          + PROCESS will vary on every home network, but basic premis is to Port forward external port 80 to your Private Host (aka RPi) on internal port 80
+
+
+          <h4>This illustration shows configuration of HTTP, as well as some other common service to access a Private IP host computer through port forwarding.  It is always recommended to minimize access points from internet to your home network.</h4>
+          <img th:src="@{images/portforward.png}" width="600">
+        </details>
+      </div>
+    </div>
+  </div>
+</div>
+</html>
\ No newline at end of file
Index: src/main/resources/static/css/styles.css
===================================================================
diff --git a/src/main/resources/static/css/styles.css b/src/main/resources/static/css/styles.css
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/static/css/styles.css	
@@ -0,0 +1,47 @@
+html, body{
+    margin: 0;
+    height: 100%;
+    background-color: var(--light_background);
+    color: var(--light_text);
+}
+
+.dark-mode {
+    background-color: var(--dark_background);
+    color: var(--dark_text);
+}
+
+h1{
+    font-size: 5em;
+}
+
+a {
+    color: var(--atag);
+}
+
+.fa{
+    font-size: 3em;
+    letter-spacing: 1em;
+    transition: all .2s;
+    color: var(--fa);
+}
+
+.fa:hover{
+    transform: translateY(10px);
+}
+
+.fa-youtube-play:hover{
+    color: var(--youtube);
+}
+
+.fa-twitter:hover{
+    color: var(--twitter);
+}
+
+.fa-github:hover{
+    color: var(--github);
+}
+
+.navbar-custom .navbar-brand,
+.navbar-custom .navbar-text {
+    color: var(--light_text);
+}
\ No newline at end of file
Index: src/main/resources/static/css/palette.css
===================================================================
diff --git a/src/main/resources/static/css/palette.css b/src/main/resources/static/css/palette.css
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/static/css/palette.css	
@@ -0,0 +1,15 @@
+:root{
+    /* color palette */
+    --red: #cc0000;
+    --green: #9daf9b;
+    --lgreen: #dae4da;
+    --blue: #1da1f2;
+    --lblue: #6084a3;
+    --dblue: #0b227b;
+    --yellow: #f1d483;
+    --purple: #a59aaf;
+    --gray: #c3d6e0;
+    --grey: var(--gray);
+    --white: whitesmoke;
+    --black: black;
+}
\ No newline at end of file
diff --git a/src/main/java/com/nighthawk/csa/NameCheapController.java b/src/main/java/com/nighthawk/csa/NameCheapController.java
new file mode 100644
